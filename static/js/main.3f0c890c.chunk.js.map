{"version":3,"sources":["sidebar/utils/constants.js","sidebar/reducers/tracks.js","sidebar/reducers/albums.js","sidebar/reducers/artists.js","store/store.js","sidebar/images/notrack.svg","sidebar/images/noalbum.svg","sidebar/images/noartist.svg","tierlist/components/Item.jsx","tierlist/imgs/cog-black.svg","tierlist/imgs/palette-black.svg","tierlist/imgs/cog-white.svg","tierlist/imgs/palette-white.svg","tierlist/imgs/cross.svg","tierlist/components/Title.jsx","tierlist/components/Column.jsx","tierlist/imgs/plus.svg","tierlist/components/AddColumnButton.jsx","tierlist/components/ItemPool.jsx","tierlist/imgs/trash-can.svg","tierlist/components/TrashCan.jsx","tierlist/TierListContext.js","sidebar/utils/api.js","sidebar/actions/result.js","sidebar/components/TracksList.js","sidebar/components/AlbumsList.js","sidebar/components/ArtistsList.js","sidebar/components/SearchResult.js","sidebar/components/SearchForm.js","sidebar/components/Loader.js","sidebar/components/Dashboard.js","sidebar/SidebarSearch.js","tierlist/imgs/search.svg","tierlist/imgs/playlist.svg","tierlist/TierList.js","index.js"],"names":["SET_TRACKS","ADD_TRACKS","SET_ALBUMS","ADD_ALBUMS","SET_ARTISTS","ADD_ARTISTS","tracksReducer","state","action","tracks","type","next","items","albumsReducer","albums","artistsReducer","artists","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunk","ItemContent","styled","div","props","isDragging","ItemSmall","small","Item","draggableId","this","item","id","index","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","Card","style","margin","Container","Row","Col","xs","className","target","href","songURL","rel","onDragStart","e","preventDefault","imgURL","Img","src","alt","notrack","noalbum","noartist","Body","Title","title","subtitle","Text","React","Component","TitleStyle","h3","attrs","backgroundColor","color","InputStyle","textarea","ButtonStyle","button","inputRef","useRef","useState","colData","setID","setTitle","setColor","useColor","color_p","setColor_P","inputVisible","setInputVisible","colorPickerVisible","setcolorPickerVisible","deleteModalShow","setdeleteModalShow","update","updateHeader","deleteCol","deleteHandler","presetColors","onClickOutSide","current","contains","hex","setEditing","useEffect","document","addEventListener","removeEventListener","showDeleteButton","position","onClick","itemIds","length","Image","cross","fluid","width","height","Modal","show","onHide","size","Header","closeButton","closeVariant","Footer","Button","variant","Fragment","display","alignItems","onSubmit","value","onChange","Dropdown","autoClose","as","ButtonGroup","drop","onToggle","isOpen","OverlayTrigger","placement","overlay","Tooltip","Toggle","hsv","v","palette_white","palette_black","Menu","h","newHSV","toColor","setBorderColor","hideRGB","hideHSV","dark","map","idx","ToggleButton","textShadow","wordBreak","flexGrow","overflow","settings_white","settings_black","isDragDisabled","bdColorDark","bdColor","ItemList","isDraggingOver","bgColor","InnerList","nextProps","Column","isEditing","borderColor","column","newColor","a","toggleEditMode","getDarkBorderColor","setState","droppableId","snapshot2","droppableProps","getBodyColor","placeholder","AddColumnButton","addHandler","plus","ItemPool","TrashHeading","h1","TrashCan","trash","transition","filter","initialData","data","columns","columnOrder","containsItem","addToItemPool","deleteFromItemPool","TierListContext","createContext","setAuthHeader","params","JSON","parse","localStorage","getItem","axios","defaults","headers","common","error","console","log","get","url","result","getAuthToken","process","Accept","auth","username","password","grant_type","post","qs","stringify","response","setTracks","setAlbums","setArtists","initiateGetResult","searchTerm","dispatch","API_URL","encodeURIComponent","initiateLoadMoreTracks","initiateLoadMoreAlbums","initiateLoadMoreArtists","TracksList","updater","setUpdater","Object","keys","track","external_urls","spotify","name","artist","join","_","isEmpty","album","images","Consumer","AlbumsList","ArtistsList","SearchResult","loadMore","setCategory","selectedCategory","SearchForm","setSearchTerm","errorMsg","setErrorMsg","Form","event","trim","handleSearch","Group","controlId","Control","autoComplete","Loader","createElement","node","loader","querySelector","appendChild","classList","add","remove","body","ReactDOM","createPortal","children","connect","isLoading","setIsLoading","updateCategory","setSelectedCategory","isValidSession","refreshSession","then","Spinner","animation","role","marginRight","category","SidebarSearch","newState","access_token","expires_in","setItem","Date","getTime","loaded","expiryTime","currentTime","refreshSidebar","saveFileTypes","refreshColumns","showSearchbar","showItemPool","itemMap","itemId","PureComponent","TierList","sessionStorage","LZString","decompress","context","saveStateToStorage","compress","importFromJson","fileReader","FileReader","readAsText","files","onload","Array","isArray","hasValidColumns","requiredColumnKeys","forEach","key","columnKeys","every","i","allColumns","splice","indexOf","el","includes","hasValidItems","requiredItemKeys","itemKeys","allItems","concat","deleteItem","source","home","homeitemIds","from","newHome","oldItems","newItems","reduce","object","updateColHeader","newTitle","oldHeader","newHeader","addNewCol","ID","newColumnOrder","removeCol","keepItems","oldColumns","newColumns","resetAllItems","removeAllItems","resetAllColumns","resetTierList","showSearch","getElementById","showItems","onDragEnd","destination","foreign","foreignitemIds","newForeign","newitemIds","newItemIds","newItemPool","delIndex","fileType","saveIMG","dataUrl","link","download","click","tierlist","displayWidth","getBoundingClientRect","fullWidth","scrollWidth","fullHeight","scrollHeight","toJpeg","pixelRatio","catch","err","toPng","toSvg","flexDirection","flexWrap","justifyContent","DropdownButton","menuVariant","menuRole","saveAsIMG","onSelect","ItemText","htmlFor","accept","direction","columnId","items_img","Offcanvas","scroll","backdrop","padding","search_img","paddingBottom","overflowY","contextType","render","Provider"],"mappings":"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","file":"static/js/main.3f0c890c.chunk.js","sourcesContent":["export const SET_TRACKS = 'SET_TRACKS';\r\nexport const ADD_TRACKS = 'ADD_TRACKS';\r\nexport const SET_ALBUMS = 'SET_ALBUMS';\r\nexport const ADD_ALBUMS = 'ADD_ALBUMS';\r\nexport const SET_ARTISTS = 'SET_ARTISTS';\r\nexport const ADD_ARTISTS = 'ADD_ARTISTS';","import { SET_TRACKS, ADD_TRACKS } from '../utils/constants';\r\n\r\nconst tracksReducer = (state = {}, action) => {\r\n  const { tracks } = action;\r\n  switch (action.type) {\r\n    case SET_TRACKS:\r\n      return tracks;\r\n    case ADD_TRACKS:\r\n      return {\r\n        ...state,\r\n        next: tracks.next,\r\n        items: [...state.items, ...tracks.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tracksReducer;","import { SET_ALBUMS, ADD_ALBUMS } from '../utils/constants';\r\n\r\nconst albumsReducer = (state = {}, action) => {\r\n  const { albums } = action;\r\n  switch (action.type) {\r\n    case SET_ALBUMS:\r\n      return albums;\r\n    case ADD_ALBUMS:\r\n      return {\r\n        ...state,\r\n        next: albums.next,\r\n        items: [...state.items, ...albums.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default albumsReducer;","import { SET_ARTISTS, ADD_ARTISTS } from '../utils/constants';\r\n\r\nconst artistsReducer = (state = {}, action) => {\r\n  const { artists } = action;\r\n  switch (action.type) {\r\n    case SET_ARTISTS:\r\n      return artists;\r\n    case ADD_ARTISTS:\r\n      return {\r\n        ...state,\r\n        next: artists.next,\r\n        items: [...state.items, ...artists.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default artistsReducer;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport tracksReducer from '../sidebar/reducers/tracks';\r\nimport albumsReducer from '../sidebar/reducers/albums';\r\nimport artistsReducer from '../sidebar/reducers/artists';\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    tracks: tracksReducer,\r\n    albums: albumsReducer,\r\n    artists: artistsReducer\r\n  }),\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","export default __webpack_public_path__ + \"static/media/notrack.f41ca20b.svg\";","export default __webpack_public_path__ + \"static/media/noalbum.0fe44c37.svg\";","export default __webpack_public_path__ + \"static/media/noartist.bd17ebca.svg\";","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { Card, Container, Row, Col } from 'react-bootstrap';\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport notrack from '../../sidebar/images/notrack.svg';\r\nimport noalbum from '../../sidebar/images/noalbum.svg';\r\nimport noartist from '../../sidebar/images/noartist.svg';\r\n\r\nconst ItemContent = styled.div`\r\n  background-color: ${props => (props.isDragging ? '#535353' : 'none')};\r\n  border-radius: 4px;\r\n`;\r\n\r\nconst ItemSmall = styled.small`\r\n  color: ${props => (props.isDragging ? 'white !important' : '#A4A4A4')};\r\n`;\r\n\r\nexport default class Item extends React.Component {\r\n    render() {\r\n      return (\r\n        <Draggable draggableId={this.props.item.id} index={this.props.index}>\r\n          {(provided, snapshot) => (\r\n            <ItemContent\r\n              {...provided.draggableProps}\r\n              {...provided.dragHandleProps}\r\n              ref={provided.innerRef}\r\n              isDragging={snapshot.isDragging}\r\n            >\r\n              <Card style={{ margin: 0 }}>\r\n                <Container>\r\n                  <Row>\r\n                    <Col xs=\"auto\">\r\n                      <a\r\n                        className=\"card-img-link\"\r\n                        target=\"_blank\"\r\n                        href={this.props.item.songURL}\r\n                        rel=\"noopener noreferrer\"\r\n                        onDragStart={e => e.preventDefault()}\r\n                      >\r\n                        {this.props.item.imgURL ? (\r\n                          <Card.Img src={this.props.item.imgURL} alt=\"\" />\r\n                        ) : (\r\n                          <Card.Img src={this.props.item.type === \"track\" ? notrack : this.props.item.type === \"album\" ? noalbum : noartist } alt=\"\" />\r\n                        )}\r\n                      </a>\r\n                    </Col>\r\n                    <Col>\r\n                      <Card.Body>\r\n                        <Card.Title>{this.props.item.title}</Card.Title>\r\n                        {this.props.item.subtitle &&\r\n                          <Card.Text>\r\n                            <ItemSmall isDragging={snapshot.isDragging}>\r\n                              {this.props.item.subtitle}\r\n                            </ItemSmall>\r\n                          </Card.Text>\r\n                        }\r\n                      </Card.Body>\r\n                    </Col>\r\n                  </Row>\r\n                </Container>\r\n              </Card>\r\n            </ItemContent>\r\n          )}\r\n        </Draggable>\r\n      );\r\n    }\r\n  }","export default __webpack_public_path__ + \"static/media/cog-black.a361acd8.svg\";","export default __webpack_public_path__ + \"static/media/palette-black.d38e1bfc.svg\";","export default __webpack_public_path__ + \"static/media/cog-white.07854ec9.svg\";","export default __webpack_public_path__ + \"static/media/palette-white.3218a162.svg\";","export default __webpack_public_path__ + \"static/media/cross.86d4de87.svg\";","import React, { useState, useRef, useEffect } from 'react';\r\nimport { Image, Dropdown, Button, ButtonGroup, OverlayTrigger, Tooltip, ToggleButton, Modal } from 'react-bootstrap';\r\nimport { ColorPicker, useColor, toColor } from \"react-color-palette\";\r\nimport styled from 'styled-components';\r\nimport settings_black from '../imgs/cog-black.svg'\r\nimport palette_black from '../imgs/palette-black.svg'\r\nimport settings_white from '../imgs/cog-white.svg'\r\nimport palette_white from '../imgs/palette-white.svg'\r\nimport cross from '../imgs/cross.svg'\r\nimport \"react-color-palette/lib/css/styles.css\";\r\nimport '../tierlist-styles.css'\r\n\r\nconst TitleStyle = styled.h3.attrs(props => ({\r\n  style: {\r\n    backgroundColor: props.color,\r\n  },\r\n  }))`padding: 8px;\r\n  margin-bottom: 0;\r\n  display: flex;\r\n  max-width: 18.25rem;\r\n  user-select: none;\r\n  font-size: 1.875rem;\r\n`;\r\n\r\nconst InputStyle = styled.textarea`\r\n    flex-grow: 1;\r\n    overflow: hidden;\r\n    word-break: break-all;\r\n    min-height: 40px;\r\n    max-width: 14.25rem;\r\n    height: 40px;\r\n    resize: both;\r\n`;\r\n\r\nconst ButtonStyle = styled.button`\r\n    width: 40px;\r\n    min-width: 40px;\r\n    height: 40px;\r\n    margin-left: 8px;\r\n    outline: none;\r\n    background: transparent;\r\n    border: none;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst Title = props => {\r\n  const inputRef = useRef(null);\r\n  const [id, setID] = useState(props.colData.id);\r\n  const [title, setTitle] = useState(props.colData.title);\r\n  const [color, setColor] = useState(props.colData.color);\r\n  const [color_p, setColor_P] = useColor(\"hex\", props.colData.color);\r\n  const [inputVisible, setInputVisible] = useState(false);\r\n  const [colorPickerVisible, setcolorPickerVisible] = useState(false);\r\n  const [deleteModalShow, setdeleteModalShow] = useState(false);\r\n  const update = props.updateHeader;\r\n  const deleteCol = props.deleteHandler;\r\n  const presetColors = props.presetColors;\r\n\r\n\r\n  function onClickOutSide(e) {\r\n    if (inputRef.current && !inputRef.current.contains(e.target)) {\r\n      setInputVisible(false);\r\n      if(colorPickerVisible) {\r\n        setcolorPickerVisible(false);\r\n        update(id, title, color_p.hex); \r\n      }\r\n      props.setEditing(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (inputVisible) document.addEventListener(\"mousedown\", onClickOutSide);\r\n    return () => { document.removeEventListener(\"mousedown\", onClickOutSide); };\r\n  });\r\n\r\n  useEffect(() => {\r\n    setID(props.colData.id);\r\n    setTitle(props.colData.title);\r\n    setColor(props.colData.color);\r\n  }, [props.colData]);\r\n\r\n  return (\r\n    <div>\r\n      {props.showDeleteButton && (\r\n          <div style={{position: \"relative\"}}>\r\n            <button className=\"column-remove-button\" onClick={() => props.colData.itemIds.length > 0 ? setdeleteModalShow(true) : deleteCol(id, false)}>\r\n              <Image onDragStart={e => e.preventDefault()} src={cross} fluid alt='delete column' style={{width: \"75%\", height: \"75%\"}}/>\r\n            </button>\r\n          </div>\r\n      )}\r\n      <Modal id=\"delete-modal\" show={deleteModalShow} onHide={() => setdeleteModalShow(false)} size=\"sm\">\r\n        <Modal.Header closeButton closeVariant=\"white\">\r\n          <Modal.Title>Confirm Delete</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Do you want to keep or delete the column contents?\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"success\" id=\"keep-items\" onClick={() => {setdeleteModalShow(false); deleteCol(id, true);}}>Keep</Button>\r\n          <Button variant=\"danger\" id=\"delete-items\" onClick={() => {setdeleteModalShow(false); deleteCol(id, false);}}>Delete</Button>\r\n          <Button variant=\"secondary\" id=\"cancel-delete-btn\" onClick={() => {setdeleteModalShow(false);}}>Cancel</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <TitleStyle color={color_p.hex}>\r\n        <React.Fragment>\r\n          {inputVisible ? (\r\n            <form style={{width: \"100%\", display: \"flex\", alignItems: \"center\"}} onSubmit={() => { setInputVisible(false); props.setEditing(false); }} ref={inputRef}>\r\n              <InputStyle\r\n                value={title}\r\n                onChange={e => {\r\n                  setTitle(e.target.value);\r\n                  update(id, e.target.value, color);\r\n                }}\r\n              />\r\n              <Dropdown autoClose=\"inside\" as={ButtonGroup} drop=\"right\"\r\n                onToggle={(isOpen) => {\r\n                  setcolorPickerVisible(isOpen);\r\n                  if(!isOpen) update(id, title, color_p.hex);\r\n                }}\r\n              >\r\n                <OverlayTrigger\r\n                  placement={'top'}\r\n                  overlay={<Tooltip>Edit Color</Tooltip>}\r\n                >\r\n                  <Dropdown.Toggle id='color-toggle' variant=\"secondary\">\r\n                    <Image onDragStart={e => e.preventDefault()} src={color_p.hsv.v < 50 ? palette_white : palette_black} fluid alt='colors' style={{width: \"100%\", height: \"100%\"}}/>\r\n                  </Dropdown.Toggle>\r\n                </OverlayTrigger>\r\n                <Dropdown.Menu id='color-dropdown' variant=\"dark\">\r\n                  <ColorPicker height={160} width={240} color={color_p} onChange={e => {\r\n                    if(e.hsv.h >= 360) {\r\n                      let newHSV = e.hsv;\r\n                      newHSV.h = 360;\r\n                      e = toColor(\"hsv\", newHSV);\r\n                    }\r\n                    setColor_P(e);\r\n                    props.setBorderColor(e.hex);\r\n                  }} hideRGB hideHSV dark />\r\n\r\n                  <div id=\"preset-colors\">\r\n                    {presetColors.map((color, idx) => (\r\n                      <ToggleButton\r\n                        key={idx}\r\n                        className = \"preset-color-button\"\r\n                        id={`color-${idx}`}\r\n                        type=\"radio\"\r\n                        variant=\"light\"\r\n                        style={{backgroundColor: color}}\r\n                        onChange={() => {setColor_P(toColor(\"hex\", color)); props.setBorderColor(color);}}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </form>\r\n          ) : (\r\n            <div style={{width: \"100%\", display: \"flex\", alignItems: \"center\"}}>\r\n              <div style={{color: \"white\", textShadow: \"0 0 4px black\", wordBreak: \"break-all\", flexGrow: \"1\", overflow: \"hidden\"}}>{title}</div>\r\n                <OverlayTrigger\r\n                  placement={'top'}\r\n                  overlay={<Tooltip>Edit Column</Tooltip>}\r\n                >\r\n                <ButtonStyle onClick={() => { setInputVisible(true); props.setEditing(true); }}>\r\n                  <Image onDragStart={e => e.preventDefault()} src={color_p.hsv.v < 50 ? settings_white : settings_black} fluid alt='settings' style={{width: \"100%\", height: \"100%\"}}/>\r\n                </ButtonStyle> \r\n              </OverlayTrigger>\r\n            </div>\r\n          )}\r\n        </React.Fragment>\r\n      </TitleStyle>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Title; ","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { toColor } from \"react-color-palette\";\r\nimport Item from './Item';\r\nimport Title from './Title'\r\n\r\nconst Container = styled.div`\r\n  border: 4px solid ${props => props.isDragDisabled ? props.bdColorDark : props.bdColor};\r\n  margin: 8px;\r\n  background-color: none;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ItemList = styled.div`\r\n  padding: 8px;\r\n  background-color: ${props => props.isDraggingOver || props.isDragging ? props.bgColor : 'none'};\r\n  transition: background-color 0.2s ease;\r\n  flex-grow: 1;\r\n  min-width: 18.25rem;\r\n  min-height: 20rem;\r\n`;\r\n\r\nclass InnerList extends React.Component {\r\n  shouldComponentUpdate(nextProps) {\r\n    if (nextProps.items === this.props.items) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  render() {\r\n    return this.props.items.map((item, index) => (\r\n      <Item key={item.id} item={item} index={index} />\r\n    ));\r\n  }\r\n}\r\n\r\nexport default class Column extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEditing: false,\r\n      borderColor: this.props.column.color\r\n    }\r\n  }\r\n\r\n  getDarkBorderColor(color) {\r\n    let newColor = toColor(\"hex\", color).hsv;\r\n    newColor.a = 0.77;\r\n    return toColor(\"hsv\", newColor).hex;\r\n  }\r\n\r\n  getBodyColor(color) {\r\n    let newColor = toColor(\"hex\", color).hsv;\r\n    newColor.v = newColor.v / 2;\r\n    newColor.a = 0.64;\r\n    return toColor(\"hsv\", newColor).hex;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Draggable draggableId={this.props.column.id} index={this.props.index} isDragDisabled={this.state.isEditing || this.props.toggleEditMode}>\r\n        {(provided, snapshot) => (\r\n          <Container\r\n            {...provided.draggableProps}\r\n            ref={provided.innerRef}\r\n            isDragDisabled={this.props.toggleEditMode}\r\n            bdColor={this.state.borderColor}\r\n            bdColorDark={this.getDarkBorderColor(this.state.borderColor)}\r\n          >\r\n            <div {...provided.dragHandleProps}>\r\n              <Title\r\n                colData={this.props.column}\r\n                updateHeader={this.props.updateHeader}\r\n                deleteHandler={this.props.deleteHandler}\r\n                showDeleteButton={this.props.toggleEditMode}\r\n                presetColors={this.props.presetColors}\r\n                setEditing={(e) => this.setState({ isEditing: e })}\r\n                setBorderColor={(color) => this.setState({ borderColor: color })}\r\n              />\r\n            </div>\r\n            <Droppable droppableId={this.props.column.id} type=\"item\">\r\n              {(provided, snapshot2) => (\r\n                <ItemList\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  isDragging={snapshot.isDragging}\r\n                  isDraggingOver={snapshot2.isDraggingOver}\r\n                  bgColor={this.getBodyColor(this.props.column.color)}\r\n                >\r\n                  <InnerList items={this.props.items} />\r\n                  {provided.placeholder}\r\n                </ItemList>\r\n              )}\r\n            </Droppable>\r\n          </Container>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/plus.399e19eb.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport { Image } from 'react-bootstrap';\r\nimport plus from '../../tierlist/imgs/plus.svg'\r\n\r\nconst Container = styled.div`\r\n  background-color: none;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 22rem;\r\n`;\r\n\r\nexport default class AddColumnButton extends React.Component {\r\n  render() {\r\n    return (\r\n      <Draggable draggableId={`add-btn-${this.props.index}`} index={this.props.index} isDragDisabled={true}> \r\n        {(provided) => (\r\n          <Container\r\n            {...provided.draggableProps}\r\n            ref={provided.innerRef}\r\n          >\r\n            <button className=\"column-add-button\" onClick={() => this.props.addHandler(this.props.index)}>\r\n              <Image onDragStart={e => e.preventDefault()} src={plus} fluid alt='add column' style={{width: \"62.5%\", height: \"62.5%\"}}/>\r\n            </button>\r\n          </Container>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport Item from './Item';\r\n\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  border: 1px solid #1DB954;\r\n  background-color: none;\r\n  border-radius: 2px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 19.43rem;\r\n  height: calc(100vh - 11.375rem);\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst ItemList = styled.div`\r\n  padding: 8px;\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${props => props.isDraggingOver ? '#282828' : 'none'};\r\n  flex-grow: 1;\r\n`;\r\n\r\nclass InnerList extends React.Component {\r\n  shouldComponentUpdate(nextProps) {\r\n    if (nextProps.items === this.props.items) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  render() {\r\n    return this.props.items.map((item, index) => (\r\n      <Item key={item.id} item={item} index={index} />\r\n    ));\r\n  }\r\n}\r\n\r\nexport default class ItemPool extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Droppable droppableId=\"item-pool\" type=\"item\">\r\n          {(provided, snapshot) => (\r\n            <ItemList\r\n              ref={provided.innerRef}\r\n              {...provided.droppableProps}\r\n              isDraggingOver={snapshot.isDraggingOver}\r\n            >\r\n              <InnerList items={this.props.items} />\r\n              {provided.placeholder}\r\n            </ItemList>\r\n          )}\r\n        </Droppable>\r\n      </Container>\r\n    );\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/trash-can.26a1eb4d.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport { Image } from 'react-bootstrap';\r\nimport trash from '../imgs/trash-can.svg'\r\n\r\nconst Container = styled.div`\r\n  margin: 0.5rem auto;\r\n  border: 1px solid ${props => props.isDraggingOver ? 'red' : 'darkred'};\r\n  transition: border 0.2s ease;\r\n  background-color: none;\r\n  border-radius: 2px;\r\n  width: 19.43rem;\r\n  height: 4.75rem;\r\n  max-height: 4.75rem;\r\n  overflow-y: hidden;\r\n`;\r\n\r\nconst ItemList = styled.div`\r\n  padding: 8px;\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${props => props.isDraggingOver ? '#530000' : 'none'};\r\n  height: 100%;\r\n`;\r\n\r\nconst TrashHeading = styled.h1`\r\n  color: ${props => props.isDraggingOver ? 'red' : '#BB0000'};\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst defaultTrashColor = \"invert(8%) sepia(98%) saturate(5962%) hue-rotate(2deg) brightness(93%) contrast(110%)\";\r\nconst highlightTrashColor = \"invert(11%) sepia(77%) saturate(7498%) hue-rotate(6deg) brightness(105%) contrast(118%)\";\r\n\r\nexport default class TrashCan extends React.Component {\r\n  render() {\r\n    return (\r\n      <Droppable droppableId=\"trash-can\" type=\"item\">\r\n        {(provided, snapshot) => (\r\n          <div style={{position: \"relative\"}}>\r\n            <TrashHeading className=\"main-heading\" isDraggingOver={snapshot.isDraggingOver}>\r\n             <Image src={trash} fluid alt='trash can' style={{width: \"4rem\", transition: \"filter 0.2s ease\", filter: snapshot.isDraggingOver ? highlightTrashColor : defaultTrashColor}}/>\r\n            </TrashHeading>\r\n            <Container isDraggingOver={snapshot.isDraggingOver}>\r\n              <ItemList\r\n                ref={provided.innerRef}\r\n                {...provided.droppableProps}\r\n                isDraggingOver={snapshot.isDraggingOver}\r\n              >\r\n                {provided.placeholder}\r\n              </ItemList>\r\n            </Container>\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nexport const initialData = {\r\n  data: {\r\n    items: {},\r\n    columns: {\r\n      'column-1': {\r\n        id: 'column-1',\r\n        title: 'S',\r\n        color: '#DC3CA0',\r\n        itemIds: [],\r\n      },\r\n      'column-2': {\r\n        id: 'column-2',\r\n        title: 'A',\r\n        color: '#F63E02',\r\n        itemIds: [],\r\n      },\r\n      'column-3': {\r\n        id: 'column-3',\r\n        title: 'B',\r\n        color: '#F5B700',\r\n        itemIds: [],\r\n      },\r\n      'column-4': {\r\n        id: 'column-4',\r\n        title: 'C',\r\n        color: '#1DB954',\r\n        itemIds: [],\r\n      },\r\n      'item-pool': {\r\n        id: 'item-pool',\r\n        itemIds: [],\r\n      }\r\n    },\r\n    columnOrder: ['column-1', 'column-2', 'column-3','column-4']\r\n  },\r\n  containsItem: (id) => {},\r\n  addToItemPool: (id, type, songURL, imgURL, title, subtitle) => {},\r\n  deleteFromItemPool: (id, type) => {}\r\n}\r\n\r\nexport const TierListContext = React.createContext(initialData);","import axios from 'axios';\r\nimport qs from 'qs';\r\n\r\nexport const setAuthHeader = () => {\r\n  try {\r\n    const params = JSON.parse(localStorage.getItem('params'));\r\n    if (params) {\r\n      axios.defaults.headers.common[\r\n        'Authorization'\r\n      ] = `Bearer ${params}`;\r\n    }\r\n  } catch (error) {\r\n    console.log('Error setting auth', error);\r\n  }\r\n};\r\n\r\nexport const get = async (url, params) => {\r\n  setAuthHeader();\r\n  const result = await axios.get(url, params);\r\n  return result.data;\r\n};\r\n\r\nexport const post = async (url, params) => {\r\n  setAuthHeader();\r\n  const result = await axios.post(url, params);\r\n  return result.data;\r\n};\r\n\r\nexport const getAuthToken = async () => {\r\n  const clientId = process.env.REACT_APP_CLIENT_ID;\r\n  const clientSecret = process.env.REACT_APP_CLIENT_SECRET;\r\n  \r\n  const headers = {\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    auth: {\r\n      username: clientId,\r\n      password: clientSecret,\r\n    },\r\n  };\r\n  const data = {\r\n    grant_type: 'client_credentials',\r\n  };\r\n\r\n  try {\r\n    const response = await axios.post(\r\n      'https://accounts.spotify.com/api/token',\r\n      qs.stringify(data),\r\n      headers\r\n    );\r\n    return response.data;\r\n  } catch (error) { console.log(error); }\r\n};","import {\r\n  SET_ALBUMS,\r\n  ADD_ALBUMS,\r\n  SET_ARTISTS,\r\n  ADD_ARTISTS,\r\n  SET_TRACKS,\r\n  ADD_TRACKS\r\n} from '../utils/constants';\r\nimport { get } from '../utils/api';\r\n\r\nexport const setTracks = (tracks) => ({\r\n  type: SET_TRACKS,\r\n  tracks\r\n});\r\nexport const addTracks = (tracks) => ({\r\n  type: ADD_TRACKS,\r\n  tracks\r\n});\r\n\r\nexport const setAlbums = (albums) => ({\r\n  type: SET_ALBUMS,\r\n  albums\r\n});\r\nexport const addAlbums = (albums) => ({\r\n  type: ADD_ALBUMS,\r\n  albums\r\n});\r\n\r\nexport const setArtists = (artists) => ({\r\n  type: SET_ARTISTS,\r\n  artists\r\n});\r\nexport const addArtists = (artists) => ({\r\n  type: ADD_ARTISTS,\r\n  artists\r\n});\r\n\r\nexport const initiateGetResult = (searchTerm) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const API_URL = `https://api.spotify.com/v1/search?query=${encodeURIComponent(\r\n        searchTerm\r\n      )}&type=track,album,artist&limit=24`;\r\n      const result = await get(API_URL);\r\n      console.log(result);\r\n      const { tracks, albums, artists } = result;\r\n      dispatch(setTracks(tracks));\r\n      dispatch(setAlbums(albums));\r\n      return dispatch(setArtists(artists));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateLoadMoreTracks = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log('url', url);\r\n      const result = await get(url);\r\n      console.log('categories', result);\r\n      return dispatch(addTracks(result.tracks));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateLoadMoreAlbums = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log('url', url);\r\n      const result = await get(url);\r\n      console.log('categories', result);\r\n      return dispatch(addAlbums(result.albums));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateLoadMoreArtists = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log('url', url);\r\n      const result = await get(url);\r\n      console.log('categories', result);\r\n      return dispatch(addArtists(result.artists));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Card, Container, Row, Col, Image } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport notrack from '../images/notrack.svg';\r\nimport cross from '../../tierlist/imgs/cross.svg'\r\nimport plus from '../../tierlist/imgs/plus.svg'\r\nimport { TierListContext } from '../../tierlist/TierListContext';\r\n\r\nconst TracksList = ({ tracks }) => {\r\n  const [updater, setUpdater] = useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(tracks).length > 0 && (\r\n        <div className=\"tracks\">\r\n          {tracks.items.map((track, index) => {\r\n            let id = track.id, type = 'track', songURL = track.external_urls.spotify, title = track.name, subtitle = track.artists.map((artist) => artist.name).join(', ');\r\n            let imgURL = !_.isEmpty(track.album.images) ? track.album.images[0].url : null;\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <TierListContext.Consumer>\r\n                  {({containsItem, addToItemPool, deleteFromItemPool}) => (\r\n                    <Card className=\"search-card\" style={{margin: \"0.25rem 0\", backgroundColor: containsItem(id, type) ? \"black\" : \"\"}}>\r\n                      <Container>\r\n                        <Row>\r\n                          <Col xs=\"auto\">\r\n                            <a\r\n                              className=\"card-img-link\"\r\n                              target=\"_blank\"\r\n                              href={songURL}\r\n                              rel=\"noopener noreferrer\"\r\n                              style={{filter: containsItem(id, type) ? \"brightness(50%)\" : \"brightness(100%)\"}}\r\n                              onDragStart={e => e.preventDefault()}\r\n                            >\r\n                              {!_.isEmpty(track.album.images) ? (\r\n                                <Card.Img src={imgURL} alt=\"track album cover\" />\r\n                              ) : (\r\n                                <Card.Img src={notrack} alt=\"default album cover\" />\r\n                              )}\r\n                            </a>\r\n                          </Col>\r\n                          <Col>\r\n                            <Card.Body>\r\n                              <Card.Title style={{color: containsItem(id, type) ? \"#555\" : \"\"}}>{title}</Card.Title>\r\n                              <Card.Text>\r\n                                <small style={{color: containsItem(id, type) ?  \"#555\" : \"\"}}>{subtitle}</small>\r\n                              </Card.Text>\r\n                              <div>\r\n                                {containsItem(id, type) ? (\r\n                                  <button className=\"remove-buttons\" onClick={() => {\r\n                                    deleteFromItemPool(id, type);\r\n                                    setUpdater(!updater);\r\n                                  }}>\r\n                                    <Image onDragStart={e => e.preventDefault()} src={cross} fluid alt='remove track' style={{width: \"75%\", height: \"75%\"}}/>\r\n                                  </button>\r\n                                ) : (\r\n                                  <button className=\"item-buttons\" onClick={() => {\r\n                                    addToItemPool(id, type, songURL, imgURL, title, subtitle);\r\n                                    setUpdater(!updater);\r\n                                  }}>\r\n                                    <Image onDragStart={e => e.preventDefault()} src={plus} fluid alt='add track' style={{width: \"62.5%\", height: \"62.5%\"}}/>\r\n                                  </button>\r\n                                )}\r\n                              </div>\r\n                            </Card.Body>\r\n                          </Col>\r\n                        </Row>\r\n                      </Container>\r\n                    </Card>\r\n                  )}\r\n                </TierListContext.Consumer>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TracksList;","import React, { useState } from 'react';\r\nimport { Card, Container, Row, Col, Image } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport noalbum from '../images/noalbum.svg';\r\nimport cross from '../../tierlist/imgs/cross.svg'\r\nimport plus from '../../tierlist/imgs/plus.svg'\r\nimport { TierListContext } from '../../tierlist/TierListContext';\r\n\r\nconst AlbumsList = ({ albums }) => {\r\n  const [updater, setUpdater] = useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(albums).length > 0 && (\r\n        <div className=\"albums\">\r\n          {albums.items.map((album, index) => {\r\n            let id = album.id, type = 'album', songURL = album.external_urls.spotify, title = album.name, subtitle = album.artists.map((artist) => artist.name).join(', ');\r\n            let imgURL = !_.isEmpty(album.images) ? album.images[0].url : null;\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <TierListContext.Consumer>\r\n                  {({containsItem, addToItemPool, deleteFromItemPool}) => (\r\n                    <Card className=\"search-card\" style={{margin: \"0.25rem 0\", backgroundColor: containsItem(id, type) ? \"black\" : \"\"}}>\r\n                      <Container>\r\n                        <Row>\r\n                          <Col xs=\"auto\">\r\n                            <a\r\n                              className=\"card-img-link\"\r\n                              target=\"_blank\"\r\n                              href={songURL}\r\n                              rel=\"noopener noreferrer\"\r\n                              style={{filter: containsItem(id, type) ? \"brightness(50%)\" : \"brightness(100%)\"}}\r\n                              onDragStart={e => e.preventDefault()}\r\n                            >\r\n                              {!_.isEmpty(album.images) ? (\r\n                                <Card.Img src={album.images[0].url} alt=\"album cover\" />\r\n                              ) : (\r\n                                <Card.Img src={noalbum} alt=\"default album cover\" />\r\n                              )}\r\n                            </a>\r\n                          </Col>\r\n                          <Col>\r\n                            <Card.Body>\r\n                              <Card.Title style={{color: containsItem(id, type) ? \"#555\" : \"\"}}>{title}</Card.Title>\r\n                              <Card.Text>\r\n                                <small style={{color: containsItem(id, type) ?  \"#555\" : \"\"}}>{subtitle}</small>\r\n                              </Card.Text>\r\n                              <div>\r\n                                {containsItem(id, type) ? (\r\n                                  <button className=\"remove-buttons\" onClick={() => {\r\n                                    deleteFromItemPool(id, type);\r\n                                    setUpdater(!updater);\r\n                                  }}>\r\n                                    <Image onDragStart={e => e.preventDefault()} src={cross} fluid alt='remove album' style={{width: \"75%\", height: \"75%\"}}/>\r\n                                  </button>\r\n                                ) : (\r\n                                  <button className=\"item-buttons\" onClick={() => {\r\n                                    addToItemPool(id, type, songURL, imgURL, title, subtitle);\r\n                                    setUpdater(!updater);\r\n                                  }}>\r\n                                    <Image onDragStart={e => e.preventDefault()} src={plus} fluid alt='add album' style={{width: \"62.5%\", height: \"62.5%\"}}/>\r\n                                  </button>\r\n                                )}\r\n                              </div>\r\n                            </Card.Body>\r\n                          </Col>\r\n                          <Col xs=\"auto\">\r\n                          </Col>\r\n                        </Row>\r\n                      </Container>\r\n                    </Card>\r\n                  )}\r\n                </TierListContext.Consumer>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AlbumsList;","import React, { useState } from 'react';\r\nimport { Card, Container, Row, Col, Image } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport noartist from '../images/noartist.svg';\r\nimport cross from '../../tierlist/imgs/cross.svg'\r\nimport plus from '../../tierlist/imgs/plus.svg'\r\nimport { TierListContext } from '../../tierlist/TierListContext';\r\n\r\nconst ArtistsList = ({ artists }) => {\r\n  const [updater, setUpdater] = useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(artists).length > 0 && (\r\n        <div className=\"artists\">\r\n          {artists.items.map((artist, index) => {\r\n            let id = artist.id, type = 'artist', songURL = artist.external_urls.spotify, title = artist.name, subtitle = null;\r\n            let imgURL = !_.isEmpty(artist.images) ? artist.images[0].url : null;\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <TierListContext.Consumer>\r\n                  {({containsItem, addToItemPool, deleteFromItemPool}) => (\r\n                    <Card className=\"search-card\" style={{margin: \"0.25rem 0\", backgroundColor: containsItem(id, type) ? \"black\" : \"\"}}>\r\n                      <Container>\r\n                        <Row>\r\n                          <Col xs=\"auto\">\r\n                            <a\r\n                              className=\"card-img-link\"\r\n                              target=\"_blank\"\r\n                              href={songURL}\r\n                              rel=\"noopener noreferrer\"\r\n                              style={{filter: containsItem(id, type) ? \"brightness(50%)\" : \"brightness(100%)\"}}\r\n                              onDragStart={e => e.preventDefault()}\r\n                            >\r\n                              {!_.isEmpty(artist.images) ? (\r\n                                <Card.Img src={artist.images[0].url} alt=\"artist\" />\r\n                              ) : (\r\n                                <Card.Img src={noartist} alt=\"default artist\" />\r\n                              )}\r\n                            </a>\r\n                          </Col>\r\n                          <Col>\r\n                            <Card.Body>\r\n                              <Card.Title style={{color: containsItem(id, type) ? \"#555\" : \"\"}}>{title}</Card.Title>\r\n                              <div>\r\n                                {containsItem(id, type) ? (\r\n                                  <button className=\"remove-buttons\" onClick={() => {\r\n                                    deleteFromItemPool(id, type);\r\n                                    setUpdater(!updater);\r\n                                  }}>\r\n                                    <Image onDragStart={e => e.preventDefault()} src={cross} fluid alt='remove artist' style={{width: \"75%\", height: \"75%\"}}/>\r\n                                  </button>\r\n                                ) : (\r\n                                  <button className=\"item-buttons\" onClick={() => {\r\n                                    addToItemPool(id, type, songURL, imgURL, title, subtitle);\r\n                                    setUpdater(!updater);\r\n                                  }}>\r\n                                    <Image onDragStart={e => e.preventDefault()} src={plus} fluid alt='add artist' style={{width: \"62.5%\", height: \"62.5%\"}}/>\r\n                                  </button>\r\n                                )}\r\n                              </div>\r\n                            </Card.Body>\r\n                          </Col>\r\n                        </Row>\r\n                      </Container>\r\n                    </Card>\r\n                  )}\r\n                </TierListContext.Consumer>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ArtistsList;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport TracksList from './TracksList';\r\nimport AlbumsList from './AlbumsList';\r\nimport ArtistsList from './ArtistsList';\r\n\r\nconst SearchResult = (props) => {\r\n  const { loadMore, result, setCategory, selectedCategory } = props;\r\n  const { tracks, albums, artists } = result;\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"search-buttons\">\r\n        {!_.isEmpty(tracks.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'tracks' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('tracks')}\r\n          >\r\n            Songs\r\n          </button>\r\n        )}\r\n        {!_.isEmpty(albums.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'albums' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('albums')}\r\n          >\r\n            Albums\r\n          </button>\r\n        )}\r\n        {!_.isEmpty(artists.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'artists' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('artists')}\r\n          >\r\n            Artists\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <div className={`${selectedCategory === 'tracks' ? '' : 'hide'}`}>\r\n        {albums && <TracksList tracks={tracks} />}\r\n      </div>\r\n      <div className={`${selectedCategory === 'albums' ? '' : 'hide'}`}>\r\n        {albums && <AlbumsList albums={albums} />}\r\n      </div>\r\n      <div className={`${selectedCategory === 'artists' ? '' : 'hide'}`}>\r\n        {artists && <ArtistsList artists={artists} />}\r\n      </div>\r\n\r\n      {!_.isEmpty(result[selectedCategory]) &&\r\n       !_.isEmpty(result[selectedCategory].next) && (\r\n        <div className=\"load-more\">\r\n          <Button variant=\"info\" type=\"button\" onClick={() => loadMore(selectedCategory)}>\r\n            Load More\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SearchResult;","import React, { useState } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst SearchForm = (props) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n\r\n  const handleInputChange = (event) => {\r\n    const searchTerm = event.target.value;\r\n    setSearchTerm(searchTerm);\r\n  };\r\n\r\n  const handleSearch = (event) => {\r\n    event.preventDefault();\r\n    if (searchTerm.trim() !== '') {\r\n      setErrorMsg('');\r\n      props.handleSearch(searchTerm);\r\n    } else {\r\n      setErrorMsg('Please enter a search term.');\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleSearch}>\r\n        {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Control\r\n            type=\"search\"\r\n            name=\"searchTerm\"\r\n            value={searchTerm}\r\n            placeholder=\"Search here!\"\r\n            onChange={handleInputChange}\r\n            autoComplete=\"off\"\r\n          />\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchForm;","import { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst Loader = (props) => {\r\n  const [node] = useState(document.createElement('div'));\r\n  const loader = document.querySelector('#loader');\r\n\r\n  useEffect(() => {\r\n    loader.appendChild(node).classList.add('message');\r\n  }, [loader, node]);\r\n\r\n  useEffect(() => {\r\n    if (props.show) {\r\n      loader.classList.remove('hide');\r\n      document.body.classList.add('loader-open');\r\n    } else {\r\n      loader.classList.add('hide');\r\n      document.body.classList.remove('loader-open');\r\n    }\r\n  }, [loader, props.show]);\r\n\r\n  return ReactDOM.createPortal(props.children, node);\r\n};\r\nexport default Loader;","import React, { useState } from 'react';\r\nimport {\r\n  initiateGetResult,\r\n  initiateLoadMoreTracks,\r\n  initiateLoadMoreAlbums,\r\n  initiateLoadMoreArtists\r\n} from '../actions/result';\r\nimport { connect } from 'react-redux';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport SearchResult from './SearchResult';\r\nimport SearchForm from './SearchForm';\r\nimport Loader from './Loader';\r\n\r\nconst Dashboard = (props) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedCategory, setSelectedCategory] = [props.selectedCategory, props.updateCategory];\r\n  const { isValidSession, refreshSession } = props;\r\n\r\n  const handleSearch = async (searchTerm) => {\r\n    setIsLoading(true);\r\n    if (!isValidSession()) {\r\n      try { await refreshSession(); } \r\n      catch(error) { console.log(error); }\r\n    }\r\n    props.dispatch(initiateGetResult(searchTerm)).then(() => {\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n\r\n  const loadMore = async (type) => {\r\n    const { dispatch, tracks, albums, artists } = props;\r\n    setIsLoading(true);\r\n    if (!isValidSession()) {\r\n      try { await refreshSession(); }\r\n      catch(error) { console.log(error); }\r\n    }\r\n    switch (type) {\r\n      case 'tracks':\r\n        await dispatch(initiateLoadMoreTracks(tracks.next));\r\n        break;\r\n      case 'albums':\r\n        await dispatch(initiateLoadMoreAlbums(albums.next));\r\n        break;\r\n      case 'artists':\r\n        await dispatch(initiateLoadMoreArtists(artists.next));\r\n        break;\r\n      default:\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const setCategory = (category) => { setSelectedCategory(category); };\r\n\r\n  const { tracks, albums, artists } = props;\r\n  const result = { tracks, albums, artists };\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <SearchForm handleSearch={handleSearch} />\r\n        <Loader show={isLoading}>\r\n          <Spinner animation=\"border\" role=\"status\" style={{marginRight: '0.5rem'}}/>\r\n          Loading...\r\n        </Loader>\r\n        <SearchResult\r\n          result={result}\r\n          loadMore={loadMore}\r\n          setCategory={setCategory}\r\n          selectedCategory={selectedCategory}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tracks: state.tracks,\r\n    albums: state.albums,\r\n    artists: state.artists\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Dashboard);","import React from 'react';\r\nimport Dashboard from './components/Dashboard';\r\nimport { getAuthToken } from './utils/api';\r\n\r\nclass SidebarSearch extends React.Component {\r\n    \r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { loaded: false, selectedCategory: 'tracks' };\r\n    }\r\n\r\n    updateCategory = (category) => {\r\n      const newState = {\r\n        ...this.state,\r\n        selectedCategory: category\r\n      };\r\n      this.setState(newState);\r\n    }\r\n    \r\n    refreshSession = async () => {\r\n        let result;\r\n        try{ result = await getAuthToken(); } \r\n        catch(error) { console.log(error); }\r\n        if(result) {\r\n          const {\r\n              access_token,\r\n              expires_in\r\n          } = result;\r\n          localStorage.setItem('params', JSON.stringify(access_token));\r\n          localStorage.setItem('expiry_time', new Date().getTime() + expires_in * 1000);\r\n          if(!this.loaded) this.setState({ loaded: true });\r\n        }\r\n    }\r\n    \r\n    isValidSession = () => {\r\n        let expiryTime;\r\n        try { expiryTime = JSON.parse(localStorage.getItem('expiry_time')); } \r\n        catch(error) { expiryTime = '0'; }\r\n        const currentTime = new Date().getTime();\r\n        if(currentTime >= expiryTime && this.loaded) this.setState({ loaded: false });\r\n        return currentTime < expiryTime;\r\n    };\r\n\r\n    render() {\r\n        if(!this.isValidSession()) {\r\n          this.refreshSession();\r\n          return (\r\n            <div className=\"sidebar-search\">\r\n              Loading...\r\n            </div>\r\n          );\r\n        }\r\n        return (\r\n          <div className=\"sidebar-search\">\r\n            <Dashboard key={this.props.refreshSidebar} isValidSession={this.isValidSession} refreshSession={this.refreshSession}\r\n              selectedCategory={this.state.selectedCategory} updateCategory={this.updateCategory} />\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SidebarSearch;","export default __webpack_public_path__ + \"static/media/search.75a0c657.svg\";","export default __webpack_public_path__ + \"static/media/playlist.52cda70d.svg\";","import React from 'react';\r\nimport '@atlaskit/css-reset';\r\nimport styled from 'styled-components';\r\nimport Column from './components/Column';\r\nimport AddColumnButton from './components/AddColumnButton';\r\nimport ItemPool from './components/ItemPool';\r\nimport TrashCan from './components/TrashCan';\r\nimport { TierListContext } from './TierListContext';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport { Button, Offcanvas, Dropdown, DropdownButton, OverlayTrigger, Tooltip, Image } from 'react-bootstrap';\r\nimport { toJpeg, toPng, toSvg } from 'html-to-image';\r\nimport LZString from 'lz-string';\r\nimport SidebarSearch from '../sidebar/SidebarSearch'\r\nimport search_img from './imgs/search.svg'\r\nimport items_img from './imgs/playlist.svg'\r\nimport './tierlist-styles.css';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst presetColors = [\"#F63E02\", \"#F5B700\", \"#1DB954\", \"#4D9DE0\", \"#360568\", \"#DC3CA0\"];\r\nconst saveFileTypes = [\"jpeg\", \"png\", \"svg\"];\r\n\r\nlet refreshSidebar = false;\r\nlet refreshColumns = false;\r\nlet showSearchbar = false;\r\nlet showItemPool = false;\r\nlet toggleEditMode = false;\r\n\r\nclass InnerList extends React.PureComponent {\r\n  render() {\r\n    const { column, itemMap, index, updateHeader, deleteHandler, toggleEditMode } = this.props;\r\n    const items = column.itemIds.map(itemId => itemMap[itemId]);\r\n    return <Column key={refreshColumns} column={column} items={items} index={index} updateHeader={updateHeader} deleteHandler={deleteHandler} presetColors={presetColors} toggleEditMode={toggleEditMode}/>;\r\n  }\r\n}\r\n\r\nclass TierList extends React.Component {\r\n  static contextType = TierListContext;\r\n  state = sessionStorage.getItem('saveState') !== null ? JSON.parse(LZString.decompress(sessionStorage.getItem('saveState'))) : this.context.data;\r\n\r\n  saveStateToStorage = () => sessionStorage.setItem('saveState', LZString.compress(JSON.stringify(this.state)));\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"beforeunload\", this.saveStateToStorage);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"beforeunload\", this.saveStateToStorage);\r\n\r\n    this.context.containsItem = (id, type) => {\r\n      if(id in this.state.items) {\r\n        return this.state.items[id]['type'] === type;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    this.context.addToItemPool = (id, type, songURL, imgURL, title, subtitle) => {\r\n      if(this.context.containsItem(id, type)) return; // do nothing\r\n      const newItems = {\r\n        ...this.state.items,\r\n        [id]: {\r\n          id: id,\r\n          type: type,\r\n          songURL: songURL,\r\n          imgURL: imgURL,\r\n          title: title,\r\n          subtitle: subtitle\r\n        }\r\n      }\r\n      const newItemIds = Array.from(this.state.columns['item-pool'].itemIds).concat(id);\r\n      const newItemPool = {\r\n        ...this.state.columns['item-pool'],\r\n        itemIds: newItemIds\r\n      }\r\n      const newState = {\r\n        ...this.state,\r\n        items: newItems,\r\n        columns: {\r\n          ...this.state.columns,\r\n          'item-pool': newItemPool\r\n        }\r\n      };\r\n      this.setState(newState);\r\n    };\r\n    \r\n    this.context.deleteFromItemPool = (id, type) => {\r\n      if(!this.context.containsItem(id, type)) return; // do nothing\r\n      let newItems = this.state.items;\r\n      delete newItems[id];\r\n\r\n      let newColumns = this.state.columns;\r\n      Object.keys(newColumns).forEach(function(key) {\r\n        const delIndex = newColumns[key].itemIds.indexOf(id);\r\n        if(delIndex !== -1) newColumns[key].itemIds.splice(delIndex, 1);\r\n      });\r\n\r\n      const newState = {\r\n        ...this.state,\r\n        items: newItems,\r\n        columns: newColumns\r\n      }\r\n      console.log(newState);\r\n      refreshColumns = !refreshColumns;\r\n      this.setState(newState);\r\n    }\r\n  }\r\n\r\n  // absolutely cursed\r\n  importFromJson = e => {\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\r\n    fileReader.onload = e => {\r\n      const newState = JSON.parse(e.target.result);\r\n      // check if the required keys exist and the item-pool exists in column and has the correct format\r\n      if(!('columnOrder' in newState && 'items' in newState && 'columns' in newState && 'item-pool' in newState.columns\r\n      && 'id' in newState.columns['item-pool'] && newState.columns['item-pool'].id === 'item-pool'\r\n      && 'itemIds' in newState.columns['item-pool'] && Array.isArray(newState.columns['item-pool'].itemIds))) {\r\n        console.log('missing item pool!');\r\n        return;\r\n      }\r\n\r\n      // check if every column has the correct format\r\n      let hasValidColumns = true;\r\n      const requiredColumnKeys = ['id', 'title', 'color', 'itemIds'];\r\n      Object.keys(newState.columns).forEach(function(key) {\r\n        if(!hasValidColumns || key === 'item-pool') return;\r\n        const columnKeys = Object.keys(newState.columns[key]);\r\n        hasValidColumns = columnKeys.length === requiredColumnKeys.length && columnKeys.every(function(v, i) { return v === requiredColumnKeys[i]});\r\n      });\r\n      if(!hasValidColumns) {\r\n        console.log('missing required column information!');\r\n        return;\r\n      }\r\n\r\n      // check if every column in columnOrder exists in column (and no extra besides item-pool)\r\n      const columnOrder = newState.columnOrder;\r\n      let allColumns = Object.keys(newState.columns);\r\n      allColumns.splice(allColumns.indexOf('item-pool'), 1);\r\n      if(!(columnOrder.length === allColumns.length && columnOrder.every(el => allColumns.includes(el)))) {\r\n        console.log('columnOrder and columns don\\'t match!');\r\n        return;\r\n      }\r\n\r\n      // check if every item in items has the correct format\r\n      let hasValidItems = true;\r\n      const requiredItemKeys = ['id', 'type', 'songURL', 'imgURL', 'title', 'subtitle'];\r\n      Object.keys(newState.items).forEach(function(key) {\r\n        if(!hasValidItems) return;\r\n        const itemKeys = Object.keys(newState.items[key]);\r\n        hasValidItems = itemKeys.length === requiredItemKeys.length && itemKeys.every(function(v, i) { return v === requiredItemKeys[i]});\r\n      });\r\n      if(!hasValidItems) {\r\n        console.log('missing required item information!');\r\n        return;\r\n      }\r\n\r\n      // check if every itemIDs exists in items (and no extra)\r\n      const allItems = Object.keys(newState.items);\r\n      let itemIds = [];\r\n      Object.keys(newState.columns).forEach(function(key) {\r\n        itemIds = itemIds.concat(newState.columns[key].itemIds);\r\n      });\r\n      if(!(itemIds.length === allItems.length && itemIds.every(el => allItems.includes(el)))) {\r\n        console.log('items and itemIds don\\'t match!');\r\n        return;\r\n      }\r\n\r\n      // success\r\n      toggleEditMode = false;\r\n      refreshSidebar = !refreshSidebar;\r\n      this.setState(newState);\r\n    };\r\n  }\r\n\r\n  saveAsIMG (fileType) {\r\n    toggleEditMode = false;\r\n    this.setState(this.state, () => {\r\n      const saveIMG = (dataUrl) => {\r\n        const link = document.createElement('a');\r\n        link.download = 'tierlist.'.concat(fileType);\r\n        link.href = dataUrl;\r\n        link.click();\r\n      }\r\n  \r\n      let tierlist = document.getElementById('tierlist-inner');\r\n      let displayWidth = tierlist.getBoundingClientRect().width;\r\n      let fullWidth = tierlist.scrollWidth, fullHeight = tierlist.scrollHeight;\r\n      if(fullWidth > displayWidth) fullWidth += 8;\r\n      \r\n      if(fileType === \"jpeg\") {\r\n        toJpeg(tierlist, {backgroundColor: '#121212', pixelRatio: 2, width: fullWidth, height: fullHeight})\r\n          .then(saveIMG).catch((err) => { console.log(err); });\r\n      }\r\n      if(fileType === \"png\") {\r\n        toPng(tierlist, {backgroundColor: '#121212', pixelRatio: 2, width: fullWidth, height: fullHeight})\r\n          .then(saveIMG).catch((err) => { console.log(err); });\r\n      }\r\n      if(fileType === \"svg\") {\r\n        toSvg(tierlist, {backgroundColor: '#121212', width: fullWidth, height: fullHeight})\r\n          .then(saveIMG).catch((err) => { console.log(err); });\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteItem = (id, source, home) => {\r\n    const homeitemIds = Array.from(home.itemIds);\r\n    homeitemIds.splice(source.index, 1);\r\n    const newHome = {\r\n      ...home,\r\n      itemIds: homeitemIds,\r\n    };\r\n\r\n    const oldItems = this.state.items;\r\n    const newItems = Object.keys(oldItems).reduce((object, key) => {\r\n      if (key !== id) {\r\n        object[key] = oldItems[key];\r\n      }\r\n      return object;\r\n    }, {});\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      items: newItems,\r\n      columns: {\r\n        ...this.state.columns,\r\n        [newHome.id]: newHome,\r\n      },\r\n    };\r\n\r\n    refreshSidebar = !refreshSidebar;\r\n    this.setState(newState);\r\n  }\r\n\r\n  updateColHeader = (id, newTitle, newColor) => {\r\n    const oldHeader = this.state.columns[id];\r\n    const newHeader = {\r\n      ...oldHeader,\r\n      title: newTitle,\r\n      color: newColor\r\n    };\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        [id]: newHeader\r\n      }\r\n    };\r\n    this.setState(newState);\r\n  }\r\n\r\n  addNewCol = (index) => {\r\n    const ID = `column-${new Date().getTime()}`;\r\n    let newColumnOrder = this.state.columnOrder;\r\n    newColumnOrder.splice(index, 0, ID);\r\n    \r\n    const newState = {\r\n      ...this.state,\r\n      columnOrder: newColumnOrder\r\n    };\r\n    newState['columns'][ID] = {\r\n      id: ID,\r\n      title: 'NEW',\r\n      color: '#535353',\r\n      itemIds: [],\r\n    };\r\n    this.setState(newState);\r\n  }\r\n\r\n  removeCol = (id, keepItems) => {\r\n    const oldItems = this.state.items;\r\n    const newItems = keepItems ? oldItems : Object.keys(oldItems).reduce((object, key) => {\r\n      if(!this.state.columns[id].itemIds.includes(key)) {\r\n        object[key] = oldItems[key];\r\n      }\r\n      return object;\r\n    }, {});\r\n\r\n    const newColumnOrder = Array.from(this.state.columnOrder);\r\n    newColumnOrder.splice(newColumnOrder.indexOf(id), 1);\r\n\r\n    const oldColumns = this.state.columns;\r\n    if(keepItems) oldColumns['item-pool'].itemIds = oldColumns['item-pool'].itemIds.concat(oldColumns[id].itemIds);\r\n    const newColumns = Object.keys(oldColumns).reduce((object, key) => {\r\n      if (key !== id) {\r\n        object[key] = oldColumns[key];\r\n      }\r\n      return object;\r\n    }, {});\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      items: newItems,\r\n      columns: newColumns,\r\n      columnOrder: newColumnOrder,\r\n    };\r\n\r\n    refreshSidebar = !refreshSidebar;\r\n    this.setState(newState);\r\n  }\r\n\r\n  resetAllItems = () => {\r\n    let newColumns = this.state.columns;\r\n    Object.keys(newColumns).forEach(function(key) {\r\n      if(key === 'item-pool') return;\r\n      newColumns['item-pool'].itemIds = newColumns['item-pool'].itemIds.concat(newColumns[key].itemIds);\r\n      newColumns[key].itemIds = [];\r\n    });\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      columns: newColumns\r\n    };\r\n    \r\n    toggleEditMode = false;\r\n    refreshColumns = !refreshColumns;\r\n    this.setState(newState);\r\n  }\r\n\r\n  removeAllItems = () => {\r\n    this.resetAllItems();\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        'item-pool': {\r\n          id: 'item-pool',\r\n          itemIds: [],\r\n        }\r\n      },\r\n      items: {},\r\n    };\r\n\r\n    toggleEditMode = false;\r\n    refreshSidebar = !refreshSidebar;\r\n    this.setState(newState);\r\n  }\r\n\r\n  resetAllColumns = () => {\r\n    this.resetAllItems();\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        'column-1': {\r\n          id: 'column-1',\r\n          title: 'S',\r\n          color: '#DC3CA0',\r\n          itemIds: [],\r\n        },\r\n        'column-2': {\r\n          id: 'column-2',\r\n          title: 'A',\r\n          color: '#F63E02',\r\n          itemIds: [],\r\n        },\r\n        'column-3': {\r\n          id: 'column-3',\r\n          title: 'B',\r\n          color: '#F5B700',\r\n          itemIds: [],\r\n        },\r\n        'column-4': {\r\n          id: 'column-4',\r\n          title: 'C',\r\n          color: '#1DB954',\r\n          itemIds: [],\r\n        }\r\n      },\r\n      columnOrder: ['column-1', 'column-2', 'column-3','column-4']\r\n    }\r\n\r\n    toggleEditMode = false;\r\n    this.setState(newState);\r\n  }\r\n\r\n  resetTierList = () => {\r\n    this.resetAllItems();\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        'column-1': {\r\n          id: 'column-1',\r\n          title: 'S',\r\n          color: '#DC3CA0',\r\n          itemIds: [],\r\n        },\r\n        'column-2': {\r\n          id: 'column-2',\r\n          title: 'A',\r\n          color: '#F63E02',\r\n          itemIds: [],\r\n        },\r\n        'column-3': {\r\n          id: 'column-3',\r\n          title: 'B',\r\n          color: '#F5B700',\r\n          itemIds: [],\r\n        },\r\n        'column-4': {\r\n          id: 'column-4',\r\n          title: 'C',\r\n          color: '#1DB954',\r\n          itemIds: [],\r\n        },\r\n        'item-pool': {\r\n          id: 'item-pool',\r\n          itemIds: [],\r\n        }\r\n      },\r\n      items: {},\r\n      columnOrder: ['column-1', 'column-2', 'column-3','column-4']\r\n    };\r\n    \r\n    toggleEditMode = false;\r\n    refreshSidebar = !refreshSidebar;\r\n    this.setState(newState);\r\n  }\r\n\r\n  showSearch = (show) => {\r\n    if(show) {\r\n      document.getElementById(\"tierlist-all\").classList.add(\"show-search\");\r\n      document.getElementById(\"search-toggle\").classList.add(\"show-search\");\r\n    }\r\n    else {\r\n      document.getElementById(\"tierlist-all\").classList.remove(\"show-search\");\r\n      document.getElementById(\"search-toggle\").classList.remove(\"show-search\");\r\n    }\r\n    showSearchbar = show;\r\n    this.setState(this.state);\r\n  }\r\n\r\n  showItems = (show) => {\r\n    if(show) {\r\n      document.getElementById(\"tierlist-all\").classList.add(\"show-items\");\r\n      document.getElementById(\"itempool-toggle\").classList.add(\"show-items\");\r\n    }\r\n    else {\r\n      document.getElementById(\"tierlist-all\").classList.remove(\"show-items\");\r\n      document.getElementById(\"itempool-toggle\").classList.remove(\"show-items\");\r\n    }\r\n    showItemPool = show;\r\n    this.setState(this.state);\r\n  }\r\n\r\n  onDragEnd = result => {\r\n    const { destination, source, draggableId, type } = result;\r\n\r\n    if (!destination) return;\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) return;\r\n\r\n    if (type === 'column') {\r\n      const newColumnOrder = Array.from(this.state.columnOrder);\r\n      newColumnOrder.splice(source.index, 1);\r\n      newColumnOrder.splice(destination.index, 0, draggableId);\r\n\r\n      const newState = {\r\n        ...this.state,\r\n        columnOrder: newColumnOrder\r\n      };\r\n      this.setState(newState);\r\n      return;\r\n    }\r\n\r\n    const home = this.state.columns[source.droppableId];\r\n    const foreign = this.state.columns[destination.droppableId];\r\n\r\n    if (destination.droppableId === 'trash-can') {\r\n      this.deleteItem(draggableId, source, home);\r\n      return;\r\n    }\r\n\r\n    if (home === foreign) {\r\n      const newitemIds = Array.from(home.itemIds);\r\n      newitemIds.splice(source.index, 1);\r\n      newitemIds.splice(destination.index, 0, draggableId);\r\n\r\n      const newHome = {\r\n        ...home,\r\n        itemIds: newitemIds\r\n      };\r\n\r\n      const newState = {\r\n        ...this.state,\r\n        columns: {\r\n          ...this.state.columns,\r\n          [newHome.id]: newHome\r\n        }\r\n      };\r\n\r\n      this.setState(newState);\r\n      return;\r\n    }\r\n\r\n    // moving from one list to another\r\n    const homeitemIds = Array.from(home.itemIds);\r\n    homeitemIds.splice(source.index, 1);\r\n    const newHome = {\r\n      ...home,\r\n      itemIds: homeitemIds,\r\n    };\r\n\r\n    const foreignitemIds = Array.from(foreign.itemIds);\r\n    foreignitemIds.splice(destination.index, 0, draggableId);\r\n    const newForeign = {\r\n      ...foreign,\r\n      itemIds: foreignitemIds,\r\n    };\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        [newHome.id]: newHome,\r\n        [newForeign.id]: newForeign,\r\n      },\r\n    };\r\n    this.setState(newState);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"tierlist-all\" style={{display: 'flex', flexDirection: 'column', height: '100vh'}}>\r\n        <Container style={{flexWrap: 'wrap', margin: '1.5rem 3rem 0 3rem'}}>\r\n          <h1 className=\"title-heading\">Spotify Tier List Maker</h1>\r\n          <div style={{display: 'flex', flexWrap: 'wrap', alignItems: 'center', justifyContent: 'center', margin: '0 1.5rem'}}>\r\n            <OverlayTrigger\r\n              placement={'top'}\r\n              overlay={<Tooltip>Add/Delete Columns</Tooltip>}\r\n            >\r\n              <Button id=\"toolbar-button\" style={toggleEditMode ? {color: \"white\"} : {}} size=\"lg\" variant=\"outline-secondary\" onClick={() => { toggleEditMode = !toggleEditMode; this.setState(this.state); }}>Edit</Button>\r\n            </OverlayTrigger>\r\n            \r\n            <OverlayTrigger\r\n              placement={'top'}\r\n              overlay={<Tooltip>Reset Placements</Tooltip>}\r\n            >\r\n              <DropdownButton\r\n                className=\"toolbar-dropdown\"\r\n                size=\"lg\"\r\n                variant=\"outline-secondary\"\r\n                menuVariant=\"dark\"\r\n                title=\"Reset\"\r\n                menuRole=\"Reset placements\"\r\n              >\r\n                <Dropdown.Item as=\"button\" onClick={this.resetAllItems}>Reset All Items</Dropdown.Item>\r\n                <Dropdown.Item as=\"button\" onClick={this.removeAllItems}>Delete All Items</Dropdown.Item>\r\n                <Dropdown.Item as=\"button\" onClick={this.resetAllColumns}>Reset All Columns</Dropdown.Item>\r\n                <Dropdown.Item as=\"button\" onClick={this.resetTierList}>Reset Tier List</Dropdown.Item>\r\n              </DropdownButton>\r\n            </OverlayTrigger>\r\n\r\n            <OverlayTrigger\r\n              placement={'top'}\r\n              overlay={<Tooltip>Save Image</Tooltip>}\r\n            >\r\n              <DropdownButton\r\n                className=\"toolbar-dropdown\"\r\n                size=\"lg\"\r\n                variant=\"outline-secondary\"\r\n                menuVariant=\"dark\"\r\n                title=\"Save\"\r\n                menuRole=\"Save as image\"\r\n              >\r\n                {saveFileTypes.map((fileType) => (\r\n                  <Dropdown.Item as=\"button\" key={fileType} type=\"button\" onClick={() => this.saveAsIMG(fileType)}>Save as .{fileType}</Dropdown.Item>\r\n                ))}\r\n              </DropdownButton>\r\n            </OverlayTrigger>\r\n\r\n            <OverlayTrigger\r\n              placement={'top'}\r\n              overlay={<Tooltip>Import/Export Data</Tooltip>}\r\n            >\r\n              <DropdownButton\r\n                className=\"toolbar-dropdown\"\r\n                size=\"lg\"\r\n                variant=\"outline-secondary\"\r\n                menuVariant=\"dark\"\r\n                title=\"Data\"\r\n                menuRole=\"Import/export .json data\"\r\n              >\r\n                <Dropdown.Item\r\n                  href={`data:text/json;charset=utf-8,${encodeURIComponent(JSON.stringify(this.state))}`}\r\n                  download=\"tierlist.json\"\r\n                  id=\"export-data\"\r\n                  onSelect={() => { toggleEditMode = false; this.setState(this.state); }}\r\n                  onDragStart={e => e.preventDefault()}\r\n                >\r\n                  Export as Json\r\n                </Dropdown.Item>\r\n                <Dropdown.ItemText id=\"import-data\">\r\n                  <label style={{width: '100%', height: '100%'}} htmlFor=\"import_tierlist\">Import from Json</label>\r\n                  <br/>\r\n                  <input style={{display: 'none'}}type=\"file\" id=\"import_tierlist\" name=\"import_tierlist\" accept=\".json\" onChange={this.importFromJson}/>\r\n                </Dropdown.ItemText>\r\n              </DropdownButton>\r\n            </OverlayTrigger>\r\n          </div>\r\n        </Container>\r\n\r\n        <DragDropContext onDragEnd={this.onDragEnd}>\r\n          <div id=\"tierlist-outer\">\r\n            <div id=\"tierlist-holder\">\r\n              <Droppable droppableId=\"tiers\" direction=\"horizontal\" type=\"column\">\r\n                {provided => (\r\n                  <div\r\n                    {...provided.droppableProps}\r\n                    ref={provided.innerRef}\r\n                    key={refreshColumns}\r\n                    id=\"tierlist-inner\"\r\n                  >\r\n                    {this.state.columnOrder.map((columnId, index) => {\r\n                      const column = this.state.columns[columnId];\r\n                      return (\r\n                        <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n                          {toggleEditMode && (\r\n                            <AddColumnButton\r\n                              key={`add-btn-${index}`}\r\n                              index={index}\r\n                              addHandler={this.addNewCol}\r\n                            />\r\n                          )}\r\n                          <InnerList\r\n                            key={column.id}\r\n                            column={column}\r\n                            itemMap={this.state.items}\r\n                            index={index}\r\n                            updateHeader={this.updateColHeader}\r\n                            deleteHandler={this.removeCol}\r\n                            toggleEditMode={toggleEditMode}\r\n                          />\r\n                        </div>\r\n                      );\r\n                    })}\r\n                    {toggleEditMode && (\r\n                      <AddColumnButton\r\n                        key={`add-btn-${this.state.columnOrder.length}`}\r\n                        index={this.state.columnOrder.length}\r\n                        addHandler={this.addNewCol}\r\n                      />\r\n                    )}\r\n                    {provided.placeholder}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </div>\r\n          </div>\r\n\r\n          <OverlayTrigger\r\n            placement={'right'}\r\n            overlay={<Tooltip>{showItemPool ? 'Hide' : 'Show'} Items</Tooltip>}\r\n          >\r\n            <Button id=\"itempool-toggle\" type=\"button\" onClick={() => this.showItems(!showItemPool)}>\r\n              <Image onDragStart={e => e.preventDefault()} src={items_img} fluid alt='toggle music items' style={{width: \"100%\", height: \"100%\", filter: showItemPool ? \"invert(100%)\" : \"\"}}/>\r\n            </Button>\r\n          </OverlayTrigger>\r\n          <Offcanvas id=\"itempool-overlay\" show={showItemPool} onHide={() => this.showItems(false)} placement={'start'} scroll backdrop={false}>\r\n            <Offcanvas.Header style={{justifyContent: \"center\", padding: \"0.5rem 1rem 0 1rem\"}}>\r\n              <Offcanvas.Title><TrashCan /></Offcanvas.Title>\r\n            </Offcanvas.Header>\r\n            <Offcanvas.Body style={{padding: 0}}>\r\n              <h1 className=\"main-heading\">Items</h1>\r\n              <ItemPool items = {this.state.columns['item-pool'].itemIds.map(itemId => this.state.items[itemId])} />\r\n            </Offcanvas.Body>\r\n          </Offcanvas>\r\n        </DragDropContext>\r\n\r\n        <OverlayTrigger\r\n          placement={'left'}\r\n          overlay={<Tooltip>{showSearchbar ? 'Hide' : 'Show'} Search</Tooltip>}\r\n        >\r\n          <Button id=\"search-toggle\" type=\"button\" onClick={() => this.showSearch(!showSearchbar)}>\r\n            <Image onDragStart={e => e.preventDefault()} src={search_img} fluid alt='toggle search bar' style={{width: \"100%\", height: \"100%\", filter: showSearchbar ? \"invert(100%)\" : \"\"}}/>\r\n          </Button>\r\n        </OverlayTrigger>\r\n        <Offcanvas id=\"sidebar-overlay\" show={showSearchbar} onHide={() => this.showSearch(false)} placement={'end'} scroll backdrop={false}>\r\n          <Offcanvas.Header style={{justifyContent: \"center\", paddingBottom: \"0.5rem\"}}>\r\n            <Offcanvas.Title><h1 className=\"main-heading\">Search</h1></Offcanvas.Title>\r\n          </Offcanvas.Header>\r\n          <Offcanvas.Body style={{padding: \"0.5rem 0 0 0\", overflowY: 'scroll'}}>\r\n            <SidebarSearch refreshSidebar={refreshSidebar}/>\r\n          </Offcanvas.Body>\r\n        </Offcanvas>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TierList","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport TierList from './tierlist/TierList';\nimport { TierListContext, initialData } from './tierlist/TierListContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './sidebar-styles.css';\n\nReactDOM.render(\n  <TierListContext.Provider value = {initialData}>\n    <Provider store={store}>\n      <TierList/>\n    </Provider>\n  </TierListContext.Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}