{"version":3,"sources":["sidebar/utils/constants.js","sidebar/reducers/tracks.js","sidebar/reducers/albums.js","sidebar/reducers/artists.js","store/store.js","sidebar/images/notrack.svg","sidebar/images/noalbum.svg","sidebar/images/noartist.svg","tierlist/components/Item.jsx","tierlist/imgs/tool.svg","tierlist/imgs/palette.svg","tierlist/components/Title.jsx","tierlist/components/Column.jsx","tierlist/components/ItemPool.jsx","tierlist/components/TrashCan.jsx","tierlist/TierListContext.js","sidebar/utils/functions.js","sidebar/utils/api.js","sidebar/actions/result.js","sidebar/components/TracksList.js","sidebar/components/AlbumsList.js","sidebar/components/ArtistsList.js","sidebar/components/SearchResult.js","sidebar/components/SearchForm.js","sidebar/components/Loader.js","sidebar/components/Dashboard.js","sidebar/SidebarSearch.js","tierlist/TierList.js","index.js"],"names":["SET_TRACKS","ADD_TRACKS","SET_ALBUMS","ADD_ALBUMS","SET_ARTISTS","ADD_ARTISTS","tracksReducer","state","action","tracks","type","next","items","albumsReducer","albums","artistsReducer","artists","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunk","ItemContent","styled","div","props","isDragging","ItemSmall","small","Item","draggableId","this","item","id","index","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","Card","style","margin","Container","Row","Col","xs","target","href","songURL","rel","imgURL","Img","src","alt","notrack","noalbum","noartist","Body","Title","title","subtitle","Text","React","Component","TitleStyle","h3","attrs","backgroundColor","color","InputStyle","textarea","ButtonStyle","button","inputRef","useRef","useState","colData","setID","setTitle","setColor","useColor","color_p","setColor_P","inputVisible","setInputVisible","colorPickerVisible","setcolorPickerVisible","deleteModalShow","setdeleteModalShow","update","updateHeader","deleteCol","deleteHandler","presetColors","onClickOutSide","e","current","contains","hex","setEditing","useEffect","document","addEventListener","removeEventListener","showDeleteButton","position","className","onClick","itemIds","length","Modal","show","onHide","size","Header","closeButton","closeVariant","Footer","Fragment","width","display","alignItems","onSubmit","value","onChange","Dropdown","autoClose","as","ButtonGroup","drop","onToggle","isOpen","OverlayTrigger","placement","overlay","Tooltip","Toggle","variant","Image","palette","fluid","height","Menu","hsv","h","newHSV","toColor","hideRGB","hideHSV","dark","map","idx","ToggleButton","textShadow","wordBreak","flexGrow","overflow","tool","bgColor","ItemList","isDraggingOver","InnerList","nextProps","Column","isEditing","newColor","v","a","column","isDragDisabled","getBorderColor","setState","droppableId","droppableProps","getBodyColor","placeholder","ItemPool","TrashHeading","h1","TrashCan","initialData","data","columns","columnOrder","containsItem","addToItemPool","deleteFromItemPool","TierListContext","createContext","setAuthHeader","params","JSON","parse","localStorage","getItem","axios","defaults","headers","common","error","console","log","get","url","result","getAuthToken","process","Accept","auth","username","password","grant_type","post","qs","stringify","response","setTracks","setAlbums","setArtists","initiateGetResult","searchTerm","dispatch","API_URL","encodeURIComponent","initiateLoadMoreTracks","initiateLoadMoreAlbums","initiateLoadMoreArtists","TracksList","updater","setUpdater","Object","keys","track","external_urls","spotify","name","artist","join","_","isEmpty","album","images","Consumer","filter","AlbumsList","ArtistsList","SearchResult","loadMore","setCategory","selectedCategory","Button","SearchForm","setSearchTerm","errorMsg","setErrorMsg","Form","event","preventDefault","trim","handleSearch","Group","controlId","Control","autoComplete","Loader","createElement","node","loader","querySelector","appendChild","classList","add","remove","body","ReactDOM","createPortal","children","connect","isLoading","setIsLoading","updateCategory","setSelectedCategory","isValidSession","refreshSession","then","Spinner","animation","role","marginRight","category","SidebarSearch","newState","access_token","expires_in","setItem","Date","getTime","loaded","expiryTime","currentTime","refreshSidebar","saveFileTypes","itemMap","itemId","PureComponent","refreshColumns","showSearchbar","showItemPool","TierList","sessionStorage","LZString","decompress","context","saveStateToStorage","compress","importFromJson","fileReader","FileReader","readAsText","files","onload","Array","isArray","hasValidColumns","requiredColumnKeys","forEach","key","columnKeys","every","i","allColumns","splice","indexOf","el","includes","hasValidItems","requiredItemKeys","itemKeys","allItems","concat","deleteItem","source","home","homeitemIds","from","newHome","oldItems","newItems","reduce","object","updateColHeader","newTitle","oldHeader","newHeader","addNewGroup","ID","newColumnOrder","removeCol","keepItems","oldColumns","newColumns","resetAllItems","removeAllItems","resetAllColumns","resetTierList","showSearch","getElementById","showItems","onDragEnd","destination","foreign","foreignitemIds","newForeign","newitemIds","newItemIds","newItemPool","delIndex","fileType","saveIMG","dataUrl","link","download","click","tierlist","displayWidth","getBoundingClientRect","fullWidth","scrollWidth","fullHeight","scrollHeight","toJpeg","pixelRatio","catch","err","toPng","toSvg","flexDirection","flexWrap","justifyContent","DropdownButton","menuVariant","menuRole","saveAsIMG","onSelect","ItemText","htmlFor","accept","direction","columnId","Offcanvas","scroll","backdrop","paddingBottom","padding","overflowY","contextType","render","Provider"],"mappings":"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","file":"static/js/main.bb59d814.chunk.js","sourcesContent":["export const SET_TRACKS = 'SET_TRACKS';\r\nexport const ADD_TRACKS = 'ADD_TRACKS';\r\nexport const SET_ALBUMS = 'SET_ALBUMS';\r\nexport const ADD_ALBUMS = 'ADD_ALBUMS';\r\nexport const SET_ARTISTS = 'SET_ARTISTS';\r\nexport const ADD_ARTISTS = 'ADD_ARTISTS';","import { SET_TRACKS, ADD_TRACKS } from '../utils/constants';\r\n\r\nconst tracksReducer = (state = {}, action) => {\r\n  const { tracks } = action;\r\n  switch (action.type) {\r\n    case SET_TRACKS:\r\n      return tracks;\r\n    case ADD_TRACKS:\r\n      return {\r\n        ...state,\r\n        next: tracks.next,\r\n        items: [...state.items, ...tracks.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tracksReducer;","import { SET_ALBUMS, ADD_ALBUMS } from '../utils/constants';\r\n\r\nconst albumsReducer = (state = {}, action) => {\r\n  const { albums } = action;\r\n  switch (action.type) {\r\n    case SET_ALBUMS:\r\n      return albums;\r\n    case ADD_ALBUMS:\r\n      return {\r\n        ...state,\r\n        next: albums.next,\r\n        items: [...state.items, ...albums.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default albumsReducer;","import { SET_ARTISTS, ADD_ARTISTS } from '../utils/constants';\r\n\r\nconst artistsReducer = (state = {}, action) => {\r\n  const { artists } = action;\r\n  switch (action.type) {\r\n    case SET_ARTISTS:\r\n      return artists;\r\n    case ADD_ARTISTS:\r\n      return {\r\n        ...state,\r\n        next: artists.next,\r\n        items: [...state.items, ...artists.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default artistsReducer;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport tracksReducer from '../sidebar/reducers/tracks';\r\nimport albumsReducer from '../sidebar/reducers/albums';\r\nimport artistsReducer from '../sidebar/reducers/artists';\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    tracks: tracksReducer,\r\n    albums: albumsReducer,\r\n    artists: artistsReducer\r\n  }),\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","export default __webpack_public_path__ + \"static/media/notrack.f41ca20b.svg\";","export default __webpack_public_path__ + \"static/media/noalbum.0fe44c37.svg\";","export default __webpack_public_path__ + \"static/media/noartist.bd17ebca.svg\";","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { Card, Container, Row, Col } from 'react-bootstrap';\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport notrack from '../../sidebar/images/notrack.svg';\r\nimport noalbum from '../../sidebar/images/noalbum.svg';\r\nimport noartist from '../../sidebar/images/noartist.svg';\r\n\r\nconst ItemContent = styled.div`\r\n  background-color: ${props => (props.isDragging ? '#535353' : 'none')};\r\n  border-radius: 4px;\r\n`;\r\n\r\nconst ItemSmall = styled.small`\r\n  color: ${props => (props.isDragging ? 'white !important' : '#A4A4A4')};\r\n`;\r\n\r\nexport default class Item extends React.Component {\r\n    render() {\r\n      return (\r\n        <Draggable draggableId={this.props.item.id} index={this.props.index}>\r\n          {(provided, snapshot) => (\r\n            <ItemContent\r\n              {...provided.draggableProps}\r\n              {...provided.dragHandleProps}\r\n              ref={provided.innerRef}\r\n              isDragging={snapshot.isDragging}\r\n            >\r\n              <Card style={{ margin: 0 }}>\r\n                <Container>\r\n                  <Row>\r\n                    <Col xs=\"auto\">\r\n                      <a\r\n                        target=\"_blank\"\r\n                        href={this.props.item.songURL}\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        {this.props.item.imgURL ? (\r\n                          <Card.Img src={this.props.item.imgURL} alt=\"\" />\r\n                        ) : (\r\n                          <Card.Img src={this.props.item.type === \"track\" ? notrack : this.props.item.type === \"album\" ? noalbum : noartist } alt=\"\" />\r\n                        )}\r\n                      </a>\r\n                    </Col>\r\n                    <Col>\r\n                      <Card.Body>\r\n                        <Card.Title>{this.props.item.title}</Card.Title>\r\n                        {this.props.item.subtitle &&\r\n                          <Card.Text>\r\n                            <ItemSmall isDragging={snapshot.isDragging}>\r\n                              {this.props.item.subtitle}\r\n                            </ItemSmall>\r\n                          </Card.Text>\r\n                        }\r\n                      </Card.Body>\r\n                    </Col>\r\n                  </Row>\r\n                </Container>\r\n              </Card>\r\n            </ItemContent>\r\n          )}\r\n        </Draggable>\r\n      );\r\n    }\r\n  }","export default __webpack_public_path__ + \"static/media/tool.f60e7b86.svg\";","export default __webpack_public_path__ + \"static/media/palette.c614a1c8.svg\";","import React, { useState, useRef, useEffect } from 'react';\r\nimport { Image, Dropdown, ButtonGroup, OverlayTrigger, Tooltip, ToggleButton, Modal } from 'react-bootstrap';\r\nimport { ColorPicker, useColor, toColor } from \"react-color-palette\";\r\nimport styled from 'styled-components';\r\nimport tool from '../imgs/tool.svg'\r\nimport palette from '../imgs/palette.svg'\r\nimport \"react-color-palette/lib/css/styles.css\";\r\nimport '../tierlist-styles.css'\r\n\r\nconst TitleStyle = styled.h3.attrs(props => ({\r\n  style: {\r\n    backgroundColor: props.color,\r\n  },\r\n  }))`padding: 8px;\r\n  margin-bottom: 0;\r\n  display: flex;\r\n  max-width: 21rem;\r\n  user-select: none;\r\n`;\r\n\r\n// how tf do i make this full height when editing\r\nconst InputStyle = styled.textarea`\r\n    flex-grow: 1;\r\n    overflow: hidden;\r\n    word-break: break-all;\r\n    min-height: 40px;\r\n    max-width: 14.25rem;\r\n    height: 40px;\r\n    resize: both;\r\n`;\r\n\r\nconst ButtonStyle = styled.button`\r\n    width: 40px;\r\n    min-width: 40px;\r\n    height: 40px;\r\n    float: right;\r\n    margin-left: 8px;\r\n    outline: none;\r\n    background: transparent no-repeat;\r\n    border: none;\r\n    border-radius: 50%;\r\n`;\r\n\r\nconst Title = props => {\r\n  const inputRef = useRef(null);\r\n  const [id, setID] = useState(props.colData.id);\r\n  const [title, setTitle] = useState(props.colData.title);\r\n  const [color, setColor] = useState(props.colData.color);\r\n  const [color_p, setColor_P] = useColor(\"hex\", props.colData.color);\r\n  const [inputVisible, setInputVisible] = useState(false);\r\n  const [colorPickerVisible, setcolorPickerVisible] = useState(false);\r\n  const [deleteModalShow, setdeleteModalShow] = useState(false);\r\n  const update = props.updateHeader;\r\n  const deleteCol = props.deleteHandler;\r\n  const presetColors = props.presetColors;\r\n\r\n\r\n  function onClickOutSide(e) {\r\n    if (inputRef.current && !inputRef.current.contains(e.target)) {\r\n      setInputVisible(false);\r\n      if(colorPickerVisible) {\r\n        setcolorPickerVisible(false);\r\n        update(id, title, color_p.hex); \r\n      }\r\n      props.setEditing(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (inputVisible) document.addEventListener(\"mousedown\", onClickOutSide);\r\n    return () => { document.removeEventListener(\"mousedown\", onClickOutSide); };\r\n  });\r\n\r\n  useEffect(() => {\r\n    setID(props.colData.id);\r\n    setTitle(props.colData.title);\r\n    setColor(props.colData.color);\r\n  }, [props.colData]);\r\n\r\n  return (\r\n    <div>\r\n      {props.showDeleteButton && (\r\n          <div style={{position: \"relative\"}}>\r\n            <button className=\"column-remove-button\" onClick={() => props.colData.itemIds.length > 0 ? setdeleteModalShow(true) : deleteCol(id, false)}>×</button>\r\n          </div>\r\n      )}\r\n      <Modal id=\"delete-modal\" show={deleteModalShow} onHide={() => setdeleteModalShow(false)} size=\"sm\">\r\n        <Modal.Header closeButton closeVariant=\"white\">\r\n          <Modal.Title>Confirm Delete</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Do you want to keep or delete the column contents?\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button id=\"keep-items\" onClick={() => {setdeleteModalShow(false); deleteCol(id, true);}}>\r\n            Keep\r\n          </button>\r\n          <button id=\"delete-items\" onClick={() => {setdeleteModalShow(false); deleteCol(id, false);}}>\r\n            Delete\r\n          </button>\r\n          <button id=\"cancel-delete-btn\" onClick={() => {setdeleteModalShow(false);}}>\r\n            Cancel\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <TitleStyle color={color_p.hex}>\r\n        <React.Fragment>\r\n          {inputVisible ? (\r\n            <form style={{width: \"100%\", display: \"flex\", alignItems: \"center\"}} onSubmit={() => { setInputVisible(false); props.setEditing(false); }} ref={inputRef}>\r\n              <InputStyle\r\n                value={title}\r\n                onChange={e => {\r\n                  setTitle(e.target.value);\r\n                  update(id, e.target.value, color);\r\n                }}\r\n              />\r\n              <Dropdown autoClose=\"inside\" as={ButtonGroup} drop=\"right\"\r\n                onToggle={(isOpen) => {\r\n                  setcolorPickerVisible(isOpen);\r\n                  if(!isOpen) update(id, title, color_p.hex);\r\n                }}\r\n              >\r\n                <OverlayTrigger\r\n                  placement={'top'}\r\n                  overlay={<Tooltip>Edit Color</Tooltip>}\r\n                >\r\n                  <Dropdown.Toggle id='color-toggle' variant=\"secondary\">\r\n                    <Image src={palette} fluid alt='colors' style={{width: \"100%\", height: \"100%\"}}/>\r\n                  </Dropdown.Toggle>\r\n                </OverlayTrigger>\r\n                <Dropdown.Menu id='color-dropdown' variant=\"dark\">\r\n                  <ColorPicker height={160} width={240} color={color_p} onChange={e => {\r\n                    if(e.hsv.h >= 360) {\r\n                      let newHSV = e.hsv;\r\n                      newHSV.h = 360;\r\n                      e = toColor(\"hsv\", newHSV);\r\n                    }\r\n                    setColor_P(e);\r\n                  }} hideRGB hideHSV dark />\r\n\r\n                  <div id=\"preset-colors\">\r\n                    {presetColors.map((color, idx) => (\r\n                      <ToggleButton\r\n                        key={idx}\r\n                        className = \"preset-color-button\"\r\n                        id={`color-${idx}`}\r\n                        type=\"radio\"\r\n                        variant=\"light\"\r\n                        style={{backgroundColor: color}}\r\n                        onChange={(e) => setColor_P(toColor(\"hex\", color))}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </form>\r\n          ) : (\r\n            <div style={{width: \"100%\", display: \"flex\", alignItems: \"center\"}}>\r\n              <div style={{color: \"white\", textShadow: \"0 0 4px black\", wordBreak: \"break-all\", flexGrow: \"1\", overflow: \"hidden\"}}>{title}</div>\r\n                <OverlayTrigger\r\n                  placement={'top'}\r\n                  overlay={<Tooltip>Edit Column</Tooltip>}\r\n                >\r\n                <ButtonStyle onClick={() => { setInputVisible(true); props.setEditing(true); }}>\r\n                  <Image src={tool} fluid alt='settings' style={{width: \"100%\", height: \"100%\"}}/>\r\n                </ButtonStyle> \r\n              </OverlayTrigger>\r\n            </div>\r\n          )}\r\n        </React.Fragment>\r\n      </TitleStyle>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Title; ","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { toColor } from \"react-color-palette\";\r\nimport Item from './Item';\r\nimport Title from './Title'\r\n\r\nconst Container = styled.div`\r\n  border: 4px solid ${props => props.isDragging ? props.bgColor : 'black'};\r\n  transition: border 0.2s ease;\r\n  margin: 8px;\r\n  background-color: none;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ItemList = styled.div`\r\n  padding: 8px;\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${props => props.isDraggingOver ? props.bgColor : 'none'};\r\n  flex-grow: 1;\r\n  min-width: 18.25rem;\r\n  min-height: 20rem;\r\n`;\r\n\r\nclass InnerList extends React.Component {\r\n  shouldComponentUpdate(nextProps) {\r\n    if (nextProps.items === this.props.items) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  render() {\r\n    return this.props.items.map((item, index) => (\r\n      <Item key={item.id} item={item} index={index} />\r\n    ));\r\n  }\r\n}\r\n\r\nexport default class Column extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEditing: false\r\n    }\r\n  }\r\n\r\n  getBorderColor(color) {\r\n    let newColor = toColor(\"hex\", color).hsv;\r\n    newColor.v = 75;\r\n    newColor.a = 0.75;\r\n    return toColor(\"hsv\", newColor).hex;\r\n  }\r\n\r\n  getBodyColor(color) {\r\n    let newColor = toColor(\"hex\", color).hsv;\r\n    newColor.v = newColor.v / 2;\r\n    newColor.a = 0.5;\r\n    return toColor(\"hsv\", newColor).hex;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Draggable draggableId={this.props.column.id} index={this.props.index} isDragDisabled={this.state.isEditing}>\r\n        {(provided, snapshot) => (\r\n          <Container\r\n            {...provided.draggableProps}\r\n            ref={provided.innerRef}\r\n            isDragging={snapshot.isDragging}\r\n            bgColor={this.getBorderColor(this.props.column.color)}\r\n          >\r\n            <div {...provided.dragHandleProps}>\r\n              <Title\r\n                colData={this.props.column}\r\n                updateHeader={this.props.updateHeader}\r\n                deleteHandler={this.props.deleteHandler}\r\n                showDeleteButton={this.props.showDeleteButton}\r\n                presetColors={this.props.presetColors}\r\n                setEditing={(e) => this.setState({ isEditing: e })}\r\n              />\r\n            </div>\r\n            <Droppable droppableId={this.props.column.id} type=\"item\">\r\n              {(provided, snapshot) => (\r\n                <ItemList\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  isDraggingOver={snapshot.isDraggingOver}\r\n                  bgColor={this.getBodyColor(this.props.column.color)}\r\n                >\r\n                  <InnerList items={this.props.items} />\r\n                  {provided.placeholder}\r\n                </ItemList>\r\n              )}\r\n            </Droppable>\r\n          </Container>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport Item from './Item';\r\n\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  border: 1px solid #1DB954;\r\n  background-color: none;\r\n  border-radius: 2px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 19.43rem;\r\n  height: calc(100vh - 12.25rem);\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst ItemList = styled.div`\r\n  padding: 8px;\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${props => props.isDraggingOver ? '#282828' : 'none'};\r\n  flex-grow: 1;\r\n`;\r\n\r\nclass InnerList extends React.Component {\r\n  shouldComponentUpdate(nextProps) {\r\n    if (nextProps.items === this.props.items) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  render() {\r\n    return this.props.items.map((item, index) => (\r\n      <Item key={item.id} item={item} index={index} />\r\n    ));\r\n  }\r\n}\r\n\r\nexport default class ItemPool extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Droppable droppableId=\"item-pool\" type=\"item\">\r\n          {(provided, snapshot) => (\r\n            <ItemList\r\n              ref={provided.innerRef}\r\n              {...provided.droppableProps}\r\n              isDraggingOver={snapshot.isDraggingOver}\r\n            >\r\n              <InnerList items={this.props.items} />\r\n              {provided.placeholder}\r\n            </ItemList>\r\n          )}\r\n        </Droppable>\r\n      </Container>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\n\r\nconst Container = styled.div`\r\n  margin: 0.5rem auto;\r\n  border: 1px solid ${props => props.isDraggingOver ? 'red' : 'darkred'};\r\n  background-color: none;\r\n  border-radius: 2px;\r\n  width: 19.43rem;\r\n  height: 4.75rem;\r\n  max-height: 4.75rem;\r\n  overflow-y: hidden;\r\n`;\r\n\r\nconst ItemList = styled.div`\r\n  padding: 8px;\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${props => props.isDraggingOver ? '#530000' : 'none'};\r\n  height: 100%;\r\n`;\r\n\r\nconst TrashHeading = styled.h1`\r\n  color: ${props => props.isDraggingOver ? 'red' : '#BB0000'};\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  top: 12.5%;\r\n`;\r\n\r\nexport default class TrashCan extends React.Component {\r\n  render() {\r\n    return (\r\n      <Droppable droppableId=\"trash-can\" type=\"item\">\r\n        {(provided, snapshot) => (\r\n          <div style={{position: \"relative\"}}>\r\n            <TrashHeading className=\"main-heading\" isDraggingOver={snapshot.isDraggingOver}>🗑️Trash</TrashHeading>\r\n            <Container isDraggingOver={snapshot.isDraggingOver}>\r\n              <ItemList\r\n                ref={provided.innerRef}\r\n                {...provided.droppableProps}\r\n                isDraggingOver={snapshot.isDraggingOver}\r\n              >\r\n                {provided.placeholder}\r\n              </ItemList>\r\n            </Container>\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nexport const initialData = {\r\n  data: {\r\n    items: {},\r\n    columns: {\r\n      'column-1': {\r\n        id: 'column-1',\r\n        title: 'S',\r\n        color: '#DC3CA0',\r\n        itemIds: [],\r\n      },\r\n      'column-2': {\r\n        id: 'column-2',\r\n        title: 'A',\r\n        color: '#F63E02',\r\n        itemIds: [],\r\n      },\r\n      'column-3': {\r\n        id: 'column-3',\r\n        title: 'B',\r\n        color: '#F5B700',\r\n        itemIds: [],\r\n      },\r\n      'column-4': {\r\n        id: 'column-4',\r\n        title: 'C',\r\n        color: '#1DB954',\r\n        itemIds: [],\r\n      },\r\n      'item-pool': {\r\n        id: 'item-pool',\r\n        itemIds: [],\r\n      }\r\n    },\r\n    columnOrder: ['column-1', 'column-2', 'column-3','column-4']\r\n  },\r\n  containsItem: (id) => {},\r\n  addToItemPool: (id, type, songURL, imgURL, title, subtitle) => {},\r\n  deleteFromItemPool: (id, type) => {}\r\n}\r\n\r\nexport const TierListContext = React.createContext(initialData);","import axios from 'axios';\r\n\r\nexport const getParamValues = (url) => {\r\n  return url\r\n    .slice(1)\r\n    .split('&')\r\n    .reduce((prev, curr) => {\r\n      const [title, value] = curr.split('=');\r\n      prev[title] = value;\r\n      return prev;\r\n    }, {});\r\n};\r\n\r\nexport const setAuthHeader = () => {\r\n  try {\r\n    const params = JSON.parse(localStorage.getItem('params'));\r\n    if (params) {\r\n      axios.defaults.headers.common[\r\n        'Authorization'\r\n      ] = `Bearer ${params}`;\r\n    }\r\n  } catch (error) {\r\n    console.log('Error setting auth', error);\r\n  }\r\n};\r\n","import axios from 'axios';\r\nimport qs from 'qs';\r\nimport { setAuthHeader } from './functions';\r\n\r\nexport const get = async (url, params) => {\r\n  setAuthHeader();\r\n  const result = await axios.get(url, params);\r\n  return result.data;\r\n};\r\n\r\nexport const post = async (url, params) => {\r\n  setAuthHeader();\r\n  const result = await axios.post(url, params);\r\n  return result.data;\r\n};\r\n\r\nexport const getAuthToken = async () => {\r\n  const clientId = process.env.REACT_APP_CLIENT_ID;\r\n  const clientSecret = process.env.REACT_APP_CLIENT_SECRET;\r\n  \r\n  const headers = {\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    auth: {\r\n      username: clientId,\r\n      password: clientSecret,\r\n    },\r\n  };\r\n  const data = {\r\n    grant_type: 'client_credentials',\r\n  };\r\n\r\n  try {\r\n    const response = await axios.post(\r\n      'https://accounts.spotify.com/api/token',\r\n      qs.stringify(data),\r\n      headers\r\n    );\r\n    return response.data;\r\n  } catch (error) { console.log(error); }\r\n};","import {\r\n  SET_ALBUMS,\r\n  ADD_ALBUMS,\r\n  SET_ARTISTS,\r\n  ADD_ARTISTS,\r\n  SET_TRACKS,\r\n  ADD_TRACKS\r\n} from '../utils/constants';\r\nimport { get } from '../utils/api';\r\n\r\nexport const setTracks = (tracks) => ({\r\n  type: SET_TRACKS,\r\n  tracks\r\n});\r\nexport const addTracks = (tracks) => ({\r\n  type: ADD_TRACKS,\r\n  tracks\r\n});\r\n\r\nexport const setAlbums = (albums) => ({\r\n  type: SET_ALBUMS,\r\n  albums\r\n});\r\nexport const addAlbums = (albums) => ({\r\n  type: ADD_ALBUMS,\r\n  albums\r\n});\r\n\r\nexport const setArtists = (artists) => ({\r\n  type: SET_ARTISTS,\r\n  artists\r\n});\r\nexport const addArtists = (artists) => ({\r\n  type: ADD_ARTISTS,\r\n  artists\r\n});\r\n\r\nexport const initiateGetResult = (searchTerm) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const API_URL = `https://api.spotify.com/v1/search?query=${encodeURIComponent(\r\n        searchTerm\r\n      )}&type=track,album,artist&limit=24`;\r\n      const result = await get(API_URL);\r\n      console.log(result);\r\n      const { tracks, albums, artists } = result;\r\n      dispatch(setTracks(tracks));\r\n      dispatch(setAlbums(albums));\r\n      return dispatch(setArtists(artists));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateLoadMoreTracks = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log('url', url);\r\n      const result = await get(url);\r\n      console.log('categories', result);\r\n      return dispatch(addTracks(result.tracks));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateLoadMoreAlbums = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log('url', url);\r\n      const result = await get(url);\r\n      console.log('categories', result);\r\n      return dispatch(addAlbums(result.albums));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateLoadMoreArtists = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log('url', url);\r\n      const result = await get(url);\r\n      console.log('categories', result);\r\n      return dispatch(addArtists(result.artists));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Card, Container, Row, Col } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport notrack from '../images/notrack.svg';\r\nimport { TierListContext } from '../../tierlist/TierListContext';\r\n\r\nconst TracksList = ({ tracks }) => {\r\n  const [updater, setUpdater] = useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(tracks).length > 0 && (\r\n        <div className=\"tracks\">\r\n          {tracks.items.map((track, index) => {\r\n            let id = track.id, type = 'track', songURL = track.external_urls.spotify, title = track.name, subtitle = track.artists.map((artist) => artist.name).join(', ');\r\n            let imgURL = !_.isEmpty(track.album.images) ? track.album.images[0].url : null;\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <TierListContext.Consumer>\r\n                  {({containsItem, addToItemPool, deleteFromItemPool}) => (\r\n                    <Card className=\"search-card\" style={{margin: \"0.25rem 0\", backgroundColor: containsItem(id, type) ? \"black\" : \"\"}}>\r\n                      <Container>\r\n                        <Row>\r\n                          <Col xs=\"auto\">\r\n                            <a\r\n                              target=\"_blank\"\r\n                              href={songURL}\r\n                              rel=\"noopener noreferrer\"\r\n                              style={{filter: containsItem(id, type) ? \"brightness(50%)\" : \"brightness(100%)\"}}\r\n                            >\r\n                              {!_.isEmpty(track.album.images) ? (\r\n                                <Card.Img src={imgURL} alt=\"track album cover\" />\r\n                              ) : (\r\n                                <Card.Img src={notrack} alt=\"default album cover\" />\r\n                              )}\r\n                            </a>\r\n                          </Col>\r\n                          <Col>\r\n                            <Card.Body>\r\n                              <Card.Title style={{color: containsItem(id, type) ? \"#555\" : \"\"}}>{title}</Card.Title>\r\n                              <Card.Text>\r\n                                <small style={{color: containsItem(id, type) ?  \"#555\" : \"\"}}>{subtitle}</small>\r\n                              </Card.Text>\r\n                              <div>\r\n                                {containsItem(id, type) ? (\r\n                                  <button className=\"remove-buttons\" onClick={() => {\r\n                                    deleteFromItemPool(id, type);\r\n                                    setUpdater(!updater);\r\n                                  }}>×</button>\r\n                                ) : (\r\n                                  <button className=\"item-buttons\" onClick={() => {\r\n                                    addToItemPool(id, type, songURL, imgURL, title, subtitle);\r\n                                    setUpdater(!updater);\r\n                                  }}>+</button>\r\n                                )}\r\n                              </div>\r\n                            </Card.Body>\r\n                          </Col>\r\n                        </Row>\r\n                      </Container>\r\n                    </Card>\r\n                  )}\r\n                </TierListContext.Consumer>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TracksList;","import React, { useState } from 'react';\r\nimport { Card, Container, Row, Col } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport noalbum from '../images/noalbum.svg';\r\nimport { TierListContext } from '../../tierlist/TierListContext';\r\n\r\nconst AlbumsList = ({ albums }) => {\r\n  const [updater, setUpdater] = useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(albums).length > 0 && (\r\n        <div className=\"albums\">\r\n          {albums.items.map((album, index) => {\r\n            let id = album.id, type = 'album', songURL = album.external_urls.spotify, title = album.name, subtitle = album.artists.map((artist) => artist.name).join(', ');\r\n            let imgURL = !_.isEmpty(album.images) ? album.images[0].url : null;\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <TierListContext.Consumer>\r\n                  {({containsItem, addToItemPool, deleteFromItemPool}) => (\r\n                    <Card className=\"search-card\" style={{margin: \"0.25rem 0\", backgroundColor: containsItem(id, type) ? \"black\" : \"\"}}>\r\n                      <Container>\r\n                        <Row>\r\n                          <Col xs=\"auto\">\r\n                            <a\r\n                              target=\"_blank\"\r\n                              href={songURL}\r\n                              rel=\"noopener noreferrer\"\r\n                              style={{filter: containsItem(id, type) ? \"brightness(50%)\" : \"brightness(100%)\"}}\r\n                            >\r\n                              {!_.isEmpty(album.images) ? (\r\n                                <Card.Img src={album.images[0].url} alt=\"album cover\" />\r\n                              ) : (\r\n                                <Card.Img src={noalbum} alt=\"default album cover\" />\r\n                              )}\r\n                            </a>\r\n                          </Col>\r\n                          <Col>\r\n                            <Card.Body>\r\n                              <Card.Title style={{color: containsItem(id, type) ? \"#555\" : \"\"}}>{title}</Card.Title>\r\n                              <Card.Text>\r\n                                <small style={{color: containsItem(id, type) ?  \"#555\" : \"\"}}>{subtitle}</small>\r\n                              </Card.Text>\r\n                              <div>\r\n                                {containsItem(id, type) ? (\r\n                                  <button className=\"remove-buttons\" onClick={() => {\r\n                                    deleteFromItemPool(id, type);\r\n                                    setUpdater(!updater);\r\n                                  }}>×</button>\r\n                                ) : (\r\n                                  <button className=\"item-buttons\" onClick={() => {\r\n                                    addToItemPool(id, type, songURL, imgURL, title, subtitle);\r\n                                    setUpdater(!updater);\r\n                                  }}>+</button>\r\n                                )}\r\n                              </div>\r\n                            </Card.Body>\r\n                          </Col>\r\n                          <Col xs=\"auto\">\r\n                          </Col>\r\n                        </Row>\r\n                      </Container>\r\n                    </Card>\r\n                  )}\r\n                </TierListContext.Consumer>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AlbumsList;","import React, { useState } from 'react';\r\nimport { Card, Container, Row, Col } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport noartist from '../images/noartist.svg';\r\nimport { TierListContext } from '../../tierlist/TierListContext';\r\n\r\nconst ArtistsList = ({ artists }) => {\r\n  const [updater, setUpdater] = useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(artists).length > 0 && (\r\n        <div className=\"artists\">\r\n          {artists.items.map((artist, index) => {\r\n            let id = artist.id, type = 'artist', songURL = artist.external_urls.spotify, title = artist.name, subtitle = null;\r\n            let imgURL = !_.isEmpty(artist.images) ? artist.images[0].url : null;\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <TierListContext.Consumer>\r\n                  {({containsItem, addToItemPool, deleteFromItemPool}) => (\r\n                    <Card className=\"search-card\" style={{margin: \"0.25rem 0\", backgroundColor: containsItem(id, type) ? \"black\" : \"\"}}>\r\n                      <Container>\r\n                        <Row>\r\n                          <Col xs=\"auto\">\r\n                            <a\r\n                              target=\"_blank\"\r\n                              href={songURL}\r\n                              rel=\"noopener noreferrer\"\r\n                              style={{filter: containsItem(id, type) ? \"brightness(50%)\" : \"brightness(100%)\"}}\r\n                            >\r\n                              {!_.isEmpty(artist.images) ? (\r\n                                <Card.Img src={artist.images[0].url} alt=\"artist\" />\r\n                              ) : (\r\n                                <Card.Img src={noartist} alt=\"default artist\" />\r\n                              )}\r\n                            </a>\r\n                          </Col>\r\n                          <Col>\r\n                            <Card.Body>\r\n                              <Card.Title style={{color: containsItem(id, type) ? \"#555\" : \"\"}}>{title}</Card.Title>\r\n                              <div>\r\n                                {containsItem(id, type) ? (\r\n                                  <button className=\"remove-buttons\" onClick={() => {\r\n                                    deleteFromItemPool(id, type);\r\n                                    setUpdater(!updater);\r\n                                  }}>×</button>\r\n                                ) : (\r\n                                  <button className=\"item-buttons\" onClick={() => {\r\n                                    addToItemPool(id, type, songURL, imgURL, title, subtitle);\r\n                                    setUpdater(!updater);\r\n                                  }}>+</button>\r\n                                )}\r\n                              </div>\r\n                            </Card.Body>\r\n                          </Col>\r\n                        </Row>\r\n                      </Container>\r\n                    </Card>\r\n                  )}\r\n                </TierListContext.Consumer>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ArtistsList;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport TracksList from './TracksList';\r\nimport AlbumsList from './AlbumsList';\r\nimport ArtistsList from './ArtistsList';\r\n\r\nconst SearchResult = (props) => {\r\n  const { loadMore, result, setCategory, selectedCategory } = props;\r\n  const { tracks, albums, artists } = result;\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"search-buttons\">\r\n        {!_.isEmpty(tracks.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'tracks' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('tracks')}\r\n          >\r\n            Songs\r\n          </button>\r\n        )}\r\n        {!_.isEmpty(albums.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'albums' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('albums')}\r\n          >\r\n            Albums\r\n          </button>\r\n        )}\r\n        {!_.isEmpty(artists.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'artists' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('artists')}\r\n          >\r\n            Artists\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <div className={`${selectedCategory === 'tracks' ? '' : 'hide'}`}>\r\n        {albums && <TracksList tracks={tracks} />}\r\n      </div>\r\n      <div className={`${selectedCategory === 'albums' ? '' : 'hide'}`}>\r\n        {albums && <AlbumsList albums={albums} />}\r\n      </div>\r\n      <div className={`${selectedCategory === 'artists' ? '' : 'hide'}`}>\r\n        {artists && <ArtistsList artists={artists} />}\r\n      </div>\r\n\r\n      {!_.isEmpty(result[selectedCategory]) &&\r\n       !_.isEmpty(result[selectedCategory].next) && (\r\n        <div className=\"load-more\">\r\n          <Button variant=\"info\" type=\"button\" onClick={() => loadMore(selectedCategory)}>\r\n            Load More\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SearchResult;","import React, { useState } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst SearchForm = (props) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n\r\n  const handleInputChange = (event) => {\r\n    const searchTerm = event.target.value;\r\n    setSearchTerm(searchTerm);\r\n  };\r\n\r\n  const handleSearch = (event) => {\r\n    event.preventDefault();\r\n    if (searchTerm.trim() !== '') {\r\n      setErrorMsg('');\r\n      props.handleSearch(searchTerm);\r\n    } else {\r\n      setErrorMsg('Please enter a search term.');\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleSearch}>\r\n        {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Control\r\n            type=\"search\"\r\n            name=\"searchTerm\"\r\n            value={searchTerm}\r\n            placeholder=\"Search here!\"\r\n            onChange={handleInputChange}\r\n            autoComplete=\"off\"\r\n          />\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchForm;","import { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst Loader = (props) => {\r\n  const [node] = useState(document.createElement('div'));\r\n  const loader = document.querySelector('#loader');\r\n\r\n  useEffect(() => {\r\n    loader.appendChild(node).classList.add('message');\r\n  }, [loader, node]);\r\n\r\n  useEffect(() => {\r\n    if (props.show) {\r\n      loader.classList.remove('hide');\r\n      document.body.classList.add('loader-open');\r\n    } else {\r\n      loader.classList.add('hide');\r\n      document.body.classList.remove('loader-open');\r\n    }\r\n  }, [loader, props.show]);\r\n\r\n  return ReactDOM.createPortal(props.children, node);\r\n};\r\nexport default Loader;","import React, { useState } from 'react';\r\nimport {\r\n  initiateGetResult,\r\n  initiateLoadMoreTracks,\r\n  initiateLoadMoreAlbums,\r\n  initiateLoadMoreArtists\r\n} from '../actions/result';\r\nimport { connect } from 'react-redux';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport SearchResult from './SearchResult';\r\nimport SearchForm from './SearchForm';\r\nimport Loader from './Loader';\r\n\r\nconst Dashboard = (props) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedCategory, setSelectedCategory] = [props.selectedCategory, props.updateCategory];\r\n  const { isValidSession, refreshSession } = props;\r\n\r\n  const handleSearch = async (searchTerm) => {\r\n    setIsLoading(true);\r\n    if (!isValidSession()) {\r\n      try { await refreshSession(); } \r\n      catch(error) { console.log(error); }\r\n    }\r\n    props.dispatch(initiateGetResult(searchTerm)).then(() => {\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n\r\n  const loadMore = async (type) => {\r\n    const { dispatch, tracks, albums, artists } = props;\r\n    setIsLoading(true);\r\n    if (!isValidSession()) {\r\n      try { await refreshSession(); }\r\n      catch(error) { console.log(error); }\r\n    }\r\n    switch (type) {\r\n      case 'tracks':\r\n        await dispatch(initiateLoadMoreTracks(tracks.next));\r\n        break;\r\n      case 'albums':\r\n        await dispatch(initiateLoadMoreAlbums(albums.next));\r\n        break;\r\n      case 'artists':\r\n        await dispatch(initiateLoadMoreArtists(artists.next));\r\n        break;\r\n      default:\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const setCategory = (category) => { setSelectedCategory(category); };\r\n\r\n  const { tracks, albums, artists } = props;\r\n  const result = { tracks, albums, artists };\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <SearchForm handleSearch={handleSearch} />\r\n        <Loader show={isLoading}>\r\n          <Spinner animation=\"border\" role=\"status\" style={{marginRight: '0.5rem'}}/>\r\n          Loading...\r\n        </Loader>\r\n        <SearchResult\r\n          result={result}\r\n          loadMore={loadMore}\r\n          setCategory={setCategory}\r\n          selectedCategory={selectedCategory}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tracks: state.tracks,\r\n    albums: state.albums,\r\n    artists: state.artists\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Dashboard);","import React from 'react';\r\nimport Dashboard from './components/Dashboard';\r\nimport { getAuthToken } from './utils/api';\r\n\r\nclass SidebarSearch extends React.Component {\r\n    \r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { loaded: false, selectedCategory: 'tracks' };\r\n    }\r\n\r\n    updateCategory = (category) => {\r\n      const newState = {\r\n        ...this.state,\r\n        selectedCategory: category\r\n      };\r\n      this.setState(newState);\r\n    }\r\n    \r\n    refreshSession = async () => {\r\n        let result;\r\n        try{ result = await getAuthToken(); } \r\n        catch(error) { console.log(error); }\r\n        if(result) {\r\n          const {\r\n              access_token,\r\n              expires_in\r\n          } = result;\r\n          localStorage.setItem('params', JSON.stringify(access_token));\r\n          localStorage.setItem('expiry_time', new Date().getTime() + expires_in * 1000);\r\n          if(!this.loaded) this.setState({ loaded: true });\r\n        }\r\n    }\r\n    \r\n    isValidSession = () => {\r\n        let expiryTime;\r\n        try { expiryTime = JSON.parse(localStorage.getItem('expiry_time')); } \r\n        catch(error) { expiryTime = '0'; }\r\n        const currentTime = new Date().getTime();\r\n        if(currentTime >= expiryTime && this.loaded) this.setState({ loaded: false });\r\n        return currentTime < expiryTime;\r\n    };\r\n\r\n    render() {\r\n        if(!this.isValidSession()) {\r\n          this.refreshSession();\r\n          return (\r\n            <div className=\"sidebar-search\">\r\n              Loading...\r\n            </div>\r\n          );\r\n        }\r\n        return (\r\n          <div className=\"sidebar-search\">\r\n            <Dashboard key={this.props.refreshSidebar} isValidSession={this.isValidSession} refreshSession={this.refreshSession}\r\n              selectedCategory={this.state.selectedCategory} updateCategory={this.updateCategory} />\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SidebarSearch;","import React from 'react';\r\nimport '@atlaskit/css-reset';\r\nimport styled from 'styled-components';\r\nimport Column from './components/Column';\r\nimport ItemPool from './components/ItemPool';\r\nimport TrashCan from './components/TrashCan';\r\nimport { TierListContext } from './TierListContext';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport { Button, ButtonGroup, Offcanvas, Dropdown, DropdownButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { toJpeg, toPng, toSvg } from 'html-to-image';\r\nimport LZString from 'lz-string';\r\nimport SidebarSearch from '../sidebar/SidebarSearch'\r\nimport './tierlist-styles.css';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst presetColors = [\"#F63E02\", \"#F5B700\", \"#1DB954\", \"#4D9DE0\", \"#360568\", \"#DC3CA0\"];\r\nconst saveFileTypes = [\"jpeg\", \"png\", \"svg\"];\r\n\r\nclass InnerList extends React.PureComponent {\r\n  render() {\r\n    const { column, itemMap, index, updateHeader, deleteHandler, showDeleteButton } = this.props;\r\n    const items = column.itemIds.map(itemId => itemMap[itemId]);\r\n    return <Column column={column} items={items} index={index} updateHeader={updateHeader} deleteHandler={deleteHandler} presetColors={presetColors} showDeleteButton={showDeleteButton}/>;\r\n  }\r\n}\r\n\r\nlet refreshSidebar = false;\r\nlet refreshColumns = false;\r\nlet showSearchbar = false;\r\nlet showItemPool = false;\r\nlet showDeleteButton = false;\r\n\r\nclass TierList extends React.Component {\r\n  static contextType = TierListContext;\r\n  state = sessionStorage.getItem('saveState') !== null ? JSON.parse(LZString.decompress(sessionStorage.getItem('saveState'))) : this.context.data;\r\n\r\n  saveStateToStorage = () => sessionStorage.setItem('saveState', LZString.compress(JSON.stringify(this.state)));\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"beforeunload\", this.saveStateToStorage);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"beforeunload\", this.saveStateToStorage);\r\n\r\n    this.context.containsItem = (id, type) => {\r\n      if(id in this.state.items) {\r\n        return this.state.items[id]['type'] === type;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    this.context.addToItemPool = (id, type, songURL, imgURL, title, subtitle) => {\r\n      if(this.context.containsItem(id, type)) return; // do nothing\r\n      const newItems = {\r\n        ...this.state.items,\r\n        [id]: {\r\n          id: id,\r\n          type: type,\r\n          songURL: songURL,\r\n          imgURL: imgURL,\r\n          title: title,\r\n          subtitle: subtitle\r\n        }\r\n      }\r\n      const newItemIds = Array.from(this.state.columns['item-pool'].itemIds).concat(id);\r\n      const newItemPool = {\r\n        ...this.state.columns['item-pool'],\r\n        itemIds: newItemIds\r\n      }\r\n      const newState = {\r\n        ...this.state,\r\n        items: newItems,\r\n        columns: {\r\n          ...this.state.columns,\r\n          'item-pool': newItemPool\r\n        }\r\n      };\r\n      this.setState(newState);\r\n    };\r\n    \r\n    this.context.deleteFromItemPool = (id, type) => {\r\n      if(!this.context.containsItem(id, type)) return; // do nothing\r\n      let newItems = this.state.items;\r\n      delete newItems[id];\r\n\r\n      let newColumns = this.state.columns;\r\n      Object.keys(newColumns).forEach(function(key) {\r\n        const delIndex = newColumns[key].itemIds.indexOf(id);\r\n        if(delIndex !== -1) newColumns[key].itemIds.splice(delIndex, 1);\r\n      });\r\n\r\n      const newState = {\r\n        ...this.state,\r\n        items: newItems,\r\n        columns: newColumns\r\n      }\r\n      console.log(newState);\r\n      refreshColumns = !refreshColumns;\r\n      this.setState(newState);\r\n    }\r\n  }\r\n\r\n  // absolutely cursed\r\n  importFromJson = e => {\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\r\n    fileReader.onload = e => {\r\n      const newState = JSON.parse(e.target.result);\r\n      // check if the required keys exist and the item-pool exists in column and has the correct format\r\n      if(!('columnOrder' in newState && 'items' in newState && 'columns' in newState && 'item-pool' in newState.columns\r\n      && 'id' in newState.columns['item-pool'] && newState.columns['item-pool'].id === 'item-pool'\r\n      && 'itemIds' in newState.columns['item-pool'] && Array.isArray(newState.columns['item-pool'].itemIds))) {\r\n        console.log('missing item pool!');\r\n        return;\r\n      }\r\n\r\n      // check if every column has the correct format\r\n      let hasValidColumns = true;\r\n      const requiredColumnKeys = ['id', 'title', 'color', 'itemIds'];\r\n      Object.keys(newState.columns).forEach(function(key) {\r\n        if(!hasValidColumns || key === 'item-pool') return;\r\n        const columnKeys = Object.keys(newState.columns[key]);\r\n        hasValidColumns = columnKeys.length === requiredColumnKeys.length && columnKeys.every(function(v, i) { return v === requiredColumnKeys[i]});\r\n      });\r\n      if(!hasValidColumns) {\r\n        console.log('missing required column information!');\r\n        return;\r\n      }\r\n\r\n      // check if every column in columnOrder exists in column (and no extra besides item-pool)\r\n      const columnOrder = newState.columnOrder;\r\n      let allColumns = Object.keys(newState.columns);\r\n      allColumns.splice(allColumns.indexOf('item-pool'), 1);\r\n      if(!(columnOrder.length === allColumns.length && columnOrder.every(el => allColumns.includes(el)))) {\r\n        console.log('columnOrder and columns don\\'t match!');\r\n        return;\r\n      }\r\n\r\n      // check if every item in items has the correct format\r\n      let hasValidItems = true;\r\n      const requiredItemKeys = ['id', 'type', 'songURL', 'imgURL', 'title', 'subtitle'];\r\n      Object.keys(newState.items).forEach(function(key) {\r\n        if(!hasValidItems) return;\r\n        const itemKeys = Object.keys(newState.items[key]);\r\n        hasValidItems = itemKeys.length === requiredItemKeys.length && itemKeys.every(function(v, i) { return v === requiredItemKeys[i]});\r\n      });\r\n      if(!hasValidItems) {\r\n        console.log('missing required item information!');\r\n        return;\r\n      }\r\n\r\n      // check if every itemIDs exists in items (and no extra)\r\n      const allItems = Object.keys(newState.items);\r\n      let itemIds = [];\r\n      Object.keys(newState.columns).forEach(function(key) {\r\n        itemIds = itemIds.concat(newState.columns[key].itemIds);\r\n      });\r\n      if(!(itemIds.length === allItems.length && itemIds.every(el => allItems.includes(el)))) {\r\n        console.log('items and itemIds don\\'t match!');\r\n        return;\r\n      }\r\n\r\n      // success\r\n      showDeleteButton = false;\r\n      refreshSidebar = !refreshSidebar;\r\n      this.setState(newState);\r\n      console.log(this.state);\r\n    };\r\n  }\r\n\r\n  saveAsIMG (fileType) {\r\n    showDeleteButton = false;\r\n    this.setState(this.state, () => {\r\n      const saveIMG = (dataUrl) => {\r\n        const link = document.createElement('a');\r\n        link.download = 'tierlist.'.concat(fileType);\r\n        link.href = dataUrl;\r\n        link.click();\r\n      }\r\n  \r\n      let tierlist = document.getElementById('tierlist-inner');\r\n      let displayWidth = tierlist.getBoundingClientRect().width;\r\n      let fullWidth = tierlist.scrollWidth, fullHeight = tierlist.scrollHeight;\r\n      if(fullWidth > displayWidth) fullWidth += 8;\r\n      \r\n      if(fileType === \"jpeg\") {\r\n        toJpeg(tierlist, {backgroundColor: '#121212', pixelRatio: 2, width: fullWidth, height: fullHeight})\r\n          .then(saveIMG).catch((err) => { console.log(err); });\r\n      }\r\n      if(fileType === \"png\") {\r\n        toPng(tierlist, {backgroundColor: '#121212', pixelRatio: 2, width: fullWidth, height: fullHeight})\r\n          .then(saveIMG).catch((err) => { console.log(err); });\r\n      }\r\n      if(fileType === \"svg\") {\r\n        toSvg(tierlist, {backgroundColor: '#121212', width: fullWidth, height: fullHeight})\r\n          .then(saveIMG).catch((err) => { console.log(err); });\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteItem = (id, source, home) => {\r\n    const homeitemIds = Array.from(home.itemIds);\r\n    homeitemIds.splice(source.index, 1);\r\n    const newHome = {\r\n      ...home,\r\n      itemIds: homeitemIds,\r\n    };\r\n\r\n    const oldItems = this.state.items;\r\n    const newItems = Object.keys(oldItems).reduce((object, key) => {\r\n      if (key !== id) {\r\n        object[key] = oldItems[key];\r\n      }\r\n      return object;\r\n    }, {});\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      items: newItems,\r\n      columns: {\r\n        ...this.state.columns,\r\n        [newHome.id]: newHome,\r\n      },\r\n    };\r\n\r\n    refreshSidebar = !refreshSidebar;\r\n    this.setState(newState);\r\n  }\r\n\r\n  updateColHeader = (id, newTitle, newColor) => {\r\n    const oldHeader = this.state.columns[id];\r\n    const newHeader = {\r\n      ...oldHeader,\r\n      title: newTitle,\r\n      color: newColor\r\n    };\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        [id]: newHeader\r\n      }\r\n    };\r\n    this.setState(newState);\r\n  }\r\n\r\n  addNewGroup = () => {\r\n    const ID = `column-${new Date().getTime()}`;\r\n    const newColumnOrder = Array.from(this.state.columnOrder).concat(ID);\r\n    const newState = {\r\n      ...this.state,\r\n      columnOrder: newColumnOrder\r\n    };\r\n    newState['columns'][ID] = {\r\n      id: ID,\r\n      title: 'NEW',\r\n      color: 'gray',\r\n      itemIds: [],\r\n    };\r\n    this.setState(newState);\r\n  }\r\n\r\n  removeCol = (id, keepItems) => {\r\n    const oldItems = this.state.items;\r\n    const newItems = keepItems ? oldItems : Object.keys(oldItems).reduce((object, key) => {\r\n      if(!this.state.columns[id].itemIds.includes(key)) {\r\n        object[key] = oldItems[key];\r\n      }\r\n      return object;\r\n    }, {});\r\n\r\n    const newColumnOrder = Array.from(this.state.columnOrder);\r\n    newColumnOrder.splice(newColumnOrder.indexOf(id), 1);\r\n\r\n    const oldColumns = this.state.columns;\r\n    if(keepItems) oldColumns['item-pool'].itemIds = oldColumns['item-pool'].itemIds.concat(oldColumns[id].itemIds);\r\n    const newColumns = Object.keys(oldColumns).reduce((object, key) => {\r\n      if (key !== id) {\r\n        object[key] = oldColumns[key];\r\n      }\r\n      return object;\r\n    }, {});\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      items: newItems,\r\n      columns: newColumns,\r\n      columnOrder: newColumnOrder,\r\n    };\r\n\r\n    refreshSidebar = !refreshSidebar;\r\n    this.setState(newState);\r\n  }\r\n\r\n  resetAllItems = () => {\r\n    let newColumns = this.state.columns;\r\n    Object.keys(newColumns).forEach(function(key) {\r\n      if(key === 'item-pool') return;\r\n      newColumns['item-pool'].itemIds = newColumns['item-pool'].itemIds.concat(newColumns[key].itemIds);\r\n      newColumns[key].itemIds = [];\r\n    });\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      columns: newColumns\r\n    };\r\n    \r\n    showDeleteButton = false;\r\n    refreshColumns = !refreshColumns;\r\n    this.setState(newState);\r\n  }\r\n\r\n  removeAllItems = () => {\r\n    this.resetAllItems();\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        'item-pool': {\r\n          id: 'item-pool',\r\n          itemIds: [],\r\n        }\r\n      },\r\n      items: {},\r\n    };\r\n\r\n    showDeleteButton = false;\r\n    refreshSidebar = !refreshSidebar;\r\n    this.setState(newState);\r\n  }\r\n\r\n  resetAllColumns = () => {\r\n    this.resetAllItems();\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        'column-1': {\r\n          id: 'column-1',\r\n          title: 'S',\r\n          color: '#DC3CA0',\r\n          itemIds: [],\r\n        },\r\n        'column-2': {\r\n          id: 'column-2',\r\n          title: 'A',\r\n          color: '#F63E02',\r\n          itemIds: [],\r\n        },\r\n        'column-3': {\r\n          id: 'column-3',\r\n          title: 'B',\r\n          color: '#F5B700',\r\n          itemIds: [],\r\n        },\r\n        'column-4': {\r\n          id: 'column-4',\r\n          title: 'C',\r\n          color: '#1DB954',\r\n          itemIds: [],\r\n        }\r\n      },\r\n      columnOrder: ['column-1', 'column-2', 'column-3','column-4']\r\n    }\r\n\r\n    showDeleteButton = false;\r\n    refreshColumns = !refreshColumns;\r\n    this.setState(newState);\r\n  }\r\n\r\n  resetTierList = () => {\r\n    this.resetAllItems();\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        'column-1': {\r\n          id: 'column-1',\r\n          title: 'S',\r\n          color: '#DC3CA0',\r\n          itemIds: [],\r\n        },\r\n        'column-2': {\r\n          id: 'column-2',\r\n          title: 'A',\r\n          color: '#F63E02',\r\n          itemIds: [],\r\n        },\r\n        'column-3': {\r\n          id: 'column-3',\r\n          title: 'B',\r\n          color: '#F5B700',\r\n          itemIds: [],\r\n        },\r\n        'column-4': {\r\n          id: 'column-4',\r\n          title: 'C',\r\n          color: '#1DB954',\r\n          itemIds: [],\r\n        },\r\n        'item-pool': {\r\n          id: 'item-pool',\r\n          itemIds: [],\r\n        }\r\n      },\r\n      items: {},\r\n      columnOrder: ['column-1', 'column-2', 'column-3','column-4']\r\n    };\r\n    \r\n    showDeleteButton = false;\r\n    refreshColumns = !refreshColumns;\r\n    refreshSidebar = !refreshSidebar;\r\n    this.setState(newState);\r\n  }\r\n\r\n  showSearch = (show) => {\r\n    if(show) {\r\n      document.getElementById(\"tierlist-all\").classList.add(\"show-search\");\r\n      document.getElementById(\"search-toggle\").classList.add(\"show-search\");\r\n    }\r\n    else {\r\n      document.getElementById(\"tierlist-all\").classList.remove(\"show-search\");\r\n      document.getElementById(\"search-toggle\").classList.remove(\"show-search\");\r\n    }\r\n    showSearchbar = show;\r\n    this.setState(this.state);\r\n  }\r\n\r\n  showItems = (show) => {\r\n    if(show) {\r\n      document.getElementById(\"tierlist-all\").classList.add(\"show-items\");\r\n      document.getElementById(\"itempool-toggle\").classList.add(\"show-items\");\r\n    }\r\n    else {\r\n      document.getElementById(\"tierlist-all\").classList.remove(\"show-items\");\r\n      document.getElementById(\"itempool-toggle\").classList.remove(\"show-items\");\r\n    }\r\n    showItemPool = show;\r\n    this.setState(this.state);\r\n  }\r\n\r\n  onDragEnd = result => {\r\n    const { destination, source, draggableId, type } = result;\r\n\r\n    if (!destination) return;\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) return;\r\n\r\n    if (type === 'column') {\r\n      const newColumnOrder = Array.from(this.state.columnOrder);\r\n      newColumnOrder.splice(source.index, 1);\r\n      newColumnOrder.splice(destination.index, 0, draggableId);\r\n\r\n      const newState = {\r\n        ...this.state,\r\n        columnOrder: newColumnOrder\r\n      };\r\n      this.setState(newState);\r\n      return;\r\n    }\r\n\r\n    const home = this.state.columns[source.droppableId];\r\n    const foreign = this.state.columns[destination.droppableId];\r\n\r\n    if (destination.droppableId === 'trash-can') {\r\n      this.deleteItem(draggableId, source, home);\r\n      return;\r\n    }\r\n\r\n    if (home === foreign) {\r\n      const newitemIds = Array.from(home.itemIds);\r\n      newitemIds.splice(source.index, 1);\r\n      newitemIds.splice(destination.index, 0, draggableId);\r\n\r\n      const newHome = {\r\n        ...home,\r\n        itemIds: newitemIds\r\n      };\r\n\r\n      const newState = {\r\n        ...this.state,\r\n        columns: {\r\n          ...this.state.columns,\r\n          [newHome.id]: newHome\r\n        }\r\n      };\r\n\r\n      this.setState(newState);\r\n      return;\r\n    }\r\n\r\n    // moving from one list to another\r\n    const homeitemIds = Array.from(home.itemIds);\r\n    homeitemIds.splice(source.index, 1);\r\n    const newHome = {\r\n      ...home,\r\n      itemIds: homeitemIds,\r\n    };\r\n\r\n    const foreignitemIds = Array.from(foreign.itemIds);\r\n    foreignitemIds.splice(destination.index, 0, draggableId);\r\n    const newForeign = {\r\n      ...foreign,\r\n      itemIds: foreignitemIds,\r\n    };\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        [newHome.id]: newHome,\r\n        [newForeign.id]: newForeign,\r\n      },\r\n    };\r\n    this.setState(newState);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"tierlist-all\" style={{display: 'flex', flexDirection: 'column', height: '100vh'}}>\r\n        <Container style={{flexWrap: 'wrap', margin: '1.5rem 3rem 0 3rem'}}>\r\n          <h1 className=\"title-heading\">Spotify Tier List Maker</h1>\r\n          <div style={{display: 'flex', flexWrap: 'wrap', alignItems: 'center', justifyContent: 'center', margin: '0 1.5rem'}}>\r\n            <ButtonGroup className=\"toolbar-button\">\r\n              <OverlayTrigger\r\n                placement={'top'}\r\n                overlay={<Tooltip>Add Column</Tooltip>}\r\n              >\r\n                <Button style={{marginRight: 0}} size=\"lg\" variant=\"outline-secondary\" onClick={() => { showDeleteButton = false; this.addNewGroup(); }}>Add</Button>\r\n              </OverlayTrigger>\r\n              <OverlayTrigger\r\n                placement={'top'}\r\n                overlay={<Tooltip>Toggle Delete Buttons</Tooltip>}\r\n              >\r\n                <Button style={showDeleteButton ? {color: \"white\"} : {}} size=\"lg\" variant=\"outline-secondary\" onClick={() => { showDeleteButton = !showDeleteButton; this.setState(this.state); }}>Delete</Button>\r\n              </OverlayTrigger>\r\n            </ButtonGroup>\r\n            \r\n            <OverlayTrigger\r\n              placement={'top'}\r\n              overlay={<Tooltip>Reset Placements</Tooltip>}\r\n            >\r\n              <DropdownButton\r\n                className=\"toolbar-dropdown\"\r\n                size=\"lg\"\r\n                variant=\"outline-secondary\"\r\n                menuVariant=\"dark\"\r\n                title=\"Reset\"\r\n                menuRole=\"Reset placements\"\r\n              >\r\n                <Dropdown.Item as=\"button\" onClick={this.resetAllItems}>Reset All Items</Dropdown.Item>\r\n                <Dropdown.Item as=\"button\" onClick={this.removeAllItems}>Delete All Items</Dropdown.Item>\r\n                <Dropdown.Item as=\"button\" onClick={this.resetAllColumns}>Reset All Columns</Dropdown.Item>\r\n                <Dropdown.Item as=\"button\" onClick={this.resetTierList}>Reset Tier List</Dropdown.Item>\r\n              </DropdownButton>\r\n            </OverlayTrigger>\r\n\r\n            <OverlayTrigger\r\n              placement={'top'}\r\n              overlay={<Tooltip>Save Image</Tooltip>}\r\n            >\r\n              <DropdownButton\r\n                className=\"toolbar-dropdown\"\r\n                size=\"lg\"\r\n                variant=\"outline-secondary\"\r\n                menuVariant=\"dark\"\r\n                title=\"Save\"\r\n                menuRole=\"Save as image\"\r\n              >\r\n                {saveFileTypes.map((fileType) => (\r\n                  <Dropdown.Item as=\"button\" key={fileType} type=\"button\" onClick={() => this.saveAsIMG(fileType)}>Save as .{fileType}</Dropdown.Item>\r\n                ))}\r\n              </DropdownButton>\r\n            </OverlayTrigger>\r\n\r\n            <OverlayTrigger\r\n              placement={'top'}\r\n              overlay={<Tooltip>Import/Export Data</Tooltip>}\r\n            >\r\n              <DropdownButton\r\n                className=\"toolbar-dropdown\"\r\n                size=\"lg\"\r\n                variant=\"outline-secondary\"\r\n                menuVariant=\"dark\"\r\n                title=\"Data\"\r\n                menuRole=\"Import/export .json data\"\r\n              >\r\n                <Dropdown.Item\r\n                  href={`data:text/json;charset=utf-8,${encodeURIComponent(JSON.stringify(this.state))}`}\r\n                  download=\"tierlist.json\"\r\n                  id=\"export-data\"\r\n                  onSelect={() => { showDeleteButton = false; this.setState(this.state); }}\r\n                >\r\n                  Export as Json\r\n                </Dropdown.Item>\r\n                <Dropdown.ItemText id=\"import-data\">\r\n                  <label style={{width: '100%'}} htmlFor=\"import_tierlist\">Import from Json</label>\r\n                  <br/>\r\n                  <input style={{display: 'flex'}}type=\"file\" id=\"import_tierlist\" name=\"import_tierlist\" accept=\".json\" onChange={this.importFromJson}/>\r\n                </Dropdown.ItemText>\r\n              </DropdownButton>\r\n            </OverlayTrigger>\r\n          </div>\r\n        </Container>\r\n\r\n        <DragDropContext onDragEnd={this.onDragEnd}>\r\n          <div id=\"tierlist-outer\">\r\n            <div id=\"tierlist-holder\">\r\n              <Droppable droppableId=\"tiers\" direction=\"horizontal\" type=\"column\">\r\n                {provided => (\r\n                  <div\r\n                    {...provided.droppableProps}\r\n                    ref={provided.innerRef}\r\n                    key={refreshColumns}\r\n                    id=\"tierlist-inner\"\r\n                  >\r\n                    {this.state.columnOrder.map((columnId, index) => {\r\n                      const column = this.state.columns[columnId];\r\n                      return (\r\n                        <InnerList\r\n                          key={column.id}\r\n                          column={column}\r\n                          itemMap={this.state.items}\r\n                          index={index}\r\n                          updateHeader={this.updateColHeader}\r\n                          deleteHandler={this.removeCol}\r\n                          showDeleteButton={showDeleteButton}\r\n                        />\r\n                      );\r\n                    })}\r\n                    {provided.placeholder}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </div>\r\n          </div>\r\n\r\n          <OverlayTrigger\r\n            placement={'right'}\r\n            overlay={<Tooltip>{showItemPool ? 'Hide' : 'Show'} Items</Tooltip>}\r\n          >\r\n            <button id=\"itempool-toggle\" style={{backgroundColor: showItemPool ? \"#009c37d7\" : \"\"}} type=\"button\" onClick={() => this.showItems(!showItemPool)}>🎵</button>\r\n          </OverlayTrigger>\r\n          <Offcanvas id=\"itempool-overlay\" show={showItemPool} onHide={() => this.showItems(false)} placement={'start'} scroll backdrop={false}>\r\n            <Offcanvas.Header style={{justifyContent: \"center\", paddingBottom: \"0.5rem\"}}>\r\n              <Offcanvas.Title><h1 className=\"main-heading\">Items</h1></Offcanvas.Title>\r\n            </Offcanvas.Header>\r\n            <Offcanvas.Body style={{padding: 0}}>\r\n              <TrashCan />\r\n              <ItemPool items = {this.state.columns['item-pool'].itemIds.map(itemId => this.state.items[itemId])} />\r\n            </Offcanvas.Body>\r\n          </Offcanvas>\r\n        </DragDropContext>\r\n\r\n        <OverlayTrigger\r\n          placement={'left'}\r\n          overlay={<Tooltip>{showSearchbar ? 'Hide' : 'Show'} Search</Tooltip>}\r\n        >\r\n          <button id=\"search-toggle\" style={{backgroundColor: showSearchbar ? \"#009c37d7\" : \"\"}} type=\"button\" onClick={() => this.showSearch(!showSearchbar)}>🔍</button>\r\n        </OverlayTrigger>\r\n        <Offcanvas id=\"sidebar-overlay\" show={showSearchbar} onHide={() => this.showSearch(false)} placement={'end'} scroll backdrop={false}>\r\n          <Offcanvas.Header style={{justifyContent: \"center\", paddingBottom: \"0.5rem\"}}>\r\n            <Offcanvas.Title><h1 className=\"main-heading\">Search</h1></Offcanvas.Title>\r\n          </Offcanvas.Header>\r\n          <Offcanvas.Body style={{padding: \"0.5rem 0 0 0\", overflowY: 'scroll'}}>\r\n            <SidebarSearch refreshSidebar={refreshSidebar}/>\r\n          </Offcanvas.Body>\r\n        </Offcanvas>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TierList","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport TierList from './tierlist/TierList';\nimport { TierListContext, initialData } from './tierlist/TierListContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './sidebar-styles.css';\n\nReactDOM.render(\n  <TierListContext.Provider value = {initialData}>\n    <Provider store={store}>\n      <TierList/>\n    </Provider>\n  </TierListContext.Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}