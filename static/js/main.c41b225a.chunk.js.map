{"version":3,"sources":["sidebar/utils/constants.js","sidebar/reducers/tracks.js","sidebar/reducers/albums.js","sidebar/reducers/artists.js","store/store.js","sidebar/images/music.jpeg","tierlist/components/Item.jsx","tierlist/components/ColumnColorPicker.js","tierlist/imgs/tool.svg","tierlist/imgs/palette.svg","tierlist/components/Title.jsx","tierlist/components/Column.jsx","tierlist/components/ItemPool.jsx","tierlist/components/TrashCan.jsx","tierlist/TierListContext.js","sidebar/utils/functions.js","sidebar/utils/api.js","sidebar/actions/result.js","sidebar/components/TracksList.js","sidebar/components/AlbumsList.js","sidebar/components/ArtistsList.js","sidebar/components/SearchResult.js","sidebar/components/SearchForm.js","sidebar/components/Loader.js","sidebar/components/Dashboard.js","sidebar/SidebarSearch.js","sidebar/components/Header.js","tierlist/TierList.js","index.js"],"names":["SET_TRACKS","ADD_TRACKS","SET_ALBUMS","ADD_ALBUMS","SET_ARTISTS","ADD_ARTISTS","tracksReducer","state","action","tracks","type","next","items","albumsReducer","albums","artistsReducer","artists","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunk","ItemContent","styled","div","props","isDragging","Item","draggableId","this","item","id","index","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","Card","style","margin","Container","Row","Col","xs","target","href","songURL","rel","imgURL","Img","src","alt","music","Body","Title","title","subtitle","Text","React","Component","ColumnColorPicker","useColor","color","setColor","height","width","onChange","e","updateColor","hex","hideHSV","hideRGB","dark","TitleStyle","h3","attrs","backgroundColor","InputStyle","textarea","ButtonStyle","button","inputRef","useRef","useState","colData","setID","setTitle","inputVisible","setInputVisible","update","updateHeader","deleteHandler","onClickOutSide","current","contains","setEditing","useEffect","document","addEventListener","removeEventListener","Fragment","display","alignItems","onSubmit","value","Dropdown","autoClose","as","ButtonGroup","drop","OverlayTrigger","placement","overlay","Tooltip","Toggle","variant","Image","palette","fluid","Menu","newColor","onClick","textShadow","wordBreak","flexGrow","overflow","tool","ItemList","isDraggingOver","InnerList","nextProps","map","Column","isEditing","column","isDragDisabled","setState","droppableId","droppableProps","placeholder","ItemPool","className","TrashCan","initialData","data","columns","itemIds","columnOrder","containsItem","addToItemPool","deleteFromItemPool","TierListContext","createContext","setAuthHeader","params","JSON","parse","localStorage","getItem","axios","defaults","headers","common","error","console","log","get","url","a","result","getAuthToken","process","Accept","auth","username","password","grant_type","post","qs","stringify","response","setTracks","setAlbums","setArtists","initiateGetResult","searchTerm","dispatch","API_URL","encodeURIComponent","initiateLoadMoreTracks","initiateLoadMoreAlbums","initiateLoadMoreArtists","TracksList","updater","setUpdater","Object","keys","length","track","external_urls","spotify","name","artist","join","_","isEmpty","album","images","Consumer","maxWidth","marginLeft","marginRight","AlbumsList","ArtistsList","SearchResult","loadMore","setCategory","selectedCategory","Button","SearchForm","setSearchTerm","errorMsg","setErrorMsg","Form","event","preventDefault","trim","handleSearch","Group","controlId","Control","autoComplete","Loader","createElement","node","loader","querySelector","appendChild","classList","add","show","remove","body","ReactDOM","createPortal","children","connect","isLoading","setIsLoading","updateCategory","setSelectedCategory","isValidSession","refreshSession","then","category","SidebarSearch","newState","access_token","expires_in","setItem","Date","getTime","loaded","expiryTime","currentTime","refreshSidebar","Header","itemMap","itemId","PureComponent","refreshColumns","showSearchbar","TierList","context","importFromJson","fileReader","FileReader","readAsText","files","onload","Array","isArray","hasValidColumns","requiredColumnKeys","forEach","key","columnKeys","every","v","i","allColumns","splice","indexOf","el","includes","hasValidItems","requiredItemKeys","itemKeys","allItems","concat","deleteItem","source","home","homeitemIds","from","newHome","oldItems","newItems","reduce","object","updateColHeader","newTitle","oldHeader","newHeader","removeCol","newColumnOrder","oldColumns","newColumns","onDragEnd","destination","foreign","foreignitemIds","newForeign","newitemIds","addNewGroup","ID","resetAllItems","removeAllItems","resetAllColumns","resetTierList","showSearch","newItemIds","newItemPool","delIndex","toSvg","getElementById","dataUrl","link","download","click","catch","err","htmlFor","accept","saveAsSVG","direction","columnId","Offcanvas","onHide","closeButton","closeVariant","padding","overflowY","contextType","render","Provider"],"mappings":"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","file":"static/js/main.c41b225a.chunk.js","sourcesContent":["export const SET_TRACKS = 'SET_TRACKS';\r\nexport const ADD_TRACKS = 'ADD_TRACKS';\r\nexport const SET_ALBUMS = 'SET_ALBUMS';\r\nexport const ADD_ALBUMS = 'ADD_ALBUMS';\r\nexport const SET_ARTISTS = 'SET_ARTISTS';\r\nexport const ADD_ARTISTS = 'ADD_ARTISTS';","import { SET_TRACKS, ADD_TRACKS } from '../utils/constants';\r\n\r\nconst tracksReducer = (state = {}, action) => {\r\n  const { tracks } = action;\r\n  switch (action.type) {\r\n    case SET_TRACKS:\r\n      return tracks;\r\n    case ADD_TRACKS:\r\n      return {\r\n        ...state,\r\n        next: tracks.next,\r\n        items: [...state.items, ...tracks.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tracksReducer;","import { SET_ALBUMS, ADD_ALBUMS } from '../utils/constants';\r\n\r\nconst albumsReducer = (state = {}, action) => {\r\n  const { albums } = action;\r\n  switch (action.type) {\r\n    case SET_ALBUMS:\r\n      return albums;\r\n    case ADD_ALBUMS:\r\n      return {\r\n        ...state,\r\n        next: albums.next,\r\n        items: [...state.items, ...albums.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default albumsReducer;","import { SET_ARTISTS, ADD_ARTISTS } from '../utils/constants';\r\n\r\nconst artistsReducer = (state = {}, action) => {\r\n  const { artists } = action;\r\n  switch (action.type) {\r\n    case SET_ARTISTS:\r\n      return artists;\r\n    case ADD_ARTISTS:\r\n      return {\r\n        ...state,\r\n        next: artists.next,\r\n        items: [...state.items, ...artists.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default artistsReducer;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport tracksReducer from '../sidebar/reducers/tracks';\r\nimport albumsReducer from '../sidebar/reducers/albums';\r\nimport artistsReducer from '../sidebar/reducers/artists';\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    tracks: tracksReducer,\r\n    albums: albumsReducer,\r\n    artists: artistsReducer\r\n  }),\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","export default __webpack_public_path__ + \"static/media/music.b2fe7d4d.jpeg\";","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { Card, Container, Row, Col } from 'react-bootstrap';\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport music from '../../sidebar/images/music.jpeg';\r\n\r\nconst ItemContent = styled.div`\r\n  margin-bottom: 8px;\r\n  background-color: ${props => (props.isDragging ? '#1DB954' : 'none')};\r\n  border-radius: 4px;\r\n`;\r\n\r\nexport default class Item extends React.Component {\r\n    render() {\r\n      return (\r\n        <Draggable draggableId={this.props.item.id} index={this.props.index}>\r\n          {(provided, snapshot) => (\r\n            <ItemContent\r\n              {...provided.draggableProps}\r\n              {...provided.dragHandleProps}\r\n              ref={provided.innerRef}\r\n              isDragging={snapshot.isDragging}\r\n            >\r\n              <Card style={{ margin: 0 }}>\r\n                <Container>\r\n                  <Row>\r\n                    <Col xs=\"auto\">\r\n                      <a\r\n                        target=\"_blank\"\r\n                        href={this.props.item.songURL}\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        {this.props.item.imgURL ? (\r\n                          <Card.Img src={this.props.item.imgURL} alt=\"\" />\r\n                        ) : (\r\n                          <img src={music} alt=\"\" />\r\n                        )}\r\n                      </a>\r\n                    </Col>\r\n                    <Col>\r\n                      <Card.Body>\r\n                        <Card.Title>{this.props.item.title}</Card.Title>\r\n                        {this.props.item.subtitle &&\r\n                          <Card.Text>\r\n                            <small>\r\n                              {this.props.item.subtitle}\r\n                            </small>\r\n                          </Card.Text>\r\n                        }\r\n                      </Card.Body>\r\n                    </Col>\r\n                  </Row>\r\n                </Container>\r\n              </Card>\r\n            </ItemContent>\r\n          )}\r\n        </Draggable>\r\n      );\r\n    }\r\n  }","import { ColorPicker, useColor } from \"react-color-palette\";\r\nimport \"react-color-palette/lib/css/styles.css\";\r\n\r\nexport const ColumnColorPicker = props => {\r\n  const [color, setColor] = useColor(\"hex\", props.color);\r\n\r\n  return <ColorPicker height={160} width={240} color={color} onChange={e => { props.updateColor(e.hex); setColor(e); }} hideHSV hideRGB dark />;\r\n};","export default __webpack_public_path__ + \"static/media/tool.f60e7b86.svg\";","export default __webpack_public_path__ + \"static/media/palette.c614a1c8.svg\";","import React, { useState, useRef, useEffect } from 'react';\r\nimport { Image, Dropdown, ButtonGroup, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { ColumnColorPicker } from \"./ColumnColorPicker\"\r\nimport styled from 'styled-components';\r\nimport tool from '../imgs/tool.svg'\r\nimport palette from '../imgs/palette.svg'\r\nimport \"react-color-palette/lib/css/styles.css\";\r\nimport '../tierlist-styles.css'\r\n\r\nconst TitleStyle = styled.h3.attrs(props => ({\r\n  style: {\r\n    backgroundColor: props.color,\r\n  },\r\n}))`padding: 8px;\r\nmargin-bottom: 0;\r\ndisplay: flex;\r\nmax-width: 21rem;\r\nuser-select: none;`\r\n\r\n// how tf do i make this full height when editing\r\nconst InputStyle = styled.textarea`\r\n    flex-grow: 1;\r\n    overflow: hidden;\r\n    word-break: break-all;\r\n    min-height: 40px;\r\n    max-width: 17rem;\r\n    height: 40px;\r\n    resize: both;\r\n`;\r\n\r\nconst ButtonStyle = styled.button`\r\n    width: 40px;\r\n    min-width: 40px;\r\n    height: 40px;\r\n    float: right;\r\n    margin-left: 8px;\r\n    outline: none;\r\n    background: transparent no-repeat;\r\n    border: none;\r\n    border-radius: 50%;\r\n`;\r\n\r\nconst Title = props => {\r\n  const inputRef = useRef(null);\r\n  const [id, setID] = useState(props.colData.id);\r\n  const [title, setTitle] = useState(props.colData.title);\r\n  const [color, setColor] = useState(props.colData.color);\r\n  const [inputVisible, setInputVisible] = useState(false);\r\n  const update = props.updateHeader;\r\n  const deleteHandler = props.deleteHandler;\r\n\r\n  function updateColor(newColor) {\r\n    setColor(newColor);\r\n    update(id, title, newColor);\r\n  }\r\n  function onClickOutSide(e) {\r\n    if (inputRef.current && !inputRef.current.contains(e.target)) {\r\n      setInputVisible(false);\r\n      props.setEditing(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (inputVisible) document.addEventListener(\"mousedown\", onClickOutSide);\r\n    return () => { document.removeEventListener(\"mousedown\", onClickOutSide); };\r\n  });\r\n\r\n  useEffect(() => {\r\n    setID(props.colData.id);\r\n    setTitle(props.colData.title);\r\n    setColor(props.colData.color);\r\n  }, [props.colData]);\r\n\r\n  return (\r\n    <TitleStyle color={color}>\r\n      <React.Fragment>\r\n        {inputVisible ? (\r\n          <form style={{width: \"100%\", display: \"flex\", alignItems: \"center\"}} onSubmit={() => { setInputVisible(false); props.setEditing(false); }} ref={inputRef}>\r\n            <InputStyle\r\n              value={title}\r\n              onChange={e => {\r\n                setTitle(e.target.value);\r\n                update(id, e.target.value, color);\r\n              }}\r\n            />\r\n             <Dropdown autoClose=\"inside\" as={ButtonGroup} drop=\"right\">\r\n              <OverlayTrigger\r\n                placement={'top'}\r\n                overlay={<Tooltip>Edit Color/Delete Column</Tooltip>}\r\n              >\r\n                <Dropdown.Toggle id='color-toggle' variant=\"secondary\">\r\n                  <Image src={palette} fluid alt='colors' style={{width: \"100%\", height: \"100%\"}}/>\r\n                </Dropdown.Toggle>\r\n              </OverlayTrigger>\r\n              <Dropdown.Menu id='color-dropdown' variant=\"dark\">\r\n                <ColumnColorPicker color={color} updateColor={updateColor}/>\r\n                <Dropdown.Item id=\"delete-col-item\" onClick={() => { deleteHandler(id); }}>🗑️ DELETE COLUMN</Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </form>\r\n        ) : (\r\n          <div style={{width: \"100%\", display: \"flex\", alignItems: \"center\"}}>\r\n            <div style={{color: \"white\", textShadow: \"0 0 4px black\", wordBreak: \"break-all\", flexGrow: \"1\", overflow: \"hidden\"}}>{title}</div>\r\n            <OverlayTrigger\r\n              placement={'top'}\r\n              overlay={<Tooltip>Edit Column</Tooltip>}\r\n            >\r\n              <ButtonStyle onClick={() => { setInputVisible(true); props.setEditing(true); }}>\r\n                <Image src={tool} fluid alt='settings' style={{width: \"100%\", height: \"100%\"}}/>\r\n              </ButtonStyle> \r\n            </OverlayTrigger>\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    </TitleStyle>\r\n  );\r\n};\r\n\r\nexport default Title; ","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport Item from './Item';\r\nimport Title from './Title'\r\n\r\nconst Container = styled.div`\r\n  margin: 8px;\r\n  border: 3px solid black;\r\n  background-color: none;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ItemList = styled.div`\r\n  padding: 8px;\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${props => props.isDraggingOver ? 'lightgrey' : 'none'};\r\n  flex-grow: 1;\r\n  min-width: 21rem;\r\n  min-height: 24rem;\r\n`;\r\n\r\nclass InnerList extends React.Component {\r\n  shouldComponentUpdate(nextProps) {\r\n    if (nextProps.items === this.props.items) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  render() {\r\n    return this.props.items.map((item, index) => (\r\n      <Item key={item.id} item={item} index={index} />\r\n    ));\r\n  }\r\n}\r\n\r\nexport default class Column extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEditing: false\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Draggable draggableId={this.props.column.id} index={this.props.index} isDragDisabled={this.state.isEditing}>\r\n        {provided => (\r\n          <Container {...provided.draggableProps} ref={provided.innerRef}>\r\n            <div {...provided.dragHandleProps}>\r\n              <Title\r\n                colData={this.props.column}\r\n                updateHeader={this.props.updateHeader}\r\n                deleteHandler={this.props.deleteHandler}\r\n                setEditing={(e) => this.setState({ isEditing: e })}/>\r\n            </div>\r\n            <Droppable droppableId={this.props.column.id} type=\"item\">\r\n              {(provided, snapshot) => (\r\n                <ItemList\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  isDraggingOver={snapshot.isDraggingOver}\r\n                >\r\n                  <InnerList items={this.props.items} />\r\n                  {provided.placeholder}\r\n                </ItemList>\r\n              )}\r\n            </Droppable>\r\n          </Container>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport Item from './Item';\r\n\r\nconst Container = styled.div`\r\n  margin: 8px;\r\n  border: 1px solid #1DB954;\r\n  background-color: none;\r\n  border-radius: 2px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 21.125rem;\r\n`;\r\n\r\nconst ItemList = styled.div`\r\n  padding: 8px;\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${props => props.isDraggingOver ? 'lightgrey' : 'none'};\r\n  flex-grow: 1;\r\n  min-height: 16rem;\r\n`;\r\n\r\nclass InnerList extends React.Component {\r\n  shouldComponentUpdate(nextProps) {\r\n    if (nextProps.items === this.props.items) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  render() {\r\n    return this.props.items.map((item, index) => (\r\n      <Item key={item.id} item={item} index={index} />\r\n    ));\r\n  }\r\n}\r\n\r\nexport default class ItemPool extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"main-heading\">Items</h1>\r\n        <Container>\r\n          <Droppable droppableId=\"item-pool\" type=\"item\">\r\n            {(provided, snapshot) => (\r\n              <ItemList\r\n                ref={provided.innerRef}\r\n                {...provided.droppableProps}\r\n                isDraggingOver={snapshot.isDraggingOver}\r\n              >\r\n                <InnerList items={this.props.items} />\r\n                {provided.placeholder}\r\n              </ItemList>\r\n            )}\r\n          </Droppable>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\n\r\nconst Container = styled.div`\r\n  margin: 8px;\r\n  border: 1px solid #1DB954;\r\n  background-color: none;\r\n  border-radius: 2px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 21.2rem;\r\n`;\r\n\r\nconst ItemList = styled.div`\r\n  padding: 8px;\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${props => props.isDraggingOver ? 'pink' : 'none'};\r\n  flex-grow: 1;\r\n  height: 5rem;\r\n`;\r\n\r\nexport default class TrashCan extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"main-heading\">Trash Can</h1>\r\n        <Container>\r\n          <Droppable droppableId=\"trash-can\" type=\"item\">\r\n            {(provided, snapshot) => (\r\n                <ItemList\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  isDraggingOver={snapshot.isDraggingOver}\r\n                >\r\n                  {provided.placeholder}\r\n                </ItemList>\r\n            )}\r\n          </Droppable>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nexport const initialData = {\r\n  data: {\r\n    items: {},\r\n    columns: {\r\n      'column-1': {\r\n        id: 'column-1',\r\n        title: 'S',\r\n        color: 'purple',\r\n        itemIds: [],\r\n      },\r\n      'column-2': {\r\n        id: 'column-2',\r\n        title: 'A',\r\n        color: '#1DB954',\r\n        itemIds: [],\r\n      },\r\n      'column-3': {\r\n        id: 'column-3',\r\n        title: 'B',\r\n        color: 'blue',\r\n        itemIds: [],\r\n      },\r\n      'column-4': {\r\n        id: 'column-4',\r\n        title: 'C',\r\n        color: 'grey',\r\n        itemIds: [],\r\n      },\r\n      'item-pool': {\r\n        id: 'item-pool',\r\n        itemIds: [],\r\n      },\r\n      'trash-can': {\r\n        id: 'trash-can'\r\n      }\r\n    },\r\n    columnOrder: ['column-1', 'column-2', 'column-3','column-4']\r\n  },\r\n  containsItem: (id) => {},\r\n  addToItemPool: (id, type, songURL, imgURL, title, subtitle) => {},\r\n  deleteFromItemPool: (id, type) => {}\r\n}\r\n\r\nexport const TierListContext = React.createContext(initialData);","import axios from 'axios';\r\n\r\nexport const getParamValues = (url) => {\r\n  return url\r\n    .slice(1)\r\n    .split('&')\r\n    .reduce((prev, curr) => {\r\n      const [title, value] = curr.split('=');\r\n      prev[title] = value;\r\n      return prev;\r\n    }, {});\r\n};\r\n\r\nexport const setAuthHeader = () => {\r\n  try {\r\n    const params = JSON.parse(localStorage.getItem('params'));\r\n    if (params) {\r\n      axios.defaults.headers.common[\r\n        'Authorization'\r\n      ] = `Bearer ${params}`;\r\n    }\r\n  } catch (error) {\r\n    console.log('Error setting auth', error);\r\n  }\r\n};\r\n","import axios from 'axios';\r\nimport qs from 'qs';\r\nimport { setAuthHeader } from './functions';\r\n\r\nexport const get = async (url, params) => {\r\n  setAuthHeader();\r\n  const result = await axios.get(url, params);\r\n  return result.data;\r\n};\r\n\r\nexport const post = async (url, params) => {\r\n  setAuthHeader();\r\n  const result = await axios.post(url, params);\r\n  return result.data;\r\n};\r\n\r\nexport const getAuthToken = async () => {\r\n  const clientId = process.env.REACT_APP_CLIENT_ID;\r\n  const clientSecret = process.env.REACT_APP_CLIENT_SECRET;\r\n  \r\n  const headers = {\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    auth: {\r\n      username: clientId,\r\n      password: clientSecret,\r\n    },\r\n  };\r\n  const data = {\r\n    grant_type: 'client_credentials',\r\n  };\r\n\r\n  try {\r\n    const response = await axios.post(\r\n      'https://accounts.spotify.com/api/token',\r\n      qs.stringify(data),\r\n      headers\r\n    );\r\n    return response.data;\r\n  } catch (error) { console.log(error); }\r\n};","import {\r\n  SET_ALBUMS,\r\n  ADD_ALBUMS,\r\n  SET_ARTISTS,\r\n  ADD_ARTISTS,\r\n  SET_TRACKS,\r\n  ADD_TRACKS\r\n} from '../utils/constants';\r\nimport { get } from '../utils/api';\r\n\r\nexport const setTracks = (tracks) => ({\r\n  type: SET_TRACKS,\r\n  tracks\r\n});\r\nexport const addTracks = (tracks) => ({\r\n  type: ADD_TRACKS,\r\n  tracks\r\n});\r\n\r\nexport const setAlbums = (albums) => ({\r\n  type: SET_ALBUMS,\r\n  albums\r\n});\r\nexport const addAlbums = (albums) => ({\r\n  type: ADD_ALBUMS,\r\n  albums\r\n});\r\n\r\nexport const setArtists = (artists) => ({\r\n  type: SET_ARTISTS,\r\n  artists\r\n});\r\nexport const addArtists = (artists) => ({\r\n  type: ADD_ARTISTS,\r\n  artists\r\n});\r\n\r\nexport const initiateGetResult = (searchTerm) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const API_URL = `https://api.spotify.com/v1/search?query=${encodeURIComponent(\r\n        searchTerm\r\n      )}&type=track,album,artist&limit=24`;\r\n      const result = await get(API_URL);\r\n      console.log(result);\r\n      const { tracks, albums, artists } = result;\r\n      dispatch(setTracks(tracks));\r\n      dispatch(setAlbums(albums));\r\n      return dispatch(setArtists(artists));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateLoadMoreTracks = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log('url', url);\r\n      const result = await get(url);\r\n      console.log('categories', result);\r\n      return dispatch(addTracks(result.tracks));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateLoadMoreAlbums = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log('url', url);\r\n      const result = await get(url);\r\n      console.log('categories', result);\r\n      return dispatch(addAlbums(result.albums));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateLoadMoreArtists = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log('url', url);\r\n      const result = await get(url);\r\n      console.log('categories', result);\r\n      return dispatch(addArtists(result.artists));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Card, Container, Row, Col } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport music from '../images/music.jpeg';\r\nimport { TierListContext } from '../../tierlist/TierListContext';\r\n\r\nconst TracksList = ({ tracks }) => {\r\n  const [updater, setUpdater] = useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(tracks).length > 0 && (\r\n        <div className=\"tracks\">\r\n          {tracks.items.map((track, index) => {\r\n            let id = track.id, type = 'track', songURL = track.external_urls.spotify, title = track.name, subtitle = track.artists.map((artist) => artist.name).join(', ');\r\n            let imgURL = !_.isEmpty(track.album.images) ? track.album.images[0].url : null;\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <TierListContext.Consumer>\r\n                  {({containsItem, addToItemPool, deleteFromItemPool}) => (\r\n                    <Card style={{maxWidth: \"22rem\", width: \"22rem\", marginLeft: \"0.5rem\", marginRight: \"0.5rem\"}}>\r\n                      <Container>\r\n                        <Row>\r\n                          <Col xs=\"auto\">\r\n                            <a\r\n                              target=\"_blank\"\r\n                              href={songURL}\r\n                              rel=\"noopener noreferrer\"\r\n                            >\r\n                              {!_.isEmpty(track.album.images) ? (\r\n                                <Card.Img src={imgURL} alt=\"\" />\r\n                              ) : (\r\n                                <img src={music} alt=\"\" />\r\n                              )}\r\n                            </a>\r\n                          </Col>\r\n                          <Col>\r\n                            <Card.Body>\r\n                              <Card.Title>{title}</Card.Title>\r\n                              <Card.Text>\r\n                                <small>{subtitle}</small>\r\n                              </Card.Text>\r\n                            </Card.Body>\r\n                          </Col>\r\n                          <Col xs=\"auto\">\r\n                            <div>\r\n                              {containsItem(id, type) ? (\r\n                                <button className=\"remove-buttons\" onClick={() => {\r\n                                  deleteFromItemPool(id, type);\r\n                                  setUpdater(!updater);\r\n                                }}>x</button>\r\n                              ) : (\r\n                                <button className=\"item-buttons\" onClick={() => {\r\n                                  addToItemPool(id, type, songURL, imgURL, title, subtitle);\r\n                                  setUpdater(!updater);\r\n                                }}>+</button>\r\n                              )}\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </Container>\r\n                    </Card>\r\n                  )}\r\n                </TierListContext.Consumer>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TracksList;","import React, { useState } from 'react';\r\nimport { Card, Container, Row, Col } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport music from '../images/music.jpeg';\r\nimport { TierListContext } from '../../tierlist/TierListContext';\r\n\r\nconst AlbumsList = ({ albums }) => {\r\n  const [updater, setUpdater] = useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(albums).length > 0 && (\r\n        <div className=\"albums\">\r\n          {albums.items.map((album, index) => {\r\n            let id = album.id, type = 'album', songURL = album.external_urls.spotify, title = album.name, subtitle = album.artists.map((artist) => artist.name).join(', ');\r\n            let imgURL = !_.isEmpty(album.images) ? album.images[0].url : null;\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <TierListContext.Consumer>\r\n                  {({containsItem, addToItemPool, deleteFromItemPool}) => (\r\n                    <Card style={{maxWidth: \"22rem\", width: \"22rem\", marginLeft: \"0.5rem\", marginRight: \"0.5rem\"}}>\r\n                      <Container>\r\n                        <Row>\r\n                          <Col xs=\"auto\">\r\n                            <a\r\n                              target=\"_blank\"\r\n                              href={songURL}\r\n                              rel=\"noopener noreferrer\"\r\n                            >\r\n                              {!_.isEmpty(album.images) ? (\r\n                                <Card.Img src={album.images[0].url} alt=\"\" />\r\n                              ) : (\r\n                                <img src={music} alt=\"\" />\r\n                              )}\r\n                            </a>\r\n                          </Col>\r\n                          <Col>\r\n                            <Card.Body>\r\n                              <Card.Title style={{margin: '0'}}>{title}</Card.Title>\r\n                              <Card.Text>\r\n                                <small>{subtitle}</small>\r\n                              </Card.Text>\r\n                            </Card.Body>\r\n                          </Col>\r\n                          <Col xs=\"auto\">\r\n                            <div>\r\n                              {containsItem(id, type) ? (\r\n                                <button className=\"remove-buttons\" onClick={() => {\r\n                                  deleteFromItemPool(id, type);\r\n                                  setUpdater(!updater);\r\n                                }}>x</button>\r\n                              ) : (\r\n                                <button className=\"item-buttons\" onClick={() => {\r\n                                  addToItemPool(id, type, songURL, imgURL, title, subtitle);\r\n                                  setUpdater(!updater);\r\n                                }}>+</button>\r\n                              )}\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </Container>\r\n                    </Card>\r\n                  )}\r\n                </TierListContext.Consumer>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AlbumsList;","import React, { useState } from 'react';\r\nimport { Card, Container, Row, Col } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport music from '../images/music.jpeg';\r\nimport { TierListContext } from '../../tierlist/TierListContext';\r\n\r\nconst ArtistsList = ({ artists }) => {\r\n  const [updater, setUpdater] = useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(artists).length > 0 && (\r\n        <div className=\"artists\">\r\n          {artists.items.map((artist, index) => {\r\n            let id = artist.id, type = 'artist', songURL = artist.external_urls.spotify, title = artist.name, subtitle = null;\r\n            let imgURL = !_.isEmpty(artist.images) ? artist.images[0].url : null;\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <TierListContext.Consumer>\r\n                  {({containsItem, addToItemPool, deleteFromItemPool}) => (\r\n                    <Card style={{maxWidth: \"22rem\", width: \"22rem\", marginLeft: \"0.5rem\", marginRight: \"0.5rem\"}}>\r\n                      <Container>\r\n                        <Row>\r\n                          <Col xs=\"auto\">\r\n                            <a\r\n                              target=\"_blank\"\r\n                              href={songURL}\r\n                              rel=\"noopener noreferrer\"\r\n                            >\r\n                              {!_.isEmpty(artist.images) ? (\r\n                                <Card.Img src={artist.images[0].url} alt=\"\" />\r\n                              ) : (\r\n                                <img src={music} alt=\"\" />\r\n                              )}\r\n                            </a>\r\n                          </Col>\r\n                          <Col>\r\n                            <Card.Body>\r\n                              <Card.Title style={{margin: '0'}}>{title}</Card.Title>\r\n                            </Card.Body>\r\n                          </Col>\r\n                          <Col xs=\"auto\">\r\n                            <div>\r\n                              {containsItem(id, type) ? (\r\n                                <button className=\"remove-buttons\" onClick={() => {\r\n                                  deleteFromItemPool(id, type);\r\n                                  setUpdater(!updater);\r\n                                }}>x</button>\r\n                              ) : (\r\n                                <button className=\"item-buttons\" onClick={() => {\r\n                                  addToItemPool(id, type, songURL, imgURL, title, subtitle);\r\n                                  setUpdater(!updater);\r\n                                }}>+</button>\r\n                              )}\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </Container>\r\n                    </Card>\r\n                  )}\r\n                </TierListContext.Consumer>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ArtistsList;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport TracksList from './TracksList';\r\nimport AlbumsList from './AlbumsList';\r\nimport ArtistsList from './ArtistsList';\r\n\r\nconst SearchResult = (props) => {\r\n  const { loadMore, result, setCategory, selectedCategory } = props;\r\n  const { tracks, albums, artists } = result;\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"search-buttons\">\r\n        {!_.isEmpty(tracks.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'tracks' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('tracks')}\r\n          >\r\n            Songs\r\n          </button>\r\n        )}\r\n        {!_.isEmpty(albums.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'albums' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('albums')}\r\n          >\r\n            Albums\r\n          </button>\r\n        )}\r\n        {!_.isEmpty(artists.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'artists' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('artists')}\r\n          >\r\n            Artists\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <div className={`${selectedCategory === 'tracks' ? '' : 'hide'}`}>\r\n        {albums && <TracksList tracks={tracks} />}\r\n      </div>\r\n      <div className={`${selectedCategory === 'albums' ? '' : 'hide'}`}>\r\n        {albums && <AlbumsList albums={albums} />}\r\n      </div>\r\n      <div className={`${selectedCategory === 'artists' ? '' : 'hide'}`}>\r\n        {artists && <ArtistsList artists={artists} />}\r\n      </div>\r\n\r\n      {!_.isEmpty(result[selectedCategory]) &&\r\n       !_.isEmpty(result[selectedCategory].next) && (\r\n        <div className=\"load-more\">\r\n          <Button variant=\"info\" type=\"button\" onClick={() => loadMore(selectedCategory)}>\r\n            Load More\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SearchResult;","import React, { useState } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst SearchForm = (props) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n\r\n  const handleInputChange = (event) => {\r\n    const searchTerm = event.target.value;\r\n    setSearchTerm(searchTerm);\r\n  };\r\n\r\n  const handleSearch = (event) => {\r\n    event.preventDefault();\r\n    if (searchTerm.trim() !== '') {\r\n      setErrorMsg('');\r\n      props.handleSearch(searchTerm);\r\n    } else {\r\n      setErrorMsg('Please enter a search term.');\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleSearch}>\r\n        {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Control\r\n            type=\"search\"\r\n            name=\"searchTerm\"\r\n            value={searchTerm}\r\n            placeholder=\"Search here!\"\r\n            onChange={handleInputChange}\r\n            autoComplete=\"off\"\r\n          />\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchForm;","import { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst Loader = (props) => {\r\n  const [node] = useState(document.createElement('div'));\r\n  const loader = document.querySelector('#loader');\r\n\r\n  useEffect(() => {\r\n    loader.appendChild(node).classList.add('message');\r\n  }, [loader, node]);\r\n\r\n  useEffect(() => {\r\n    if (props.show) {\r\n      loader.classList.remove('hide');\r\n      document.body.classList.add('loader-open');\r\n    } else {\r\n      loader.classList.add('hide');\r\n      document.body.classList.remove('loader-open');\r\n    }\r\n  }, [loader, props.show]);\r\n\r\n  return ReactDOM.createPortal(props.children, node);\r\n};\r\nexport default Loader;","import React, { useState } from 'react';\r\nimport {\r\n  initiateGetResult,\r\n  initiateLoadMoreTracks,\r\n  initiateLoadMoreAlbums,\r\n  initiateLoadMoreArtists\r\n} from '../actions/result';\r\nimport { connect } from 'react-redux';\r\nimport SearchResult from './SearchResult';\r\nimport SearchForm from './SearchForm';\r\nimport Loader from './Loader';\r\n\r\nconst Dashboard = (props) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedCategory, setSelectedCategory] = [props.selectedCategory, props.updateCategory];\r\n  const { isValidSession, refreshSession } = props;\r\n\r\n  const handleSearch = async (searchTerm) => {\r\n    setIsLoading(true);\r\n    if (!isValidSession()) {\r\n      try { await refreshSession(); } \r\n      catch(error) { console.log(error); }\r\n    }\r\n    props.dispatch(initiateGetResult(searchTerm)).then(() => {\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n\r\n  const loadMore = async (type) => {\r\n    const { dispatch, tracks, albums, artists } = props;\r\n    setIsLoading(true);\r\n    if (!isValidSession()) {\r\n      try { await refreshSession(); }\r\n      catch(error) { console.log(error); }\r\n    }\r\n    switch (type) {\r\n      case 'tracks':\r\n        await dispatch(initiateLoadMoreTracks(tracks.next));\r\n        break;\r\n      case 'albums':\r\n        await dispatch(initiateLoadMoreAlbums(albums.next));\r\n        break;\r\n      case 'artists':\r\n        await dispatch(initiateLoadMoreArtists(artists.next));\r\n        break;\r\n      default:\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const setCategory = (category) => { setSelectedCategory(category); };\r\n\r\n  const { tracks, albums, artists } = props;\r\n  const result = { tracks, albums, artists };\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <SearchForm handleSearch={handleSearch} />\r\n        <Loader show={isLoading}>Loading...</Loader>\r\n        <SearchResult\r\n          result={result}\r\n          loadMore={loadMore}\r\n          setCategory={setCategory}\r\n          selectedCategory={selectedCategory}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tracks: state.tracks,\r\n    albums: state.albums,\r\n    artists: state.artists\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Dashboard);","import React from 'react';\r\nimport Dashboard from './components/Dashboard';\r\nimport { getAuthToken } from './utils/api';\r\n\r\nclass SidebarSearch extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { loaded: false, selectedCategory: 'tracks' };\r\n    }\r\n\r\n    updateCategory = (category) => {\r\n      const newState = {\r\n        ...this.state,\r\n        selectedCategory: category\r\n      };\r\n      this.setState(newState);\r\n    }\r\n    \r\n    refreshSession = async () => {\r\n        let result;\r\n        try{ result = await getAuthToken(); } \r\n        catch(error) { console.log(error); }\r\n        if(result) {\r\n          const {\r\n              access_token,\r\n              expires_in\r\n          } = result;\r\n          localStorage.setItem('params', JSON.stringify(access_token));\r\n          localStorage.setItem('expiry_time', new Date().getTime() + expires_in * 1000);\r\n          if(!this.loaded) this.setState({ loaded: true });\r\n        }\r\n    }\r\n    \r\n    isValidSession = () => {\r\n        let expiryTime;\r\n        try { expiryTime = JSON.parse(localStorage.getItem('expiry_time')); } \r\n        catch(error) { expiryTime = '0'; }\r\n        const currentTime = new Date().getTime();\r\n        if(currentTime >= expiryTime && this.loaded) this.setState({ loaded: false });\r\n        return currentTime < expiryTime;\r\n    };\r\n\r\n    render() {\r\n        if(!this.isValidSession()) {\r\n          this.refreshSession();\r\n          return (\r\n            <div className=\"sidebar-search\">\r\n              Loading...\r\n            </div>\r\n          );\r\n        }\r\n        return (\r\n          <div className=\"sidebar-search\">\r\n            <Dashboard key={this.props.refreshSidebar} isValidSession={this.isValidSession} refreshSession={this.refreshSession}\r\n              selectedCategory={this.state.selectedCategory} updateCategory={this.updateCategory} />\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SidebarSearch;","const Header = () => {\r\n  return <h1 className=\"main-heading\">Search</h1>;\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport '@atlaskit/css-reset';\r\nimport styled from 'styled-components';\r\nimport Column from './components/Column';\r\nimport ItemPool from './components/ItemPool';\r\nimport TrashCan from './components/TrashCan';\r\nimport { TierListContext } from './TierListContext';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport { Offcanvas } from 'react-bootstrap';\r\nimport { toSvg } from 'html-to-image';\r\nimport SidebarSearch from '../sidebar/SidebarSearch'\r\nimport Header from '../sidebar/components/Header';\r\nimport './tierlist-styles.css';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nclass InnerList extends React.PureComponent {\r\n  render() {\r\n    const { column, itemMap, index, updateHeader, deleteHandler } = this.props;\r\n    const items = column.itemIds.map(itemId => itemMap[itemId]);\r\n    return <Column column={column} items={items} index={index} updateHeader={updateHeader} deleteHandler={deleteHandler}/>;\r\n  }\r\n}\r\n\r\nlet refreshSidebar = false;\r\nlet refreshColumns = false;\r\nlet showSearchbar = false;\r\nlet showItempool = false;\r\n\r\nclass TierList extends React.Component {\r\n  static contextType = TierListContext;\r\n  state = this.context.data;\r\n\r\n  componentDidMount() {\r\n    this.context.containsItem = (id, type) => {\r\n      if(id in this.state.items) {\r\n        return this.state.items[id]['type'] === type;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    this.context.addToItemPool = (id, type, songURL, imgURL, title, subtitle) => {\r\n      if(this.context.containsItem(id, type)) return; // do nothing\r\n      const newItems = {\r\n        ...this.state.items,\r\n        [id]: {\r\n          id: id,\r\n          type: type,\r\n          songURL: songURL,\r\n          imgURL: imgURL,\r\n          title: title,\r\n          subtitle: subtitle\r\n        }\r\n      }\r\n      const newItemIds = Array.from(this.state.columns['item-pool'].itemIds).concat(id);\r\n      const newItemPool = {\r\n        ...this.state.columns['item-pool'],\r\n        itemIds: newItemIds\r\n      }\r\n      const newState = {\r\n        ...this.state,\r\n        items: newItems,\r\n        columns: {\r\n          ...this.state.columns,\r\n          'item-pool': newItemPool\r\n        }\r\n      };\r\n      this.setState(newState);\r\n    };\r\n    \r\n    this.context.deleteFromItemPool = (id, type) => {\r\n      if(!this.context.containsItem(id, type)) return; // do nothing\r\n      let newItems = this.state.items;\r\n      delete newItems[id];\r\n\r\n      let newColumns = this.state.columns;\r\n      Object.keys(newColumns).forEach(function(key) {\r\n        if(key === 'trash-can') return;\r\n        const delIndex = newColumns[key].itemIds.indexOf(id);\r\n        if(delIndex !== -1) newColumns[key].itemIds.splice(delIndex, 1);\r\n      });\r\n\r\n      const newState = {\r\n        ...this.state,\r\n        items: newItems,\r\n        columns: newColumns\r\n      }\r\n      console.log(newState);\r\n      refreshColumns = !refreshColumns;\r\n      this.setState(newState);\r\n    }\r\n  }\r\n\r\n  // uh-oh this might be buggy\r\n  importFromJson = e => {\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\r\n    fileReader.onload = e => {\r\n      const newState = JSON.parse(e.target.result);\r\n      // check if the required keys exist and the item-pool and trash-can exists in column and has the correct format\r\n      if(!('columnOrder' in newState && 'items' in newState && 'columns' in newState\r\n      && 'item-pool' in newState.columns && 'trash-can' in newState.columns\r\n      && 'id' in newState.columns['item-pool'] && newState.columns['item-pool'].id === 'item-pool'\r\n      && 'itemIds' in newState.columns['item-pool'] && Array.isArray(newState.columns['item-pool'].itemIds)\r\n      && 'id' in newState.columns['trash-can'] && newState.columns['trash-can'].id === 'trash-can')) {\r\n        console.log('missing required information!');\r\n        return;\r\n      }\r\n\r\n      // check if every column has the correct format\r\n      let hasValidColumns = true;\r\n      const requiredColumnKeys = ['id', 'title', 'color', 'itemIds'];\r\n      Object.keys(newState.columns).forEach(function(key) {\r\n        if(!hasValidColumns || key === 'item-pool' || key === 'trash-can') return;\r\n        const columnKeys = Object.keys(newState.columns[key]);\r\n        hasValidColumns = columnKeys.length === requiredColumnKeys.length && columnKeys.every(function(v, i) { return v === requiredColumnKeys[i]});\r\n      });\r\n      if(!hasValidColumns) {\r\n        console.log('missing required column information!');\r\n        return;\r\n      }\r\n\r\n      // check if every column in columnOrder exists in column (and no extra besides item-pool and trash-can)\r\n      const columnOrder = newState.columnOrder;\r\n      let allColumns = Object.keys(newState.columns);\r\n      allColumns.splice(allColumns.indexOf('item-pool'), 1);\r\n      allColumns.splice(allColumns.indexOf('trash-can'), 1);\r\n      if(!(columnOrder.length === allColumns.length && columnOrder.every(el => allColumns.includes(el)))) {\r\n        console.log('columnOrder and columns don\\'t match!');\r\n        return;\r\n      }\r\n\r\n      // check if every item in items has the correct format\r\n      let hasValidItems = true;\r\n      const requiredItemKeys = ['id', 'type', 'songURL', 'imgURL', 'title', 'subtitle'];\r\n      Object.keys(newState.items).forEach(function(key) {\r\n        if(!hasValidItems) return;\r\n        const itemKeys = Object.keys(newState.items[key]);\r\n        hasValidItems = itemKeys.length === requiredItemKeys.length && itemKeys.every(function(v, i) { return v === requiredItemKeys[i]});\r\n      });\r\n      if(!hasValidItems) {\r\n        console.log('missing required item information!');\r\n        return;\r\n      }\r\n\r\n      // check if every itemIDs exists in items (and no extra)\r\n      const allItems = Object.keys(newState.items);\r\n      let itemIds = [];\r\n      Object.keys(newState.columns).forEach(function(key) {\r\n        if(key === 'trash-can') return;\r\n        itemIds = itemIds.concat(newState.columns[key].itemIds);\r\n      });\r\n      if(!(itemIds.length === allItems.length && itemIds.every(el => allItems.includes(el)))) {\r\n        console.log('items and itemIds don\\'t match!');\r\n        return;\r\n      }\r\n\r\n      // success\r\n      refreshSidebar = !refreshSidebar;\r\n      this.setState(newState);\r\n      console.log(this.state);\r\n    };\r\n  }\r\n\r\n  saveAsSVG() {\r\n    toSvg(document.getElementById('tierlist_all'), {backgroundColor: '#121212'})\r\n      .then((dataUrl) => {\r\n        const link = document.createElement('a');\r\n        link.download = 'tierlist.svg';\r\n        link.href = dataUrl;\r\n        link.click();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  deleteItem = (id, source, home) => {\r\n    const homeitemIds = Array.from(home.itemIds);\r\n    homeitemIds.splice(source.index, 1);\r\n    const newHome = {\r\n      ...home,\r\n      itemIds: homeitemIds,\r\n    };\r\n\r\n    const oldItems = this.state.items;\r\n    const newItems = Object.keys(oldItems).reduce((object, key) => {\r\n      if (key !== id) {\r\n        object[key] = oldItems[key];\r\n      }\r\n      return object;\r\n    }, {});\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      items: newItems,\r\n      columns: {\r\n        ...this.state.columns,\r\n        [newHome.id]: newHome,\r\n      },\r\n    };\r\n\r\n    refreshSidebar = !refreshSidebar;\r\n    this.setState(newState);\r\n  }\r\n\r\n  updateColHeader = (id, newTitle, newColor) => {\r\n    const oldHeader = this.state.columns[id];\r\n    const newHeader = {\r\n      ...oldHeader,\r\n      title: newTitle,\r\n      color: newColor\r\n    };\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        [id]: newHeader\r\n      }\r\n    };\r\n    this.setState(newState);\r\n  }\r\n\r\n  removeCol = (id) => {\r\n    const newColumnOrder = Array.from(this.state.columnOrder);\r\n    newColumnOrder.splice(newColumnOrder.indexOf(id), 1);\r\n\r\n    const oldColumns = this.state.columns;\r\n    const newColumns = Object.keys(oldColumns).reduce((object, key) => {\r\n      if (key !== id) {\r\n        object[key] = oldColumns[key];\r\n      }\r\n      return object;\r\n    }, {});\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      columns: newColumns,\r\n      columnOrder: newColumnOrder,\r\n    };\r\n    this.setState(newState);\r\n  }\r\n\r\n  onDragEnd = result => {\r\n    const { destination, source, draggableId, type } = result;\r\n\r\n    if (!destination) return;\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) return;\r\n\r\n    if (type === 'column') {\r\n      const newColumnOrder = Array.from(this.state.columnOrder);\r\n      newColumnOrder.splice(source.index, 1);\r\n      newColumnOrder.splice(destination.index, 0, draggableId);\r\n\r\n      const newState = {\r\n        ...this.state,\r\n        columnOrder: newColumnOrder\r\n      };\r\n      this.setState(newState);\r\n      return;\r\n    }\r\n\r\n    const home = this.state.columns[source.droppableId];\r\n    const foreign = this.state.columns[destination.droppableId];\r\n    \r\n    if (destination.droppableId === 'trash-can') {\r\n      this.deleteItem(draggableId, source, home);\r\n      return;\r\n    }\r\n\r\n    if (home === foreign) {\r\n      const newitemIds = Array.from(home.itemIds);\r\n      newitemIds.splice(source.index, 1);\r\n      newitemIds.splice(destination.index, 0, draggableId);\r\n\r\n      const newHome = {\r\n        ...home,\r\n        itemIds: newitemIds\r\n      };\r\n\r\n      const newState = {\r\n        ...this.state,\r\n        columns: {\r\n          ...this.state.columns,\r\n          [newHome.id]: newHome\r\n        }\r\n      };\r\n\r\n      this.setState(newState);\r\n      return;\r\n    }\r\n\r\n    // moving from one list to another\r\n    const homeitemIds = Array.from(home.itemIds);\r\n    homeitemIds.splice(source.index, 1);\r\n    const newHome = {\r\n      ...home,\r\n      itemIds: homeitemIds,\r\n    };\r\n\r\n    const foreignitemIds = Array.from(foreign.itemIds);\r\n    foreignitemIds.splice(destination.index, 0, draggableId);\r\n    const newForeign = {\r\n      ...foreign,\r\n      itemIds: foreignitemIds,\r\n    };\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        [newHome.id]: newHome,\r\n        [newForeign.id]: newForeign,\r\n      },\r\n    };\r\n    this.setState(newState);\r\n  };\r\n\r\n  addNewGroup = () => {\r\n    const ID = `column-${new Date().getTime()}`;\r\n    const newColumnOrder = Array.from(this.state.columnOrder).concat(ID);\r\n    const newState = {\r\n      ...this.state,\r\n      columnOrder: newColumnOrder\r\n    };\r\n    newState['columns'][ID] = {\r\n      id: ID,\r\n      title: 'NEW',\r\n      color: '#1DB954',\r\n      itemIds: [],\r\n    };\r\n    this.setState(newState);\r\n  }\r\n\r\n  resetAllItems = () => {\r\n    let newColumns = this.state.columns;\r\n    Object.keys(newColumns).forEach(function(key) {\r\n      if(key === 'trash-can' || key === 'item-pool') return;\r\n      newColumns['item-pool'].itemIds = newColumns['item-pool'].itemIds.concat(newColumns[key].itemIds);\r\n      newColumns[key].itemIds = [];\r\n    });\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      columns: newColumns\r\n    };\r\n    refreshColumns = !refreshColumns;\r\n    this.setState(newState);\r\n  }\r\n\r\n  removeAllItems = () => {\r\n    this.resetAllItems();\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        'item-pool': {\r\n          id: 'item-pool',\r\n          itemIds: [],\r\n        }\r\n      },\r\n      items: {},\r\n    };\r\n    refreshSidebar = !refreshSidebar;\r\n    this.setState(newState);\r\n  }\r\n\r\n  resetAllColumns = () => {\r\n    this.resetAllItems();\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        'column-1': {\r\n          id: 'column-1',\r\n          title: 'S',\r\n          color: 'purple',\r\n          itemIds: [],\r\n        },\r\n        'column-2': {\r\n          id: 'column-2',\r\n          title: 'A',\r\n          color: '#1DB954',\r\n          itemIds: [],\r\n        },\r\n        'column-3': {\r\n          id: 'column-3',\r\n          title: 'B',\r\n          color: 'blue',\r\n          itemIds: [],\r\n        },\r\n        'column-4': {\r\n          id: 'column-4',\r\n          title: 'C',\r\n          color: 'grey',\r\n          itemIds: [],\r\n        }\r\n      },\r\n      columnOrder: ['column-1', 'column-2', 'column-3','column-4']\r\n    }\r\n    refreshColumns = !refreshColumns;\r\n    this.setState(newState);\r\n  }\r\n\r\n  resetTierList = () => {\r\n    this.resetAllItems();\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        'column-1': {\r\n          id: 'column-1',\r\n          title: 'S',\r\n          color: 'purple',\r\n          itemIds: [],\r\n        },\r\n        'column-2': {\r\n          id: 'column-2',\r\n          title: 'A',\r\n          color: '#1DB954',\r\n          itemIds: [],\r\n        },\r\n        'column-3': {\r\n          id: 'column-3',\r\n          title: 'B',\r\n          color: 'blue',\r\n          itemIds: [],\r\n        },\r\n        'column-4': {\r\n          id: 'column-4',\r\n          title: 'C',\r\n          color: 'grey',\r\n          itemIds: [],\r\n        },\r\n        'item-pool': {\r\n          id: 'item-pool',\r\n          itemIds: [],\r\n        }\r\n      },\r\n      items: {},\r\n      columnOrder: ['column-1', 'column-2', 'column-3','column-4']\r\n    };\r\n    \r\n    refreshColumns = !refreshColumns;\r\n    refreshSidebar = !refreshSidebar;\r\n    this.setState(newState);\r\n  }\r\n\r\n  showSearch = (show) => {\r\n    showSearchbar = show;\r\n    this.setState(this.state);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <DragDropContext onDragEnd={this.onDragEnd}>\r\n          <Container>\r\n            <button type=\"button\" onClick={this.addNewGroup}>Add new group</button>\r\n            <button type=\"button\" onClick={this.resetAllItems}>Reset All Items</button>\r\n            <button type=\"button\" onClick={this.removeAllItems}>Remove All Items</button>\r\n            <button type=\"button\" onClick={this.resetAllColumns}>Reset All Columns</button>\r\n            <button type=\"button\" onClick={this.resetTierList}>Reset TierList</button>\r\n            <a\r\n              href={`data:text/json;charset=utf-8,${encodeURIComponent(\r\n                JSON.stringify(this.state)\r\n              )}`}\r\n              download=\"tierlist.json\"\r\n            >\r\n              {`Export as Json`}\r\n            </a>\r\n            <div>\r\n              <label htmlFor=\"import_tierlist\">Import from Json</label>\r\n              <input type=\"file\" id=\"import_tierlist\" name=\"import_tierlist\" accept=\".json\" onChange={this.importFromJson}/>\r\n            </div>\r\n            <button type=\"button\" onClick={this.saveAsSVG}>Save as .svg</button>\r\n            <button type=\"button\" onClick={() => this.showSearch(true)}>Search</button>\r\n          </Container>\r\n\r\n          <Container>\r\n            <Droppable droppableId=\"tiers\" direction=\"horizontal\" type=\"column\">\r\n              {provided => (\r\n                <Container\r\n                  {...provided.droppableProps}\r\n                  ref={provided.innerRef}\r\n                  id=\"tierlist_all\"\r\n                  key={refreshColumns}\r\n                >\r\n                  {this.state.columnOrder.map((columnId, index) => {\r\n                    const column = this.state.columns[columnId];\r\n                    return (\r\n                      <InnerList\r\n                        key={column.id}\r\n                        column={column}\r\n                        itemMap={this.state.items}\r\n                        index={index}\r\n                        updateHeader={this.updateColHeader}\r\n                        deleteHandler={this.removeCol}\r\n                      />\r\n                    );\r\n                  })}\r\n                  {provided.placeholder}\r\n                </Container>\r\n              )}\r\n            </Droppable>\r\n          </Container>\r\n\r\n          <Container>\r\n            <TrashCan />\r\n            <ItemPool items = {this.state.columns['item-pool'].itemIds.map(itemId => this.state.items[itemId])} />\r\n          </Container>\r\n\r\n          <Offcanvas id=\"sidebar-overlay\" show={showSearchbar} onHide={() => this.showSearch(false)} placement={'end'}>\r\n            <Offcanvas.Header closeButton closeVariant='white'>\r\n              <Offcanvas.Title><Header /></Offcanvas.Title>\r\n            </Offcanvas.Header>\r\n            <Offcanvas.Body style={{padding: 0, overflowY: 'scroll'}}>\r\n              <SidebarSearch refreshSidebar={refreshSidebar}/>\r\n            </Offcanvas.Body>\r\n          </Offcanvas>\r\n        </DragDropContext>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TierList","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport TierList from './tierlist/TierList';\nimport { TierListContext, initialData } from './tierlist/TierListContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './sidebar-styles.css';\n\nReactDOM.render(\n  <TierListContext.Provider value = {initialData}>\n    <h1 className=\"title-heading\">Spotify Tier List Maker</h1>\n    <Provider store={store}>\n      <TierList/>\n    </Provider>\n  </TierListContext.Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}