{"version":3,"sources":["utils/constants.js","reducers/albums.js","reducers/artists.js","reducers/playlist.js","store/store.js","components/Header.js","components/Home.js","utils/functions.js","components/RedirectPage.js","utils/api.js","actions/result.js","images/music.jpeg","components/AlbumsList.js","components/ArtistsList.js","components/PlayList.js","components/SearchResult.js","components/SearchForm.js","components/Loader.js","components/Dashboard.js","components/NotFoundPage.js","router/AppRouter.js","index.js"],"names":["SET_ALBUMS","ADD_ALBUMS","SET_ARTISTS","ADD_ARTISTS","SET_PLAYLIST","ADD_PLAYLIST","albumsReducer","state","action","albums","type","next","items","artistsReducer","artists","playlistReducer","playlists","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","playlist","applyMiddleware","thunk","Header","className","connect","props","process","REACT_APP_CLIENT_ID","REACT_APP_AUTHORIZE_URL","REACT_APP_REDIRECT_URL","isValidSession","location","sessionExpired","session_expired","Fragment","to","Alert","variant","Button","onClick","setAuthHeader","params","JSON","parse","localStorage","getItem","axios","defaults","headers","common","access_token","error","console","log","RedirectPage","this","setExpiryTime","history","_","isEmpty","hash","push","slice","split","reduce","prev","curr","title","value","expiryTime","Date","getTime","expires_in","setItem","stringify","React","Component","get","url","a","result","data","setAlbums","setArtists","setPlayList","initiateLoadMoreAlbums","dispatch","initiateLoadMoreArtists","initiateLoadMorePlaylist","AlbumsList","Object","keys","length","map","album","index","Card","style","width","target","href","external_urls","spotify","rel","images","src","music","alt","Img","Body","Title","name","Text","artist","join","ArtistsList","PlayList","item","owner","display_name","SearchResult","loadMore","setCategory","selectedCategory","pathname","SearchForm","useState","searchTerm","setSearchTerm","errorMsg","setErrorMsg","Form","onSubmit","event","preventDefault","trim","handleSearch","Group","controlId","Label","Control","placeholder","onChange","autoComplete","Loader","document","createElement","node","loader","querySelector","useEffect","appendChild","classList","add","show","remove","body","ReactDOM","createPortal","children","isLoading","setIsLoading","setSelectedCategory","API_URL","encodeURIComponent","initiateGetResult","then","category","NotFoundPage","AppRouter","setState","exact","path","render","component","getElementById"],"mappings":"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","file":"static/js/main.b4a891d6.chunk.js","sourcesContent":["export const SET_ALBUMS = 'SET_ALBUMS';\r\nexport const ADD_ALBUMS = 'ADD_ALBUMS';\r\nexport const SET_ARTISTS = 'SET_ARTISTS';\r\nexport const ADD_ARTISTS = 'ADD_ARTISTS';\r\nexport const SET_PLAYLIST = 'SET_PLAYLIST';\r\nexport const ADD_PLAYLIST = 'ADD_PLAYLIST';\r\n","import { SET_ALBUMS, ADD_ALBUMS } from '../utils/constants';\r\n\r\nconst albumsReducer = (state = {}, action) => {\r\n  const { albums } = action;\r\n  switch (action.type) {\r\n    case SET_ALBUMS:\r\n      return albums;\r\n    case ADD_ALBUMS:\r\n      return {\r\n        ...state,\r\n        next: albums.next,\r\n        items: [...state.items, ...albums.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default albumsReducer;","import { SET_ARTISTS, ADD_ARTISTS } from '../utils/constants';\r\n\r\nconst artistsReducer = (state = {}, action) => {\r\n  const { artists } = action;\r\n  switch (action.type) {\r\n    case SET_ARTISTS:\r\n      return artists;\r\n    case ADD_ARTISTS:\r\n      return {\r\n        ...state,\r\n        next: artists.next,\r\n        items: [...state.items, ...artists.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default artistsReducer;","import { SET_PLAYLIST, ADD_PLAYLIST } from '../utils/constants';\r\n\r\nconst playlistReducer = (state = {}, action) => {\r\n  const { playlists } = action;\r\n  switch (action.type) {\r\n    case SET_PLAYLIST:\r\n      return playlists;\r\n    case ADD_PLAYLIST:\r\n      return {\r\n        ...state,\r\n        next: playlists.next,\r\n        items: [...state.items, ...playlists.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default playlistReducer;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport albumsReducer from '../reducers/albums';\r\nimport artistsReducer from '../reducers/artists';\r\nimport playlistReducer from '../reducers/playlist';\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    albums: albumsReducer,\r\n    artists: artistsReducer,\r\n    playlist: playlistReducer\r\n  }),\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\n\r\nconst Header = () => {\r\n  return <h1 className=\"main-heading\">Spotify Music Search</h1>;\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from 'react-bootstrap';\r\nimport Header from './Header';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Home = (props) => {\r\n  const {\r\n    REACT_APP_CLIENT_ID,\r\n    REACT_APP_AUTHORIZE_URL,\r\n    REACT_APP_REDIRECT_URL\r\n  } = process.env;\r\n  const handleLogin = () => {\r\n    window.location = `${REACT_APP_AUTHORIZE_URL}?client_id=${REACT_APP_CLIENT_ID}&redirect_uri=${REACT_APP_REDIRECT_URL}&response_type=token&show_dialog=true`;\r\n  };\r\n  const { isValidSession, location } = props;\r\n  const { state } = location;\r\n  const sessionExpired = state && state.session_expired;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isValidSession() ? (\r\n        <Redirect to=\"/spotify-tier-list-maker/dashboard\"/>\r\n      ) : (\r\n        <div className=\"login\">\r\n          <Header />\r\n          {sessionExpired && (\r\n            <Alert variant=\"info\">Session expired. Please login again.</Alert>\r\n          )}\r\n          <Button variant=\"info\" type=\"submit\" onClick={handleLogin}>\r\n            Login to spotify\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default connect()(Home);","import axios from 'axios';\r\n\r\nexport const getParamValues = (url) => {\r\n  return url\r\n    .slice(1)\r\n    .split('&')\r\n    .reduce((prev, curr) => {\r\n      const [title, value] = curr.split('=');\r\n      prev[title] = value;\r\n      return prev;\r\n    }, {});\r\n};\r\n\r\nexport const setAuthHeader = () => {\r\n  try {\r\n    const params = JSON.parse(localStorage.getItem('params'));\r\n    if (params) {\r\n      axios.defaults.headers.common[\r\n        'Authorization'\r\n      ] = `Bearer ${params.access_token}`;\r\n    }\r\n  } catch (error) {\r\n    console.log('Error setting auth', error);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { getParamValues } from '../utils/functions';\r\n\r\nexport default class RedirectPage extends React.Component {\r\n  componentDidMount() {\r\n    const { setExpiryTime, history, location } = this.props;\r\n    try {\r\n      if (_.isEmpty(location.hash)) {\r\n        return history.push('/spotify-tier-list-maker/dashboard');\r\n      }\r\n      const access_token = getParamValues(location.hash);\r\n      const expiryTime = new Date().getTime() + access_token.expires_in * 1000;\r\n      localStorage.setItem('params', JSON.stringify(access_token));\r\n      localStorage.setItem('expiry_time', expiryTime);\r\n      setExpiryTime(expiryTime);\r\n      history.push('/spotify-tier-list-maker/dashboard');\r\n    } catch (error) {\r\n      history.push('/spotify-tier-list-maker/');\r\n    }\r\n  }\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n","import axios from 'axios';\r\nimport { setAuthHeader } from './functions';\r\n\r\nexport const get = async (url, params) => {\r\n  setAuthHeader();\r\n  const result = await axios.get(url, params);\r\n  return result.data;\r\n};\r\n\r\nexport const post = async (url, params) => {\r\n  setAuthHeader();\r\n  const result = await axios.post(url, params);\r\n  return result.data;\r\n};","import {\r\n  SET_ALBUMS,\r\n  ADD_ALBUMS,\r\n  SET_ARTISTS,\r\n  ADD_ARTISTS,\r\n  SET_PLAYLIST,\r\n  ADD_PLAYLIST\r\n} from '../utils/constants';\r\nimport { get } from '../utils/api';\r\n\r\nexport const setAlbums = (albums) => ({\r\n  type: SET_ALBUMS,\r\n  albums\r\n});\r\nexport const addAlbums = (albums) => ({\r\n  type: ADD_ALBUMS,\r\n  albums\r\n});\r\nexport const setArtists = (artists) => ({\r\n  type: SET_ARTISTS,\r\n  artists\r\n});\r\nexport const addArtists = (artists) => ({\r\n  type: ADD_ARTISTS,\r\n  artists\r\n});\r\nexport const setPlayList = (playlists) => ({\r\n  type: SET_PLAYLIST,\r\n  playlists\r\n});\r\nexport const addPlaylist = (playlists) => ({\r\n  type: ADD_PLAYLIST,\r\n  playlists\r\n});\r\nexport const initiateGetResult = (searchTerm) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const API_URL = `https://api.spotify.com/v1/search?query=${encodeURIComponent(\r\n        searchTerm\r\n      )}&type=album,playlist,artist`;\r\n      const result = await get(API_URL);\r\n      console.log(result);\r\n      const { albums, artists, playlists } = result;\r\n      dispatch(setAlbums(albums));\r\n      dispatch(setArtists(artists));\r\n      return dispatch(setPlayList(playlists));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\nexport const initiateLoadMoreAlbums = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log('url', url);\r\n      const result = await get(url);\r\n      console.log('categoriess', result);\r\n      return dispatch(addAlbums(result.albums));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\nexport const initiateLoadMoreArtists = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log('url', url);\r\n      const result = await get(url);\r\n      console.log('categoriess', result);\r\n      return dispatch(addArtists(result.artists));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\nexport const initiateLoadMorePlaylist = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log('url', url);\r\n      const result = await get(url);\r\n      console.log('categoriess', result);\r\n      return dispatch(addPlaylist(result.playlists));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/music.b2fe7d4d.jpeg\";","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport music from '../images/music.jpeg';\r\n\r\nconst AlbumsList = ({ albums }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(albums).length > 0 && (\r\n        <div className=\"albums\">\r\n          {albums.items.map((album, index) => {\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <Card style={{ width: '18rem' }}>\r\n                  <a\r\n                    target=\"_blank\"\r\n                    href={album.external_urls.spotify}\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"card-image-link\"\r\n                  >\r\n                    {!_.isEmpty(album.images) ? (\r\n                      <Card.Img\r\n                        variant=\"top\"\r\n                        src={album.images[0].url}\r\n                        alt=\"\"\r\n                      />\r\n                    ) : (\r\n                      <img src={music} alt=\"\" />\r\n                    )}\r\n                  </a>\r\n                  <Card.Body>\r\n                    <Card.Title>{album.name}</Card.Title>\r\n                    <Card.Text>\r\n                      <small>\r\n                        {album.artists.map((artist) => artist.name).join(', ')}\r\n                      </small>\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AlbumsList;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport music from '../images/music.jpeg';\r\n\r\nconst ArtistsList = ({ artists }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(artists).length > 0 && (\r\n        <div className=\"artists\">\r\n          {artists.items.map((artist, index) => {\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <Card style={{ width: '18rem' }}>\r\n                  <a\r\n                    target=\"_blank\"\r\n                    href={artist.external_urls.spotify}\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"card-image-link\"\r\n                  >\r\n                    {!_.isEmpty(artist.images) ? (\r\n                      <Card.Img\r\n                        variant=\"top\"\r\n                        src={artist.images[0].url}\r\n                        alt=\"\"\r\n                      />\r\n                    ) : (\r\n                      <img src={music} alt=\"\" />\r\n                    )}\r\n                  </a>\r\n                  <Card.Body>\r\n                    <Card.Title>{artist.name}</Card.Title>\r\n                  </Card.Body>\r\n                </Card>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ArtistsList;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport music from '../images/music.jpeg';\r\n\r\nconst PlayList = ({ playlist }) => {\r\n  return (\r\n    <div>\r\n      {Object.keys(playlist).length > 0 && (\r\n        <div className=\"playlist\">\r\n          {playlist.items.map((item, index) => {\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <Card style={{ width: '18rem' }}>\r\n                  <a\r\n                    target=\"_blank\"\r\n                    href={item.external_urls.spotify}\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"card-image-link\"\r\n                  >\r\n                    {!_.isEmpty(item.images) ? (\r\n                      <Card.Img variant=\"top\" src={item.images[0].url} alt=\"\" />\r\n                    ) : (\r\n                      <img src={music} alt=\"\" />\r\n                    )}\r\n                  </a>\r\n                  <Card.Body>\r\n                    <Card.Title>{item.name}</Card.Title>\r\n                    <Card.Text>\r\n                      <small>By {item.owner.display_name}</small>\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayList;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport _ from 'lodash';\r\nimport AlbumsList from './AlbumsList';\r\nimport ArtistsList from './ArtistsList';\r\nimport PlayList from './PlayList';\r\n\r\nconst SearchResult = (props) => {\r\n  const { isValidSession, loadMore, result, setCategory, selectedCategory } = props;\r\n  const { albums, artists, playlist } = result;\r\n\r\n  if (!isValidSession()) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: '/spotify-tier-list-maker/',\r\n          state: {\r\n            session_expired: true\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"search-buttons\">\r\n        {!_.isEmpty(albums.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'albums' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('albums')}\r\n          >\r\n            Albums\r\n          </button>\r\n        )}\r\n        {!_.isEmpty(artists.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'artists' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('artists')}\r\n          >\r\n            Artists\r\n          </button>\r\n        )}\r\n        {!_.isEmpty(playlist.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'playlist' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('playlist')}\r\n          >\r\n            PlayLists\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <div className={`${selectedCategory === 'albums' ? '' : 'hide'}`}>\r\n        {albums && <AlbumsList albums={albums} />}\r\n      </div>\r\n      <div className={`${selectedCategory === 'artists' ? '' : 'hide'}`}>\r\n        {artists && <ArtistsList artists={artists} />}\r\n      </div>\r\n      <div className={`${selectedCategory === 'playlist' ? '' : 'hide'}`}>\r\n        {playlist && <PlayList playlist={playlist} />}\r\n      </div>\r\n\r\n      {!_.isEmpty(result[selectedCategory]) &&\r\n       !_.isEmpty(result[selectedCategory].next) && (\r\n        <div className=\"load-more\" onClick={() => loadMore(selectedCategory)}>\r\n          <Button variant=\"info\" type=\"button\">\r\n            Load More\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SearchResult;","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst SearchForm = (props) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n  const handleInputChange = (event) => {\r\n    const searchTerm = event.target.value;\r\n    setSearchTerm(searchTerm);\r\n  };\r\n  const handleSearch = (event) => {\r\n    event.preventDefault();\r\n    if (searchTerm.trim() !== '') {\r\n      setErrorMsg('');\r\n      props.handleSearch(searchTerm);\r\n    } else {\r\n      setErrorMsg('Please enter a search term.');\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleSearch}>\r\n        {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label>Enter search term</Form.Label>\r\n          <Form.Control\r\n            type=\"search\"\r\n            name=\"searchTerm\"\r\n            value={searchTerm}\r\n            placeholder=\"Search for album, artist or playlist\"\r\n            onChange={handleInputChange}\r\n            autoComplete=\"off\"\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"info\" type=\"submit\">\r\n          Search\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchForm;","import { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nconst Loader = (props) => {\r\n  const [node] = useState(document.createElement('div'));\r\n  const loader = document.querySelector('#loader');\r\n\r\n  useEffect(() => {\r\n    loader.appendChild(node).classList.add('message');\r\n  }, [loader, node]);\r\n\r\n  useEffect(() => {\r\n    if (props.show) {\r\n      loader.classList.remove('hide');\r\n      document.body.classList.add('loader-open');\r\n    } else {\r\n      loader.classList.add('hide');\r\n      document.body.classList.remove('loader-open');\r\n    }\r\n  }, [loader, props.show]);\r\n\r\n  return ReactDOM.createPortal(props.children, node);\r\n};\r\nexport default Loader;","import React, { useState } from 'react';\r\nimport {\r\n  initiateGetResult,\r\n  initiateLoadMoreAlbums,\r\n  initiateLoadMorePlaylist,\r\n  initiateLoadMoreArtists\r\n} from '../actions/result';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport SearchResult from './SearchResult';\r\nimport SearchForm from './SearchForm';\r\nimport Header from './Header';\r\nimport Loader from './Loader';\r\n\r\nconst Dashboard = (props) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedCategory, setSelectedCategory] = useState('albums');\r\n  const { isValidSession, history } = props;\r\n\r\n  const handleSearch = (searchTerm) => {\r\n    if (isValidSession()) {\r\n      setIsLoading(true);\r\n      props.dispatch(initiateGetResult(searchTerm)).then(() => {\r\n        setIsLoading(false);\r\n        setSelectedCategory('albums');\r\n      });\r\n    } else {\r\n      history.push({\r\n        pathname: '/',\r\n        state: {\r\n          session_expired: true\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const loadMore = async (type) => {\r\n    if (isValidSession()) {\r\n      const { dispatch, albums, artists, playlist } = props;\r\n      setIsLoading(true);\r\n      switch (type) {\r\n        case 'albums':\r\n          await dispatch(initiateLoadMoreAlbums(albums.next));\r\n          break;\r\n        case 'artists':\r\n          await dispatch(initiateLoadMoreArtists(artists.next));\r\n          break;\r\n        case 'playlist':\r\n          await dispatch(initiateLoadMorePlaylist(playlist.next));\r\n          break;\r\n        default:\r\n      }\r\n      setIsLoading(false);\r\n    } else {\r\n      history.push({\r\n        pathname: '/',\r\n        state: {\r\n          session_expired: true\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const setCategory = (category) => {\r\n    setSelectedCategory(category);\r\n  };\r\n\r\n  const { albums, artists, playlist } = props;\r\n  const result = { albums, artists, playlist };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isValidSession() ? (\r\n        <div>\r\n          <Header />\r\n          <SearchForm handleSearch={handleSearch} />\r\n          <Loader show={isLoading}>Loading...</Loader>\r\n          <SearchResult\r\n            result={result}\r\n            loadMore={loadMore}\r\n            setCategory={setCategory}\r\n            selectedCategory={selectedCategory}\r\n            isValidSession={isValidSession}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <Redirect\r\n          to={{\r\n            pathname: '/',\r\n            state: {\r\n              session_expired: true\r\n            }\r\n          }}\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    albums: state.albums,\r\n    artists: state.artists,\r\n    playlist: state.playlist\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Dashboard);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Header from './Header';\r\n\r\nconst NotFoundPage = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Header />\r\n      Page not found. Goto <Link to=\"/spotify-tier-list-maker/dashboard\">Home Page</Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import React from 'react';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport Home from '../components/Home';\r\nimport RedirectPage from '../components/RedirectPage';\r\nimport Dashboard from '../components/Dashboard';\r\nimport NotFoundPage from '../components/NotFoundPage';\r\n\r\nclass AppRouter extends React.Component {\r\n  state = {\r\n    expiryTime: '0'\r\n  };\r\n  componentDidMount() {\r\n    let expiryTime;\r\n    try {\r\n      expiryTime = JSON.parse(localStorage.getItem('expiry_time'));\r\n    } catch (error) {\r\n      expiryTime = '0';\r\n    }\r\n    this.setState({ expiryTime });\r\n  }\r\n  setExpiryTime = (expiryTime) => {\r\n    this.setState({ expiryTime });\r\n  };\r\n  isValidSession = () => {\r\n    const currentTime = new Date().getTime();\r\n    const expiryTime = this.state.expiryTime;\r\n    const isSessionValid = currentTime < expiryTime;\r\n\r\n    return isSessionValid;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <div className=\"main\">\r\n          <Switch>\r\n            <Route exact\r\n              path=\"/spotify-tier-list-maker/\"\r\n              exact={true}\r\n              render={(props) => (\r\n                <Home isValidSession={this.isValidSession} {...props} />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/spotify-tier-list-maker/redirect\"\r\n              render={(props) => (\r\n                <RedirectPage\r\n                  isValidSession={this.isValidSession}\r\n                  setExpiryTime={this.setExpiryTime}\r\n                  {...props}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/spotify-tier-list-maker/dashboard\"\r\n              render={(props) => (\r\n                <Dashboard isValidSession={this.isValidSession} {...props} />\r\n              )}\r\n            />\r\n            <Route component={NotFoundPage} />\r\n          </Switch>\r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppRouter;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport AppRouter from './router/AppRouter';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppRouter />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}