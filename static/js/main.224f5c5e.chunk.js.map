{"version":3,"sources":["sidebar/utils/constants.js","sidebar/reducers/tracks.js","sidebar/reducers/albums.js","sidebar/reducers/artists.js","sidebar/reducers/playlist.js","store/store.js","sidebar/utils/functions.js","sidebar/utils/api.js","sidebar/actions/result.js","sidebar/images/music.jpeg","sidebar/components/TracksList.js","sidebar/components/AlbumsList.js","sidebar/components/ArtistsList.js","sidebar/components/PlayList.js","sidebar/components/SearchResult.js","sidebar/components/SearchForm.js","sidebar/components/Header.js","sidebar/components/Loader.js","sidebar/components/Dashboard.js","sidebar/SidebarSearch.js","tierlist/components/Item.jsx","tierlist/imgs/tool.svg","tierlist/imgs/palette.svg","tierlist/components/Title.jsx","tierlist/components/Column.jsx","tierlist/InitialData.js","tierlist/TierList.js","index.js"],"names":["SET_TRACKS","ADD_TRACKS","SET_ALBUMS","ADD_ALBUMS","SET_ARTISTS","ADD_ARTISTS","SET_PLAYLIST","ADD_PLAYLIST","tracksReducer","state","action","tracks","type","next","items","albumsReducer","albums","artistsReducer","artists","playlistReducer","playlists","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","playlist","applyMiddleware","thunk","setAuthHeader","params","JSON","parse","localStorage","getItem","axios","defaults","headers","common","error","console","log","get","url","a","result","data","getAuthToken","process","Accept","auth","username","password","grant_type","post","qs","stringify","response","setTracks","setAlbums","setArtists","setPlayList","initiateGetResult","searchTerm","dispatch","API_URL","encodeURIComponent","initiateLoadMoreTracks","initiateLoadMoreAlbums","initiateLoadMoreArtists","initiateLoadMorePlaylist","TracksList","Fragment","Object","keys","length","className","map","track","index","Card","Container","Row","noGutters","Col","xs","target","href","external_urls","spotify","rel","_","isEmpty","album","images","src","music","alt","Img","Body","Title","name","Text","artist","join","AlbumsList","style","margin","ArtistsList","PlayList","item","owner","display_name","SearchResult","props","loadMore","setCategory","selectedCategory","onClick","Button","variant","SearchForm","useState","setSearchTerm","errorMsg","setErrorMsg","Form","onSubmit","event","preventDefault","trim","handleSearch","Group","controlId","Control","value","placeholder","onChange","autoComplete","Header","Loader","document","createElement","node","loader","querySelector","useEffect","appendChild","classList","add","show","remove","body","ReactDOM","createPortal","children","connect","isLoading","setIsLoading","setSelectedCategory","isValidSession","refreshSession","then","category","SidebarSearch","access_token","expires_in","setItem","Date","getTime","loaded","setState","expiryTime","currentTime","this","React","Component","ItemContent","styled","div","isDragging","Item","draggableId","task","id","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","content","TitleStyle","h3","color","InputStyle","textarea","ButtonStyle","button","inputRef","useRef","colData","title","setTitle","setColor","inputVisible","setInputVisible","update","updateHeader","onClickOutSide","e","current","contains","addEventListener","removeEventListener","width","display","alignItems","Dropdown","as","ButtonGroup","drop","Toggle","Image","palette","fluid","height","Menu","backgroundColor","Divider","textShadow","wordBreak","flexGrow","overflow","tool","TaskList","isDraggingOver","InnerList","nextProps","tasks","Column","column","droppableId","droppableProps","initialData","columns","taskIds","columnOrder","taskMap","taskId","PureComponent","TierList","updateColHeader","newTitle","newColor","oldHeader","newHeader","newState","onDragEnd","destination","source","home","foreign","homeTaskIds","Array","from","splice","newHome","foreignTaskIds","newForeign","newTaskIds","newColumnOrder","direction","columnId","render","xl","getElementById"],"mappings":"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","file":"static/js/main.224f5c5e.chunk.js","sourcesContent":["export const SET_TRACKS = 'SET_TRACKS';\r\nexport const ADD_TRACKS = 'ADD_TRACKS';\r\nexport const SET_ALBUMS = 'SET_ALBUMS';\r\nexport const ADD_ALBUMS = 'ADD_ALBUMS';\r\nexport const SET_ARTISTS = 'SET_ARTISTS';\r\nexport const ADD_ARTISTS = 'ADD_ARTISTS';\r\nexport const SET_PLAYLIST = 'SET_PLAYLIST';\r\nexport const ADD_PLAYLIST = 'ADD_PLAYLIST';","import { SET_TRACKS, ADD_TRACKS } from '../utils/constants';\r\n\r\nconst tracksReducer = (state = {}, action) => {\r\n  const { tracks } = action;\r\n  switch (action.type) {\r\n    case SET_TRACKS:\r\n      return tracks;\r\n    case ADD_TRACKS:\r\n      return {\r\n        ...state,\r\n        next: tracks.next,\r\n        items: [...state.items, ...tracks.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tracksReducer;","import { SET_ALBUMS, ADD_ALBUMS } from '../utils/constants';\r\n\r\nconst albumsReducer = (state = {}, action) => {\r\n  const { albums } = action;\r\n  switch (action.type) {\r\n    case SET_ALBUMS:\r\n      return albums;\r\n    case ADD_ALBUMS:\r\n      return {\r\n        ...state,\r\n        next: albums.next,\r\n        items: [...state.items, ...albums.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default albumsReducer;","import { SET_ARTISTS, ADD_ARTISTS } from '../utils/constants';\r\n\r\nconst artistsReducer = (state = {}, action) => {\r\n  const { artists } = action;\r\n  switch (action.type) {\r\n    case SET_ARTISTS:\r\n      return artists;\r\n    case ADD_ARTISTS:\r\n      return {\r\n        ...state,\r\n        next: artists.next,\r\n        items: [...state.items, ...artists.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default artistsReducer;","import { SET_PLAYLIST, ADD_PLAYLIST } from '../utils/constants';\r\n\r\nconst playlistReducer = (state = {}, action) => {\r\n  const { playlists } = action;\r\n  switch (action.type) {\r\n    case SET_PLAYLIST:\r\n      return playlists;\r\n    case ADD_PLAYLIST:\r\n      return {\r\n        ...state,\r\n        next: playlists.next,\r\n        items: [...state.items, ...playlists.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default playlistReducer;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport tracksReducer from '../sidebar/reducers/tracks';\r\nimport albumsReducer from '../sidebar/reducers/albums';\r\nimport artistsReducer from '../sidebar/reducers/artists';\r\nimport playlistReducer from '../sidebar/reducers/playlist';\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    tracks: tracksReducer,\r\n    albums: albumsReducer,\r\n    artists: artistsReducer,\r\n    playlist: playlistReducer\r\n  }),\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import axios from 'axios';\r\n\r\nexport const getParamValues = (url) => {\r\n  return url\r\n    .slice(1)\r\n    .split('&')\r\n    .reduce((prev, curr) => {\r\n      const [title, value] = curr.split('=');\r\n      prev[title] = value;\r\n      return prev;\r\n    }, {});\r\n};\r\n\r\nexport const setAuthHeader = () => {\r\n  try {\r\n    const params = JSON.parse(localStorage.getItem('params'));\r\n    if (params) {\r\n      axios.defaults.headers.common[\r\n        'Authorization'\r\n      ] = `Bearer ${params}`;\r\n    }\r\n  } catch (error) {\r\n    console.log('Error setting auth', error);\r\n  }\r\n};\r\n","import axios from 'axios';\r\nimport qs from 'qs';\r\nimport { setAuthHeader } from './functions';\r\n\r\nexport const get = async (url, params) => {\r\n  setAuthHeader();\r\n  const result = await axios.get(url, params);\r\n  return result.data;\r\n};\r\n\r\nexport const post = async (url, params) => {\r\n  setAuthHeader();\r\n  const result = await axios.post(url, params);\r\n  return result.data;\r\n};\r\n\r\nexport const getAuthToken = async () => {\r\n  const clientId = process.env.REACT_APP_CLIENT_ID;\r\n  const clientSecret = process.env.REACT_APP_CLIENT_SECRET;\r\n  \r\n  const headers = {\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    auth: {\r\n      username: clientId,\r\n      password: clientSecret,\r\n    },\r\n  };\r\n  const data = {\r\n    grant_type: 'client_credentials',\r\n  };\r\n\r\n  try {\r\n    const response = await axios.post(\r\n      'https://accounts.spotify.com/api/token',\r\n      qs.stringify(data),\r\n      headers\r\n    );\r\n    return response.data;\r\n  } catch (error) { console.log(error); }\r\n};","import {\r\n  SET_ALBUMS,\r\n  ADD_ALBUMS,\r\n  SET_ARTISTS,\r\n  ADD_ARTISTS,\r\n  SET_PLAYLIST,\r\n  ADD_PLAYLIST,\r\n  SET_TRACKS,\r\n  ADD_TRACKS\r\n} from '../utils/constants';\r\nimport { get } from '../utils/api';\r\n\r\nexport const setTracks = (tracks) => ({\r\n  type: SET_TRACKS,\r\n  tracks\r\n});\r\nexport const addTracks = (tracks) => ({\r\n  type: ADD_TRACKS,\r\n  tracks\r\n});\r\n\r\nexport const setAlbums = (albums) => ({\r\n  type: SET_ALBUMS,\r\n  albums\r\n});\r\nexport const addAlbums = (albums) => ({\r\n  type: ADD_ALBUMS,\r\n  albums\r\n});\r\n\r\nexport const setArtists = (artists) => ({\r\n  type: SET_ARTISTS,\r\n  artists\r\n});\r\nexport const addArtists = (artists) => ({\r\n  type: ADD_ARTISTS,\r\n  artists\r\n});\r\n\r\nexport const setPlayList = (playlists) => ({\r\n  type: SET_PLAYLIST,\r\n  playlists\r\n});\r\nexport const addPlaylist = (playlists) => ({\r\n  type: ADD_PLAYLIST,\r\n  playlists\r\n});\r\n\r\nexport const initiateGetResult = (searchTerm) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const API_URL = `https://api.spotify.com/v1/search?query=${encodeURIComponent(\r\n        searchTerm\r\n      )}&type=track,album,artist,playlist`;\r\n      const result = await get(API_URL);\r\n      console.log(result);\r\n      const { tracks, albums, artists, playlists } = result;\r\n      dispatch(setTracks(tracks));\r\n      dispatch(setAlbums(albums));\r\n      dispatch(setArtists(artists));\r\n      return dispatch(setPlayList(playlists));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateLoadMoreTracks = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log('url', url);\r\n      const result = await get(url);\r\n      console.log('categoriess', result);\r\n      return dispatch(addTracks(result.tracks));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateLoadMoreAlbums = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log('url', url);\r\n      const result = await get(url);\r\n      console.log('categoriess', result);\r\n      return dispatch(addAlbums(result.albums));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateLoadMoreArtists = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log('url', url);\r\n      const result = await get(url);\r\n      console.log('categoriess', result);\r\n      return dispatch(addArtists(result.artists));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateLoadMorePlaylist = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log('url', url);\r\n      const result = await get(url);\r\n      console.log('categoriess', result);\r\n      return dispatch(addPlaylist(result.playlists));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\n","export default __webpack_public_path__ + \"static/media/music.b2fe7d4d.jpeg\";","import React from 'react';\r\nimport { Card, Container, Row, Col } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport music from '../images/music.jpeg';\r\n\r\nconst TracksList = ({ tracks }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(tracks).length > 0 && (\r\n        <div className=\"tracks\">\r\n          {tracks.items.map((track, index) => {\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <Card>\r\n                  <Container>\r\n                    <Row noGutters>\r\n                      <Col xs=\"auto\">\r\n                        <a\r\n                          target=\"_blank\"\r\n                          href={track.external_urls.spotify}\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          {!_.isEmpty(track.album.images) ? (\r\n                            <Card.Img src={track.album.images[0].url} alt=\"\" />\r\n                          ) : (\r\n                            <img src={music} alt=\"\" />\r\n                          )}\r\n                        </a>\r\n                      </Col>\r\n                      <Col>\r\n                        <Card.Body>\r\n                          <Card.Title>{track.name}</Card.Title>\r\n                          <Card.Text>\r\n                            <small>\r\n                              {track.artists.map((artist) => artist.name).join(', ')}\r\n                            </small>\r\n                          </Card.Text>\r\n                        </Card.Body>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                </Card>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TracksList;","import React from 'react';\r\nimport { Card, Container, Row, Col  } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport music from '../images/music.jpeg';\r\n\r\nconst AlbumsList = ({ albums }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(albums).length > 0 && (\r\n        <div className=\"albums\">\r\n          {albums.items.map((album, index) => {\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <Card>\r\n                  <Container>\r\n                    <Row noGutters>\r\n                      <Col xs=\"auto\">\r\n                        <a\r\n                          target=\"_blank\"\r\n                          href={album.external_urls.spotify}\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          {!_.isEmpty(album.images) ? (\r\n                            <Card.Img src={album.images[0].url} alt=\"\" />\r\n                          ) : (\r\n                            <img src={music} alt=\"\" />\r\n                          )}\r\n                        </a>\r\n                      </Col>\r\n                      <Col>\r\n                        <Card.Body>\r\n                          <Card.Title style={{margin: '0'}}>{album.name}</Card.Title>\r\n                          <Card.Text>\r\n                            <small>\r\n                              {album.artists.map((artist) => artist.name).join(', ')}\r\n                            </small>\r\n                          </Card.Text>\r\n                        </Card.Body>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                </Card>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AlbumsList;","import React from 'react';\r\nimport { Card, Container, Row, Col  } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport music from '../images/music.jpeg';\r\n\r\nconst ArtistsList = ({ artists }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(artists).length > 0 && (\r\n        <div className=\"artists\">\r\n          {artists.items.map((artist, index) => {\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <Card>\r\n                  <Container>\r\n                    <Row noGutters>\r\n                      <Col xs=\"auto\">\r\n                        <a\r\n                          target=\"_blank\"\r\n                          href={artist.external_urls.spotify}\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          {!_.isEmpty(artist.images) ? (\r\n                            <Card.Img src={artist.images[0].url} alt=\"\" />\r\n                          ) : (\r\n                            <img src={music} alt=\"\" />\r\n                          )}\r\n                        </a>\r\n                      </Col>\r\n                      <Col>\r\n                        <Card.Body>\r\n                          <Card.Title style={{margin: '0'}}>{artist.name}</Card.Title>\r\n                        </Card.Body>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                </Card>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ArtistsList;","import React from 'react';\r\nimport { Card, Container, Row, Col } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport music from '../images/music.jpeg';\r\n\r\nconst PlayList = ({ playlist }) => {\r\n  return (\r\n    <div>\r\n      {Object.keys(playlist).length > 0 && (\r\n        <div className=\"playlist\">\r\n          {playlist.items.map((item, index) => {\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <Card>\r\n                  <Container>\r\n                    <Row noGutters>\r\n                      <Col xs=\"auto\">\r\n                        <a\r\n                          target=\"_blank\"\r\n                          href={item.external_urls.spotify}\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          {!_.isEmpty(item.images) ? (\r\n                            <Card.Img src={item.images[0].url} alt=\"\" />\r\n                          ) : (\r\n                            <img src={music} alt=\"\" />\r\n                          )}\r\n                        </a>\r\n                      </Col>\r\n                      <Col>\r\n                        <Card.Body>\r\n                          <Card.Title style={{margin: '0'}}>{item.name}</Card.Title>\r\n                          <Card.Text>\r\n                            <small>By {item.owner.display_name}</small>\r\n                          </Card.Text>\r\n                        </Card.Body>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                </Card>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayList;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport TracksList from './TracksList';\r\nimport AlbumsList from './AlbumsList';\r\nimport ArtistsList from './ArtistsList';\r\nimport PlayList from './PlayList';\r\n\r\nconst SearchResult = (props) => {\r\n  const { loadMore, result, setCategory, selectedCategory } = props;\r\n  const { tracks, albums, artists, playlist } = result;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"search-buttons\">\r\n        {!_.isEmpty(tracks.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'tracks' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('tracks')}\r\n          >\r\n            Songs\r\n          </button>\r\n        )}\r\n        {!_.isEmpty(albums.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'albums' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('albums')}\r\n          >\r\n            Albums\r\n          </button>\r\n        )}\r\n        {!_.isEmpty(artists.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'artists' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('artists')}\r\n          >\r\n            Artists\r\n          </button>\r\n        )}\r\n        {!_.isEmpty(playlist.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'playlist' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('playlist')}\r\n          >\r\n            PlayLists\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <div className={`${selectedCategory === 'tracks' ? '' : 'hide'}`}>\r\n        {albums && <TracksList tracks={tracks} />}\r\n      </div>\r\n      <div className={`${selectedCategory === 'albums' ? '' : 'hide'}`}>\r\n        {albums && <AlbumsList albums={albums} />}\r\n      </div>\r\n      <div className={`${selectedCategory === 'artists' ? '' : 'hide'}`}>\r\n        {artists && <ArtistsList artists={artists} />}\r\n      </div>\r\n      <div className={`${selectedCategory === 'playlist' ? '' : 'hide'}`}>\r\n        {playlist && <PlayList playlist={playlist} />}\r\n      </div>\r\n\r\n      {!_.isEmpty(result[selectedCategory]) &&\r\n       !_.isEmpty(result[selectedCategory].next) && (\r\n        <div className=\"load-more\">\r\n          <Button variant=\"info\" type=\"button\" onClick={() => loadMore(selectedCategory)}>\r\n            Load More\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SearchResult;","import React, { useState } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst SearchForm = (props) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n\r\n  const handleInputChange = (event) => {\r\n    const searchTerm = event.target.value;\r\n    setSearchTerm(searchTerm);\r\n  };\r\n\r\n  const handleSearch = (event) => {\r\n    event.preventDefault();\r\n    if (searchTerm.trim() !== '') {\r\n      setErrorMsg('');\r\n      props.handleSearch(searchTerm);\r\n    } else {\r\n      setErrorMsg('Please enter a search term.');\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleSearch}>\r\n        {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Control\r\n            type=\"search\"\r\n            name=\"searchTerm\"\r\n            value={searchTerm}\r\n            placeholder=\"Search here!\"\r\n            onChange={handleInputChange}\r\n            autoComplete=\"off\"\r\n          />\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchForm;","import React from 'react';\r\n\r\nconst Header = () => {\r\n  return <h1 className=\"main-heading\">Spotify Tier List (under construction)</h1>;\r\n};\r\n\r\nexport default Header;\r\n","import { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst Loader = (props) => {\r\n  const [node] = useState(document.createElement('div'));\r\n  const loader = document.querySelector('#loader');\r\n\r\n  useEffect(() => {\r\n    loader.appendChild(node).classList.add('message');\r\n  }, [loader, node]);\r\n\r\n  useEffect(() => {\r\n    if (props.show) {\r\n      loader.classList.remove('hide');\r\n      document.body.classList.add('loader-open');\r\n    } else {\r\n      loader.classList.add('hide');\r\n      document.body.classList.remove('loader-open');\r\n    }\r\n  }, [loader, props.show]);\r\n\r\n  return ReactDOM.createPortal(props.children, node);\r\n};\r\nexport default Loader;","import React, { useState } from 'react';\r\nimport {\r\n  initiateGetResult,\r\n  initiateLoadMoreTracks,\r\n  initiateLoadMoreAlbums,\r\n  initiateLoadMorePlaylist,\r\n  initiateLoadMoreArtists\r\n} from '../actions/result';\r\nimport { connect } from 'react-redux';\r\nimport SearchResult from './SearchResult';\r\nimport SearchForm from './SearchForm';\r\nimport Header from './Header';\r\nimport Loader from './Loader';\r\n\r\nconst Dashboard = (props) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedCategory, setSelectedCategory] = useState('tracks');\r\n  const { isValidSession, refreshSession } = props;\r\n\r\n  const handleSearch = async (searchTerm) => {\r\n    setIsLoading(true);\r\n    if (!isValidSession()) {\r\n      try { await refreshSession(); } \r\n      catch(error) { console.log(error); }\r\n    }\r\n    props.dispatch(initiateGetResult(searchTerm)).then(() => {\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n\r\n  const loadMore = async (type) => {\r\n    const { dispatch, tracks, albums, artists, playlist } = props;\r\n    setIsLoading(true);\r\n    if (!isValidSession()) {\r\n      try { await refreshSession(); }\r\n      catch(error) { console.log(error); }\r\n    }\r\n    switch (type) {\r\n      case 'tracks':\r\n        await dispatch(initiateLoadMoreTracks(tracks.next));\r\n        break;\r\n      case 'albums':\r\n        await dispatch(initiateLoadMoreAlbums(albums.next));\r\n        break;\r\n      case 'artists':\r\n        await dispatch(initiateLoadMoreArtists(artists.next));\r\n        break;\r\n      case 'playlist':\r\n        await dispatch(initiateLoadMorePlaylist(playlist.next));\r\n        break;\r\n      default:\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const setCategory = (category) => { setSelectedCategory(category); };\r\n\r\n  const { tracks, albums, artists, playlist } = props;\r\n  const result = { tracks, albums, artists, playlist };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <Header />\r\n        <SearchForm handleSearch={handleSearch} />\r\n        <Loader show={isLoading}>Loading...</Loader>\r\n        <SearchResult\r\n          result={result}\r\n          loadMore={loadMore}\r\n          setCategory={setCategory}\r\n          selectedCategory={selectedCategory}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tracks: state.tracks,\r\n    albums: state.albums,\r\n    artists: state.artists,\r\n    playlist: state.playlist\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Dashboard);","import React from 'react';\r\nimport Dashboard from './components/Dashboard';\r\nimport { getAuthToken } from './utils/api';\r\n\r\nclass SidebarSearch extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { loaded: false };\r\n    }\r\n    \r\n    refreshSession = async () => {\r\n        let result;\r\n        try{ result = await getAuthToken(); } \r\n        catch(error) { console.log(error); }\r\n        if(result) {\r\n          const {\r\n              access_token,\r\n              expires_in\r\n          } = result;\r\n          localStorage.setItem('params', JSON.stringify(access_token));\r\n          localStorage.setItem('expiry_time', new Date().getTime() + expires_in * 1000);\r\n          if(!this.loaded) this.setState({ loaded: true });\r\n        }\r\n    }\r\n    \r\n    isValidSession = () => {\r\n        let expiryTime;\r\n        try { expiryTime = JSON.parse(localStorage.getItem('expiry_time')); } \r\n        catch(error) { expiryTime = '0'; }\r\n        const currentTime = new Date().getTime();\r\n        if(currentTime >= expiryTime && this.loaded) this.setState({ loaded: false });\r\n        return currentTime < expiryTime;\r\n    };\r\n\r\n    render() {\r\n        if(!this.isValidSession()) {\r\n          this.refreshSession();\r\n          return (\r\n            <div className=\"sidebar-search\">\r\n              Loading...\r\n            </div>\r\n          );\r\n        }\r\n        return (\r\n          <div className=\"sidebar-search\">\r\n            <Dashboard isValidSession={this.isValidSession} refreshSession={this.refreshSession} />\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SidebarSearch;","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { Draggable } from 'react-beautiful-dnd'\r\n\r\nconst ItemContent = styled.div`\r\n  border: 1px solid lightgrey;\r\n  border-radius: 2px;\r\n  padding: 8px;\r\n  margin-bottom: 8px;\r\n  background-color: ${props => (props.isDragging ? 'lightgreen' : 'white')};\r\n  color: black;\r\n`;\r\n\r\nexport default class Item extends React.Component {\r\n    render() {\r\n      return (\r\n        <Draggable draggableId={this.props.task.id} index={this.props.index}>\r\n          {(provided, snapshot) => (\r\n            <ItemContent\r\n              {...provided.draggableProps}\r\n              {...provided.dragHandleProps}\r\n              ref={provided.innerRef}\r\n              isDragging={snapshot.isDragging}\r\n            >\r\n              {this.props.task.content}\r\n            </ItemContent>\r\n          )}\r\n        </Draggable>\r\n      );\r\n    }\r\n  }","export default __webpack_public_path__ + \"static/media/tool.f60e7b86.svg\";","export default __webpack_public_path__ + \"static/media/palette.c614a1c8.svg\";","import React, { useState, useRef, useEffect } from 'react';\r\nimport { Image, Dropdown, DropdownButton, ButtonGroup } from 'react-bootstrap'\r\nimport styled from 'styled-components';\r\nimport tool from '../imgs/tool.svg'\r\nimport palette from '../imgs/palette.svg'\r\nimport '../tierlist-styles.css'\r\n\r\n\r\nconst TitleStyle = styled.h3`\r\n    background-color: ${props => props.color};\r\n    padding: 8px;\r\n    margin-bottom: 0;\r\n    display: flex;\r\n`;\r\n\r\nconst InputStyle = styled.textarea`\r\n    flex-grow: 1;\r\n    overflow: hidden;\r\n    word-break: break-all;\r\n    min-height: 40px;\r\n    height: 40px;\r\n    resize: both;\r\n`;\r\n\r\nconst ButtonStyle = styled.button`\r\n    width: 40px;\r\n    min-width: 40px;\r\n    height: 40px;\r\n    float: right;\r\n    margin-left: 8px;\r\n    outline: none;\r\n    background: transparent no-repeat;\r\n    border: none;\r\n    border-radius: 50%;\r\n`;\r\n\r\nconst Title = props => {\r\n  // We use hooks to declare \"initial\" states\r\n  const inputRef = useRef(null);\r\n  const [id] = useState(props.colData.id);\r\n  const [title, setTitle] = useState(props.colData.title);\r\n  const [color, setColor] = useState(props.colData.color);\r\n  const [inputVisible, setInputVisible] = useState(false);\r\n  const update = props.updateHeader;\r\n\r\n  function onClickOutSide(e) {\r\n    if (inputRef.current && !inputRef.current.contains(e.target)) setInputVisible(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (inputVisible) document.addEventListener(\"mousedown\", onClickOutSide);\r\n    return () => { document.removeEventListener(\"mousedown\", onClickOutSide); };  //apparently happens when the button is clicked as well\r\n  });\r\n\r\n  return (\r\n    <TitleStyle color={color}>\r\n      <React.Fragment>\r\n        {inputVisible ? (\r\n          <form style={{width: \"100%\", display: \"flex\", alignItems: \"center\"}} onSubmit={() => setInputVisible(false)} ref={inputRef}>\r\n            <InputStyle\r\n              value={title}\r\n              onChange={e => {\r\n                setTitle(e.target.value);\r\n                update(id, e.target.value, color);\r\n              }}\r\n            />\r\n            <Dropdown as={ButtonGroup} drop=\"right\">\r\n              <Dropdown.Toggle id='color-toggle'>\r\n                <Image src={palette} fluid alt='colors' style={{width: \"100%\", height: \"100%\"}}/>\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item style={{backgroundColor: \"gray\"}} onClick={() => { setColor('gray'); update(id, title, 'gray'); }}>Gray</Dropdown.Item>\r\n                <Dropdown.Item style={{backgroundColor: \"blue\"}} onClick={() => { setColor('blue'); update(id, title, 'blue'); }}>Blue</Dropdown.Item>\r\n                <Dropdown.Item style={{backgroundColor: \"purple\"}} onClick={() => { setColor('purple'); update(id, title, 'purple'); }}>Purple</Dropdown.Item>\r\n                <Dropdown.Divider />\r\n                <Dropdown.Item style={{backgroundColor: \"#1DB954\"}} onClick={() => { setColor('#1DB954'); update(id, title, '#1DB954'); }}>Default</Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </form>\r\n        ) : (\r\n          <div style={{width: \"100%\", display: \"flex\", alignItems: \"center\"}}>\r\n            <div style={{color: \"white\", textShadow: \"0 0 4px black\", wordBreak: \"break-all\", flexGrow: \"1\", overflow: \"hidden\"}}>{title}</div>\r\n            <ButtonStyle onClick={() => setInputVisible(true)}>\r\n              <Image src={tool} fluid alt='settings' style={{width: \"100%\", height: \"100%\"}}/>\r\n            </ButtonStyle> \r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    </TitleStyle>\r\n  );\r\n};\r\n\r\nexport default Title; ","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport Item from './Item';\r\nimport Title from './Title'\r\n\r\nconst Container = styled.div`\r\n  margin: 8px;\r\n  border: 1px solid lightgrey;\r\n  background-color: none;\r\n  border-radius: 2px;\r\n  width: 220px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst TaskList = styled.div`\r\n  padding: 8px;\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${props => props.isDraggingOver ? 'lightgrey' : 'none'};\r\n  flex-grow: 1;\r\n  min-height: 400px;\r\n`;\r\n\r\nclass InnerList extends React.Component {\r\n  shouldComponentUpdate(nextProps) {\r\n    if (nextProps.tasks === this.props.tasks) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  render() {\r\n    return this.props.tasks.map((task, index) => (\r\n      <Item key={task.id} task={task} index={index} />\r\n    ));\r\n  }\r\n}\r\n\r\nexport default class Column extends React.Component {\r\n  render() {\r\n    return (\r\n      <Draggable draggableId={this.props.column.id} index={this.props.index}>\r\n        {provided => (\r\n          <Container {...provided.draggableProps} ref={provided.innerRef}>\r\n            <div {...provided.dragHandleProps}>\r\n              <Title colData={this.props.column} updateHeader={this.props.updateHeader} />\r\n            </div>\r\n            <Droppable droppableId={this.props.column.id} type=\"task\">\r\n              {(provided, snapshot) => (\r\n                <TaskList\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  isDraggingOver={snapshot.isDraggingOver}\r\n                >\r\n                  <InnerList tasks={this.props.tasks} />\r\n                  {provided.placeholder}\r\n                </TaskList>\r\n              )}\r\n            </Droppable>\r\n          </Container>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n}","const initialData = {\r\n    tasks: {\r\n      'task-1': { id: 'task-1', content: 'bradio' },\r\n      'task-2': { id: 'task-2', content: 'the oral cigarettes' },\r\n      'task-3': { id: 'task-3', content: 'official hige dandism' },\r\n      'task-4': { id: 'task-4', content: 'yu-peng chen' },\r\n    },\r\n    columns: {\r\n      'column-1': {\r\n        id: 'column-1',\r\n        title: 'S',\r\n        color: '#1DB954',\r\n        taskIds: ['task-1', 'task-2', 'task-3', 'task-4'],\r\n      },\r\n      'column-2': {\r\n        id: 'column-2',\r\n        title: 'A',\r\n        color: '#1DB954',\r\n        taskIds: [],\r\n      },\r\n    },\r\n    // Facilitate reordering of the columns\r\n    columnOrder: ['column-1', 'column-2'],\r\n};\r\n  \r\nexport default initialData;","import React from 'react';\r\nimport '@atlaskit/css-reset';\r\nimport styled from 'styled-components';\r\nimport Column from './components/Column'\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\r\nimport initialData from './InitialData';\r\nimport './tierlist-styles.css';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nclass InnerList extends React.PureComponent {\r\n  render() {\r\n    const { column, taskMap, index, updateHeader } = this.props;\r\n    const tasks = column.taskIds.map(taskId => taskMap[taskId]);\r\n    return <Column column={column} tasks={tasks} index={index} updateHeader={updateHeader} />;\r\n  }\r\n}\r\n\r\nclass TierList extends React.Component {\r\n  state = initialData;\r\n\r\n  updateColHeader = (id, newTitle, newColor) => {\r\n    const oldHeader = this.state.columns[id];\r\n    const newHeader = {\r\n      ...oldHeader,\r\n      title: newTitle,\r\n      color: newColor\r\n    };\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        [id]: newHeader\r\n      }\r\n    };\r\n    this.setState(newState);\r\n  }\r\n\r\n  onDragEnd = result => {\r\n    const { destination, source, draggableId, type } = result;\r\n\r\n    if (!destination) return;\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) return;\r\n\r\n    if (type === 'column') {\r\n      const newColumnOrder = Array.from(this.state.columnOrder);\r\n      newColumnOrder.splice(source.index, 1);\r\n      newColumnOrder.splice(destination.index, 0, draggableId);\r\n\r\n      const newState = {\r\n        ...this.state,\r\n        columnOrder: newColumnOrder\r\n      };\r\n      this.setState(newState);\r\n      return;\r\n    }\r\n\r\n    const home = this.state.columns[source.droppableId];\r\n    const foreign = this.state.columns[destination.droppableId];\r\n\r\n    if (home === foreign) {\r\n      const newTaskIds = Array.from(home.taskIds);\r\n      newTaskIds.splice(source.index, 1);\r\n      newTaskIds.splice(destination.index, 0, draggableId);\r\n\r\n      const newHome = {\r\n        ...home,\r\n        taskIds: newTaskIds\r\n      };\r\n\r\n      const newState = {\r\n        ...this.state,\r\n        columns: {\r\n          ...this.state.columns,\r\n          [newHome.id]: newHome\r\n        }\r\n      };\r\n\r\n      this.setState(newState);\r\n      return;\r\n    }\r\n\r\n    // moving from one list to another\r\n    const homeTaskIds = Array.from(home.taskIds);\r\n    homeTaskIds.splice(source.index, 1);\r\n    const newHome = {\r\n      ...home,\r\n      taskIds: homeTaskIds,\r\n    };\r\n\r\n    const foreignTaskIds = Array.from(foreign.taskIds);\r\n    foreignTaskIds.splice(destination.index, 0, draggableId);\r\n    const newForeign = {\r\n      ...foreign,\r\n      taskIds: foreignTaskIds,\r\n    };\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        [newHome.id]: newHome,\r\n        [newForeign.id]: newForeign,\r\n      },\r\n    };\r\n    this.setState(newState);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <DragDropContext onDragEnd={this.onDragEnd}>\r\n          <Droppable droppableId=\"tiers\" direction=\"horizontal\" type=\"column\">\r\n            {provided => (\r\n              <Container\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n              >\r\n                {this.state.columnOrder.map((columnId, index) => {\r\n                  const column = this.state.columns[columnId];\r\n                  return (\r\n                    <InnerList\r\n                      key={column.id}\r\n                      column={column}\r\n                      taskMap={this.state.tasks}\r\n                      index={index}\r\n                      updateHeader={this.updateColHeader}\r\n                    />\r\n                  );\r\n                })}\r\n                {provided.placeholder}\r\n              </Container>\r\n            )}\r\n          </Droppable>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TierList","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport SidebarSearch from './sidebar/SidebarSearch';\nimport TierList from './tierlist/TierList';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './sidebar-styles.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Container fluid>\n      <Row>\n        <Col>\n          <TierList />\n        </Col>\n        <Col xl=\"auto\">\n          <SidebarSearch />\n        </Col>\n      </Row>\n    </Container>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}