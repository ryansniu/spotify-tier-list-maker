{"version":3,"sources":["sidebar/utils/constants.js","sidebar/reducers/tracks.js","sidebar/reducers/albums.js","sidebar/reducers/artists.js","store/store.js","sidebar/images/music.jpeg","tierlist/components/Item.jsx","tierlist/imgs/tool.svg","tierlist/imgs/palette.svg","tierlist/components/Title.jsx","tierlist/components/Column.jsx","tierlist/components/ItemPool.jsx","tierlist/components/TrashCan.jsx","tierlist/components/TrashCan2.jsx","tierlist/TierListContext.js","sidebar/utils/functions.js","sidebar/utils/api.js","sidebar/actions/result.js","sidebar/components/TracksList.js","sidebar/components/AlbumsList.js","sidebar/components/ArtistsList.js","sidebar/components/SearchResult.js","sidebar/components/SearchForm.js","sidebar/components/Loader.js","sidebar/components/Dashboard.js","sidebar/SidebarSearch.js","sidebar/components/Header.js","tierlist/TierList.js","index.js"],"names":["SET_TRACKS","ADD_TRACKS","SET_ALBUMS","ADD_ALBUMS","SET_ARTISTS","ADD_ARTISTS","tracksReducer","state","action","tracks","type","next","items","albumsReducer","albums","artistsReducer","artists","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunk","ItemContent","styled","div","props","isDragging","ItemSmall","small","Item","draggableId","this","item","id","index","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","Card","style","margin","Container","Row","Col","xs","target","href","songURL","rel","imgURL","Img","src","alt","music","Body","Title","title","subtitle","Text","React","Component","TitleStyle","h3","attrs","backgroundColor","color","InputStyle","textarea","ButtonStyle","button","inputRef","useRef","useState","colData","setID","setTitle","setColor","useColor","color_p","setColor_P","inputVisible","setInputVisible","colorPickerVisible","setcolorPickerVisible","update","updateHeader","onClickOutSide","e","current","contains","hex","setEditing","useEffect","document","addEventListener","removeEventListener","Fragment","width","display","alignItems","onSubmit","value","onChange","Dropdown","autoClose","as","ButtonGroup","drop","onToggle","isOpen","OverlayTrigger","placement","overlay","Tooltip","Toggle","variant","Image","palette","fluid","height","Menu","hsv","h","newHSV","toColor","hideRGB","dark","textShadow","wordBreak","flexGrow","overflow","onClick","tool","ItemList","isDraggingOver","bgColor","InnerList","nextProps","map","Column","isEditing","newColor","v","a","column","isDragDisabled","deleteHandler","setState","droppableId","droppableProps","getBodyColor","placeholder","ItemPool","className","TrashCan","TrashCan2","initialData","data","columns","itemIds","columnOrder","containsItem","addToItemPool","deleteFromItemPool","TierListContext","createContext","setAuthHeader","params","JSON","parse","localStorage","getItem","axios","defaults","headers","common","error","console","log","get","url","result","getAuthToken","process","Accept","auth","username","password","grant_type","post","qs","stringify","response","setTracks","setAlbums","setArtists","initiateGetResult","searchTerm","dispatch","API_URL","encodeURIComponent","initiateLoadMoreTracks","initiateLoadMoreAlbums","initiateLoadMoreArtists","TracksList","updater","setUpdater","Object","keys","length","track","external_urls","spotify","name","artist","join","_","isEmpty","album","images","Consumer","filter","AlbumsList","ArtistsList","SearchResult","loadMore","setCategory","selectedCategory","Button","SearchForm","setSearchTerm","errorMsg","setErrorMsg","Form","event","preventDefault","trim","handleSearch","Group","controlId","Control","autoComplete","Loader","createElement","node","loader","querySelector","appendChild","classList","add","show","remove","body","ReactDOM","createPortal","children","connect","isLoading","setIsLoading","updateCategory","setSelectedCategory","isValidSession","refreshSession","then","Spinner","animation","role","marginRight","category","SidebarSearch","newState","access_token","expires_in","setItem","Date","getTime","loaded","expiryTime","currentTime","refreshSidebar","Header","itemMap","itemId","PureComponent","refreshColumns","showSearchbar","TierList","context","importFromJson","fileReader","FileReader","readAsText","files","onload","Array","isArray","hasValidColumns","requiredColumnKeys","forEach","key","columnKeys","every","i","allColumns","splice","indexOf","el","includes","hasValidItems","requiredItemKeys","itemKeys","allItems","concat","deleteItem","source","home","homeitemIds","from","newHome","oldItems","newItems","reduce","object","updateColHeader","newTitle","oldHeader","newHeader","removeCol","newColumnOrder","oldColumns","newColumns","onDragEnd","destination","foreign","foreignitemIds","newForeign","newitemIds","addNewGroup","ID","resetAllItems","removeAllItems","resetAllColumns","resetTierList","showSearch","newItemIds","newItemPool","delIndex","toSvg","getElementById","dataUrl","link","download","click","catch","err","htmlFor","accept","saveAsSVG","direction","columnId","Offcanvas","onHide","scroll","backdrop","closeButton","closeVariant","paddingBottom","padding","overflowY","contextType","render","Provider"],"mappings":"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","file":"static/js/main.5314e8f8.chunk.js","sourcesContent":["export const SET_TRACKS = 'SET_TRACKS';\r\nexport const ADD_TRACKS = 'ADD_TRACKS';\r\nexport const SET_ALBUMS = 'SET_ALBUMS';\r\nexport const ADD_ALBUMS = 'ADD_ALBUMS';\r\nexport const SET_ARTISTS = 'SET_ARTISTS';\r\nexport const ADD_ARTISTS = 'ADD_ARTISTS';","import { SET_TRACKS, ADD_TRACKS } from '../utils/constants';\r\n\r\nconst tracksReducer = (state = {}, action) => {\r\n  const { tracks } = action;\r\n  switch (action.type) {\r\n    case SET_TRACKS:\r\n      return tracks;\r\n    case ADD_TRACKS:\r\n      return {\r\n        ...state,\r\n        next: tracks.next,\r\n        items: [...state.items, ...tracks.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tracksReducer;","import { SET_ALBUMS, ADD_ALBUMS } from '../utils/constants';\r\n\r\nconst albumsReducer = (state = {}, action) => {\r\n  const { albums } = action;\r\n  switch (action.type) {\r\n    case SET_ALBUMS:\r\n      return albums;\r\n    case ADD_ALBUMS:\r\n      return {\r\n        ...state,\r\n        next: albums.next,\r\n        items: [...state.items, ...albums.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default albumsReducer;","import { SET_ARTISTS, ADD_ARTISTS } from '../utils/constants';\r\n\r\nconst artistsReducer = (state = {}, action) => {\r\n  const { artists } = action;\r\n  switch (action.type) {\r\n    case SET_ARTISTS:\r\n      return artists;\r\n    case ADD_ARTISTS:\r\n      return {\r\n        ...state,\r\n        next: artists.next,\r\n        items: [...state.items, ...artists.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default artistsReducer;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport tracksReducer from '../sidebar/reducers/tracks';\r\nimport albumsReducer from '../sidebar/reducers/albums';\r\nimport artistsReducer from '../sidebar/reducers/artists';\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    tracks: tracksReducer,\r\n    albums: albumsReducer,\r\n    artists: artistsReducer\r\n  }),\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","export default __webpack_public_path__ + \"static/media/music.b2fe7d4d.jpeg\";","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { Card, Container, Row, Col } from 'react-bootstrap';\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport music from '../../sidebar/images/music.jpeg';\r\n\r\nconst ItemContent = styled.div`\r\n  background-color: ${props => (props.isDragging ? '#535353' : 'none')};\r\n  border-radius: 4px;\r\n`;\r\n\r\nconst ItemSmall = styled.small`\r\n  color: ${props => (props.isDragging ? 'white !important' : '#A4A4A4')};\r\n`;\r\n\r\nexport default class Item extends React.Component {\r\n    render() {\r\n      return (\r\n        <Draggable draggableId={this.props.item.id} index={this.props.index}>\r\n          {(provided, snapshot) => (\r\n            <ItemContent\r\n              {...provided.draggableProps}\r\n              {...provided.dragHandleProps}\r\n              ref={provided.innerRef}\r\n              isDragging={snapshot.isDragging}\r\n            >\r\n              <Card style={{ margin: 0 }}>\r\n                <Container>\r\n                  <Row>\r\n                    <Col xs=\"auto\">\r\n                      <a\r\n                        target=\"_blank\"\r\n                        href={this.props.item.songURL}\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        {this.props.item.imgURL ? (\r\n                          <Card.Img src={this.props.item.imgURL} alt=\"\" />\r\n                        ) : (\r\n                          <img src={music} alt=\"\" />\r\n                        )}\r\n                      </a>\r\n                    </Col>\r\n                    <Col>\r\n                      <Card.Body>\r\n                        <Card.Title>{this.props.item.title}</Card.Title>\r\n                        {this.props.item.subtitle &&\r\n                          <Card.Text>\r\n                            <ItemSmall isDragging={snapshot.isDragging}>\r\n                              {this.props.item.subtitle}\r\n                            </ItemSmall>\r\n                          </Card.Text>\r\n                        }\r\n                      </Card.Body>\r\n                    </Col>\r\n                  </Row>\r\n                </Container>\r\n              </Card>\r\n            </ItemContent>\r\n          )}\r\n        </Draggable>\r\n      );\r\n    }\r\n  }","export default __webpack_public_path__ + \"static/media/tool.f60e7b86.svg\";","export default __webpack_public_path__ + \"static/media/palette.c614a1c8.svg\";","import React, { useState, useRef, useEffect } from 'react';\r\nimport { Image, Dropdown, ButtonGroup, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { ColorPicker, useColor, toColor } from \"react-color-palette\";\r\nimport styled from 'styled-components';\r\nimport tool from '../imgs/tool.svg'\r\nimport palette from '../imgs/palette.svg'\r\nimport \"react-color-palette/lib/css/styles.css\";\r\nimport '../tierlist-styles.css'\r\n\r\nconst TitleStyle = styled.h3.attrs(props => ({\r\n  style: {\r\n    backgroundColor: props.color,\r\n  },\r\n}))`padding: 8px;\r\nmargin-bottom: 0;\r\ndisplay: flex;\r\nmax-width: 21rem;\r\nuser-select: none;`\r\n\r\n// how tf do i make this full height when editing\r\nconst InputStyle = styled.textarea`\r\n    flex-grow: 1;\r\n    overflow: hidden;\r\n    word-break: break-all;\r\n    min-height: 40px;\r\n    max-width: 14rem;\r\n    height: 40px;\r\n    resize: both;\r\n`;\r\n\r\nconst ButtonStyle = styled.button`\r\n    width: 40px;\r\n    min-width: 40px;\r\n    height: 40px;\r\n    float: right;\r\n    margin-left: 8px;\r\n    outline: none;\r\n    background: transparent no-repeat;\r\n    border: none;\r\n    border-radius: 50%;\r\n`;\r\n\r\nconst Title = props => {\r\n  const inputRef = useRef(null);\r\n  const [id, setID] = useState(props.colData.id);\r\n  const [title, setTitle] = useState(props.colData.title);\r\n  const [color, setColor] = useState(props.colData.color);\r\n  const [color_p, setColor_P] = useColor(\"hex\", props.colData.color);\r\n  const [inputVisible, setInputVisible] = useState(false);\r\n  const [colorPickerVisible, setcolorPickerVisible] = useState(false);\r\n  const update = props.updateHeader;\r\n\r\n  function onClickOutSide(e) {\r\n    if (inputRef.current && !inputRef.current.contains(e.target)) {\r\n      setInputVisible(false);\r\n      if(colorPickerVisible) {\r\n        setcolorPickerVisible(false);\r\n        update(id, title, color_p.hex); \r\n      }\r\n      props.setEditing(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (inputVisible) document.addEventListener(\"mousedown\", onClickOutSide);\r\n    return () => { document.removeEventListener(\"mousedown\", onClickOutSide); };\r\n  });\r\n\r\n  useEffect(() => {\r\n    setID(props.colData.id);\r\n    setTitle(props.colData.title);\r\n    setColor(props.colData.color);\r\n  }, [props.colData]);\r\n\r\n  return (\r\n    <TitleStyle color={color_p.hex}>\r\n      <React.Fragment>\r\n        {inputVisible ? (\r\n          <form style={{width: \"100%\", display: \"flex\", alignItems: \"center\"}} onSubmit={() => { setInputVisible(false); props.setEditing(false); }} ref={inputRef}>\r\n            <InputStyle\r\n              value={title}\r\n              onChange={e => {\r\n                setTitle(e.target.value);\r\n                update(id, e.target.value, color);\r\n              }}\r\n            />\r\n             <Dropdown autoClose=\"inside\" as={ButtonGroup} drop=\"right\"\r\n              onToggle={(isOpen) => {\r\n                setcolorPickerVisible(isOpen);\r\n                if(!isOpen) update(id, title, color_p.hex);  //SAVE AS HSV\r\n              }}\r\n             >\r\n              <OverlayTrigger\r\n                placement={'top'}\r\n                overlay={<Tooltip>Edit Color</Tooltip>}\r\n              >\r\n                <Dropdown.Toggle id='color-toggle' variant=\"secondary\">\r\n                  <Image src={palette} fluid alt='colors' style={{width: \"100%\", height: \"100%\"}}/>\r\n                </Dropdown.Toggle>\r\n              </OverlayTrigger>\r\n              <Dropdown.Menu id='color-dropdown' variant=\"dark\">\r\n                <ColorPicker height={160} width={240} color={color_p} onChange={e => {\r\n                  if(e.hsv.h >= 360) {\r\n                    let newHSV = e.hsv;\r\n                    newHSV.h = 360;\r\n                    e = toColor(\"hsv\", newHSV);\r\n                  }\r\n                  setColor_P(e);\r\n                }} hideRGB dark />\r\n                <div id=\"preset-colors\">\r\n                  hi\r\n                </div>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </form>\r\n        ) : (\r\n          <div style={{width: \"100%\", display: \"flex\", alignItems: \"center\"}}>\r\n            <div style={{color: \"white\", textShadow: \"0 0 4px black\", wordBreak: \"break-all\", flexGrow: \"1\", overflow: \"hidden\"}}>{title}</div>\r\n              <OverlayTrigger\r\n                placement={'top'}\r\n                overlay={<Tooltip>Edit Column</Tooltip>}\r\n              >\r\n              <ButtonStyle onClick={() => { setInputVisible(true); props.setEditing(true); }}>\r\n                <Image src={tool} fluid alt='settings' style={{width: \"100%\", height: \"100%\"}}/>\r\n              </ButtonStyle> \r\n            </OverlayTrigger>\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    </TitleStyle>\r\n  );\r\n};\r\n\r\nexport default Title; ","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { toColor } from \"react-color-palette\";\r\nimport Item from './Item';\r\nimport Title from './Title'\r\n\r\nconst Container = styled.div`\r\n  border: 4px solid black;\r\n  margin: 8px;\r\n  background-color: none;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ItemList = styled.div`\r\n  padding: 8px;\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${props => props.isDraggingOver ? props.bgColor : 'none'};\r\n  flex-grow: 1;\r\n  min-width: 18.25rem;\r\n  min-height: 20rem;\r\n`;\r\n\r\nclass InnerList extends React.Component {\r\n  shouldComponentUpdate(nextProps) {\r\n    if (nextProps.items === this.props.items) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  render() {\r\n    return this.props.items.map((item, index) => (\r\n      <Item key={item.id} item={item} index={index} />\r\n    ));\r\n  }\r\n}\r\n\r\nexport default class Column extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEditing: false\r\n    }\r\n  }\r\n\r\n  getBodyColor(color) {\r\n    let newColor = toColor(\"hex\", color).hsv;\r\n    newColor.v = newColor.v / 2;\r\n    newColor.a = 0.5;\r\n    return toColor(\"hsv\", newColor).hex;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Draggable draggableId={this.props.column.id} index={this.props.index} isDragDisabled={this.state.isEditing}>\r\n        {provided => (\r\n          <Container {...provided.draggableProps} ref={provided.innerRef}>\r\n            <div {...provided.dragHandleProps}>\r\n              <Title\r\n                colData={this.props.column}\r\n                updateHeader={this.props.updateHeader}\r\n                deleteHandler={this.props.deleteHandler}\r\n                setEditing={(e) => this.setState({ isEditing: e })}\r\n              />\r\n            </div>\r\n            <Droppable droppableId={this.props.column.id} type=\"item\">\r\n              {(provided, snapshot) => (\r\n                <ItemList\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  isDraggingOver={snapshot.isDraggingOver}\r\n                  bgColor={this.getBodyColor(this.props.column.color)}\r\n                >\r\n                  <InnerList items={this.props.items} />\r\n                  {provided.placeholder}\r\n                </ItemList>\r\n              )}\r\n            </Droppable>\r\n          </Container>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport Item from './Item';\r\n\r\nconst Container = styled.div`\r\n  margin: 8px;\r\n  border: 1px solid #1DB954;\r\n  background-color: none;\r\n  border-radius: 2px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 18.375rem;\r\n`;\r\n\r\nconst ItemList = styled.div`\r\n  padding: 8px;\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${props => props.isDraggingOver ? '#282828' : 'none'};\r\n  flex-grow: 1;\r\n  min-height: 16rem;\r\n`;\r\n\r\nclass InnerList extends React.Component {\r\n  shouldComponentUpdate(nextProps) {\r\n    if (nextProps.items === this.props.items) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  render() {\r\n    return this.props.items.map((item, index) => (\r\n      <Item key={item.id} item={item} index={index} />\r\n    ));\r\n  }\r\n}\r\n\r\nexport default class ItemPool extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"main-heading\">Items</h1>\r\n        <Container>\r\n          <Droppable droppableId=\"item-pool\" type=\"item\">\r\n            {(provided, snapshot) => (\r\n              <ItemList\r\n                ref={provided.innerRef}\r\n                {...provided.droppableProps}\r\n                isDraggingOver={snapshot.isDraggingOver}\r\n              >\r\n                <InnerList items={this.props.items} />\r\n                {provided.placeholder}\r\n              </ItemList>\r\n            )}\r\n          </Droppable>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\n\r\nconst Container = styled.div`\r\n  margin: 8px;\r\n  border: 1px solid #1DB954;\r\n  background-color: none;\r\n  border-radius: 2px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 18.25rem;\r\n`;\r\n\r\nconst ItemList = styled.div`\r\n  padding: 8px;\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${props => props.isDraggingOver ? 'darkred' : 'none'};\r\n  flex-grow: 1;\r\n  height: 4.75rem;\r\n`;\r\n\r\nexport default class TrashCan extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"main-heading\">Trash Can</h1>\r\n        <Container>\r\n          <Droppable droppableId=\"trash-can\" type=\"item\">\r\n            {(provided, snapshot) => (\r\n                <ItemList\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  isDraggingOver={snapshot.isDraggingOver}\r\n                >\r\n                  {provided.placeholder}\r\n                </ItemList>\r\n            )}\r\n          </Droppable>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\n\r\nconst Container = styled.div`\r\n  margin: 8px;\r\n  border: 1px solid #1DB954;\r\n  background-color: none;\r\n  border-radius: 2px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 20rem;\r\n`;\r\n\r\nconst ItemList = styled.div`\r\n  padding: 8px;\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${props => props.isDraggingOver ? 'darkred' : 'none'};\r\n  flex-grow: 1;\r\n  min-height: 22rem;\r\n`;\r\n\r\nexport default class TrashCan2 extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"main-heading\">Trash Can 2</h1>\r\n        <Container>\r\n          <Droppable droppableId=\"trash-can-2\" type=\"column\">\r\n            {(provided, snapshot) => (\r\n                <ItemList\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  isDraggingOver={snapshot.isDraggingOver}\r\n                >\r\n                  {provided.placeholder}\r\n                </ItemList>\r\n            )}\r\n          </Droppable>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nexport const initialData = {\r\n  data: {\r\n    items: {},\r\n    columns: {\r\n      'column-1': {\r\n        id: 'column-1',\r\n        title: 'S',\r\n        color: 'purple',\r\n        itemIds: [],\r\n      },\r\n      'column-2': {\r\n        id: 'column-2',\r\n        title: 'A',\r\n        color: '#1DB954',\r\n        itemIds: [],\r\n      },\r\n      'column-3': {\r\n        id: 'column-3',\r\n        title: 'B',\r\n        color: 'blue',\r\n        itemIds: [],\r\n      },\r\n      'column-4': {\r\n        id: 'column-4',\r\n        title: 'C',\r\n        color: 'grey',\r\n        itemIds: [],\r\n      },\r\n      'item-pool': {\r\n        id: 'item-pool',\r\n        itemIds: [],\r\n      }\r\n    },\r\n    columnOrder: ['column-1', 'column-2', 'column-3','column-4']\r\n  },\r\n  containsItem: (id) => {},\r\n  addToItemPool: (id, type, songURL, imgURL, title, subtitle) => {},\r\n  deleteFromItemPool: (id, type) => {}\r\n}\r\n\r\nexport const TierListContext = React.createContext(initialData);","import axios from 'axios';\r\n\r\nexport const getParamValues = (url) => {\r\n  return url\r\n    .slice(1)\r\n    .split('&')\r\n    .reduce((prev, curr) => {\r\n      const [title, value] = curr.split('=');\r\n      prev[title] = value;\r\n      return prev;\r\n    }, {});\r\n};\r\n\r\nexport const setAuthHeader = () => {\r\n  try {\r\n    const params = JSON.parse(localStorage.getItem('params'));\r\n    if (params) {\r\n      axios.defaults.headers.common[\r\n        'Authorization'\r\n      ] = `Bearer ${params}`;\r\n    }\r\n  } catch (error) {\r\n    console.log('Error setting auth', error);\r\n  }\r\n};\r\n","import axios from 'axios';\r\nimport qs from 'qs';\r\nimport { setAuthHeader } from './functions';\r\n\r\nexport const get = async (url, params) => {\r\n  setAuthHeader();\r\n  const result = await axios.get(url, params);\r\n  return result.data;\r\n};\r\n\r\nexport const post = async (url, params) => {\r\n  setAuthHeader();\r\n  const result = await axios.post(url, params);\r\n  return result.data;\r\n};\r\n\r\nexport const getAuthToken = async () => {\r\n  const clientId = process.env.REACT_APP_CLIENT_ID;\r\n  const clientSecret = process.env.REACT_APP_CLIENT_SECRET;\r\n  \r\n  const headers = {\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    auth: {\r\n      username: clientId,\r\n      password: clientSecret,\r\n    },\r\n  };\r\n  const data = {\r\n    grant_type: 'client_credentials',\r\n  };\r\n\r\n  try {\r\n    const response = await axios.post(\r\n      'https://accounts.spotify.com/api/token',\r\n      qs.stringify(data),\r\n      headers\r\n    );\r\n    return response.data;\r\n  } catch (error) { console.log(error); }\r\n};","import {\r\n  SET_ALBUMS,\r\n  ADD_ALBUMS,\r\n  SET_ARTISTS,\r\n  ADD_ARTISTS,\r\n  SET_TRACKS,\r\n  ADD_TRACKS\r\n} from '../utils/constants';\r\nimport { get } from '../utils/api';\r\n\r\nexport const setTracks = (tracks) => ({\r\n  type: SET_TRACKS,\r\n  tracks\r\n});\r\nexport const addTracks = (tracks) => ({\r\n  type: ADD_TRACKS,\r\n  tracks\r\n});\r\n\r\nexport const setAlbums = (albums) => ({\r\n  type: SET_ALBUMS,\r\n  albums\r\n});\r\nexport const addAlbums = (albums) => ({\r\n  type: ADD_ALBUMS,\r\n  albums\r\n});\r\n\r\nexport const setArtists = (artists) => ({\r\n  type: SET_ARTISTS,\r\n  artists\r\n});\r\nexport const addArtists = (artists) => ({\r\n  type: ADD_ARTISTS,\r\n  artists\r\n});\r\n\r\nexport const initiateGetResult = (searchTerm) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const API_URL = `https://api.spotify.com/v1/search?query=${encodeURIComponent(\r\n        searchTerm\r\n      )}&type=track,album,artist&limit=24`;\r\n      const result = await get(API_URL);\r\n      console.log(result);\r\n      const { tracks, albums, artists } = result;\r\n      dispatch(setTracks(tracks));\r\n      dispatch(setAlbums(albums));\r\n      return dispatch(setArtists(artists));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateLoadMoreTracks = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log('url', url);\r\n      const result = await get(url);\r\n      console.log('categories', result);\r\n      return dispatch(addTracks(result.tracks));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateLoadMoreAlbums = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log('url', url);\r\n      const result = await get(url);\r\n      console.log('categories', result);\r\n      return dispatch(addAlbums(result.albums));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateLoadMoreArtists = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log('url', url);\r\n      const result = await get(url);\r\n      console.log('categories', result);\r\n      return dispatch(addArtists(result.artists));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Card, Container, Row, Col } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport music from '../images/music.jpeg';\r\nimport { TierListContext } from '../../tierlist/TierListContext';\r\n\r\nconst TracksList = ({ tracks }) => {\r\n  const [updater, setUpdater] = useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(tracks).length > 0 && (\r\n        <div className=\"tracks\">\r\n          {tracks.items.map((track, index) => {\r\n            let id = track.id, type = 'track', songURL = track.external_urls.spotify, title = track.name, subtitle = track.artists.map((artist) => artist.name).join(', ');\r\n            let imgURL = !_.isEmpty(track.album.images) ? track.album.images[0].url : null;\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <TierListContext.Consumer>\r\n                  {({containsItem, addToItemPool, deleteFromItemPool}) => (\r\n                    <Card className=\"search-card\" style={{margin: \"0.25rem 0\", backgroundColor: containsItem(id, type) ? \"black\" : \"\"}}>\r\n                      <Container>\r\n                        <Row>\r\n                          <Col xs=\"auto\">\r\n                            <a\r\n                              target=\"_blank\"\r\n                              href={songURL}\r\n                              rel=\"noopener noreferrer\"\r\n                              style={{filter: containsItem(id, type) ? \"brightness(50%)\" : \"brightness(100%)\"}}\r\n                            >\r\n                              {!_.isEmpty(track.album.images) ? (\r\n                                <Card.Img src={imgURL} alt=\"track album cover\" />\r\n                              ) : (\r\n                                <img src={music} alt=\"default album cover\" />\r\n                              )}\r\n                            </a>\r\n                          </Col>\r\n                          <Col>\r\n                            <Card.Body>\r\n                              <Card.Title style={{color: containsItem(id, type) ? \"#555\" : \"\"}}>{title}</Card.Title>\r\n                              <Card.Text>\r\n                                <small style={{color: containsItem(id, type) ?  \"#555\" : \"\"}}>{subtitle}</small>\r\n                              </Card.Text>\r\n                              <div>\r\n                                {containsItem(id, type) ? (\r\n                                  <button className=\"remove-buttons\" onClick={() => {\r\n                                    deleteFromItemPool(id, type);\r\n                                    setUpdater(!updater);\r\n                                  }}>×</button>\r\n                                ) : (\r\n                                  <button className=\"item-buttons\" onClick={() => {\r\n                                    addToItemPool(id, type, songURL, imgURL, title, subtitle);\r\n                                    setUpdater(!updater);\r\n                                  }}>+</button>\r\n                                )}\r\n                              </div>\r\n                            </Card.Body>\r\n                          </Col>\r\n                        </Row>\r\n                      </Container>\r\n                    </Card>\r\n                  )}\r\n                </TierListContext.Consumer>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TracksList;","import React, { useState } from 'react';\r\nimport { Card, Container, Row, Col } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport music from '../images/music.jpeg';\r\nimport { TierListContext } from '../../tierlist/TierListContext';\r\n\r\nconst AlbumsList = ({ albums }) => {\r\n  const [updater, setUpdater] = useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(albums).length > 0 && (\r\n        <div className=\"albums\">\r\n          {albums.items.map((album, index) => {\r\n            let id = album.id, type = 'album', songURL = album.external_urls.spotify, title = album.name, subtitle = album.artists.map((artist) => artist.name).join(', ');\r\n            let imgURL = !_.isEmpty(album.images) ? album.images[0].url : null;\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <TierListContext.Consumer>\r\n                  {({containsItem, addToItemPool, deleteFromItemPool}) => (\r\n                    <Card className=\"search-card\" style={{margin: \"0.25rem 0\", backgroundColor: containsItem(id, type) ? \"black\" : \"\"}}>\r\n                      <Container>\r\n                        <Row>\r\n                          <Col xs=\"auto\">\r\n                            <a\r\n                              target=\"_blank\"\r\n                              href={songURL}\r\n                              rel=\"noopener noreferrer\"\r\n                              style={{filter: containsItem(id, type) ? \"brightness(50%)\" : \"brightness(100%)\"}}\r\n                            >\r\n                              {!_.isEmpty(album.images) ? (\r\n                                <Card.Img src={album.images[0].url} alt=\"album cover\" />\r\n                              ) : (\r\n                                <img src={music} alt=\"default album cover\" />\r\n                              )}\r\n                            </a>\r\n                          </Col>\r\n                          <Col>\r\n                            <Card.Body>\r\n                              <Card.Title style={{color: containsItem(id, type) ? \"#555\" : \"\"}}>{title}</Card.Title>\r\n                              <Card.Text>\r\n                                <small style={{color: containsItem(id, type) ?  \"#555\" : \"\"}}>{subtitle}</small>\r\n                              </Card.Text>\r\n                              <div>\r\n                                {containsItem(id, type) ? (\r\n                                  <button className=\"remove-buttons\" onClick={() => {\r\n                                    deleteFromItemPool(id, type);\r\n                                    setUpdater(!updater);\r\n                                  }}>×</button>\r\n                                ) : (\r\n                                  <button className=\"item-buttons\" onClick={() => {\r\n                                    addToItemPool(id, type, songURL, imgURL, title, subtitle);\r\n                                    setUpdater(!updater);\r\n                                  }}>+</button>\r\n                                )}\r\n                              </div>\r\n                            </Card.Body>\r\n                          </Col>\r\n                          <Col xs=\"auto\">\r\n                          </Col>\r\n                        </Row>\r\n                      </Container>\r\n                    </Card>\r\n                  )}\r\n                </TierListContext.Consumer>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AlbumsList;","import React, { useState } from 'react';\r\nimport { Card, Container, Row, Col } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport music from '../images/music.jpeg';\r\nimport { TierListContext } from '../../tierlist/TierListContext';\r\n\r\nconst ArtistsList = ({ artists }) => {\r\n  const [updater, setUpdater] = useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(artists).length > 0 && (\r\n        <div className=\"artists\">\r\n          {artists.items.map((artist, index) => {\r\n            let id = artist.id, type = 'artist', songURL = artist.external_urls.spotify, title = artist.name, subtitle = null;\r\n            let imgURL = !_.isEmpty(artist.images) ? artist.images[0].url : null;\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <TierListContext.Consumer>\r\n                  {({containsItem, addToItemPool, deleteFromItemPool}) => (\r\n                    <Card className=\"search-card\" style={{margin: \"0.25rem 0\", backgroundColor: containsItem(id, type) ? \"black\" : \"\"}}>\r\n                      <Container>\r\n                        <Row>\r\n                          <Col xs=\"auto\">\r\n                            <a\r\n                              target=\"_blank\"\r\n                              href={songURL}\r\n                              rel=\"noopener noreferrer\"\r\n                              style={{filter: containsItem(id, type) ? \"brightness(50%)\" : \"brightness(100%)\"}}\r\n                            >\r\n                              {!_.isEmpty(artist.images) ? (\r\n                                <Card.Img src={artist.images[0].url} alt=\"artist\" />\r\n                              ) : (\r\n                                <img src={music} alt=\"default artist\" />\r\n                              )}\r\n                            </a>\r\n                          </Col>\r\n                          <Col>\r\n                            <Card.Body>\r\n                              <Card.Title style={{color: containsItem(id, type) ? \"#555\" : \"\"}}>{title}</Card.Title>\r\n                              <div>\r\n                                {containsItem(id, type) ? (\r\n                                  <button className=\"remove-buttons\" onClick={() => {\r\n                                    deleteFromItemPool(id, type);\r\n                                    setUpdater(!updater);\r\n                                  }}>×</button>\r\n                                ) : (\r\n                                  <button className=\"item-buttons\" onClick={() => {\r\n                                    addToItemPool(id, type, songURL, imgURL, title, subtitle);\r\n                                    setUpdater(!updater);\r\n                                  }}>+</button>\r\n                                )}\r\n                              </div>\r\n                            </Card.Body>\r\n                          </Col>\r\n                        </Row>\r\n                      </Container>\r\n                    </Card>\r\n                  )}\r\n                </TierListContext.Consumer>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ArtistsList;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport TracksList from './TracksList';\r\nimport AlbumsList from './AlbumsList';\r\nimport ArtistsList from './ArtistsList';\r\n\r\nconst SearchResult = (props) => {\r\n  const { loadMore, result, setCategory, selectedCategory } = props;\r\n  const { tracks, albums, artists } = result;\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"search-buttons\">\r\n        {!_.isEmpty(tracks.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'tracks' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('tracks')}\r\n          >\r\n            Songs\r\n          </button>\r\n        )}\r\n        {!_.isEmpty(albums.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'albums' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('albums')}\r\n          >\r\n            Albums\r\n          </button>\r\n        )}\r\n        {!_.isEmpty(artists.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'artists' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('artists')}\r\n          >\r\n            Artists\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <div className={`${selectedCategory === 'tracks' ? '' : 'hide'}`}>\r\n        {albums && <TracksList tracks={tracks} />}\r\n      </div>\r\n      <div className={`${selectedCategory === 'albums' ? '' : 'hide'}`}>\r\n        {albums && <AlbumsList albums={albums} />}\r\n      </div>\r\n      <div className={`${selectedCategory === 'artists' ? '' : 'hide'}`}>\r\n        {artists && <ArtistsList artists={artists} />}\r\n      </div>\r\n\r\n      {!_.isEmpty(result[selectedCategory]) &&\r\n       !_.isEmpty(result[selectedCategory].next) && (\r\n        <div className=\"load-more\">\r\n          <Button variant=\"info\" type=\"button\" onClick={() => loadMore(selectedCategory)}>\r\n            Load More\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SearchResult;","import React, { useState } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst SearchForm = (props) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n\r\n  const handleInputChange = (event) => {\r\n    const searchTerm = event.target.value;\r\n    setSearchTerm(searchTerm);\r\n  };\r\n\r\n  const handleSearch = (event) => {\r\n    event.preventDefault();\r\n    if (searchTerm.trim() !== '') {\r\n      setErrorMsg('');\r\n      props.handleSearch(searchTerm);\r\n    } else {\r\n      setErrorMsg('Please enter a search term.');\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleSearch}>\r\n        {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Control\r\n            type=\"search\"\r\n            name=\"searchTerm\"\r\n            value={searchTerm}\r\n            placeholder=\"Search here!\"\r\n            onChange={handleInputChange}\r\n            autoComplete=\"off\"\r\n          />\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchForm;","import { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst Loader = (props) => {\r\n  const [node] = useState(document.createElement('div'));\r\n  const loader = document.querySelector('#loader');\r\n\r\n  useEffect(() => {\r\n    loader.appendChild(node).classList.add('message');\r\n  }, [loader, node]);\r\n\r\n  useEffect(() => {\r\n    if (props.show) {\r\n      loader.classList.remove('hide');\r\n      document.body.classList.add('loader-open');\r\n    } else {\r\n      loader.classList.add('hide');\r\n      document.body.classList.remove('loader-open');\r\n    }\r\n  }, [loader, props.show]);\r\n\r\n  return ReactDOM.createPortal(props.children, node);\r\n};\r\nexport default Loader;","import React, { useState } from 'react';\r\nimport {\r\n  initiateGetResult,\r\n  initiateLoadMoreTracks,\r\n  initiateLoadMoreAlbums,\r\n  initiateLoadMoreArtists\r\n} from '../actions/result';\r\nimport { connect } from 'react-redux';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport SearchResult from './SearchResult';\r\nimport SearchForm from './SearchForm';\r\nimport Loader from './Loader';\r\n\r\nconst Dashboard = (props) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedCategory, setSelectedCategory] = [props.selectedCategory, props.updateCategory];\r\n  const { isValidSession, refreshSession } = props;\r\n\r\n  const handleSearch = async (searchTerm) => {\r\n    setIsLoading(true);\r\n    if (!isValidSession()) {\r\n      try { await refreshSession(); } \r\n      catch(error) { console.log(error); }\r\n    }\r\n    props.dispatch(initiateGetResult(searchTerm)).then(() => {\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n\r\n  const loadMore = async (type) => {\r\n    const { dispatch, tracks, albums, artists } = props;\r\n    setIsLoading(true);\r\n    if (!isValidSession()) {\r\n      try { await refreshSession(); }\r\n      catch(error) { console.log(error); }\r\n    }\r\n    switch (type) {\r\n      case 'tracks':\r\n        await dispatch(initiateLoadMoreTracks(tracks.next));\r\n        break;\r\n      case 'albums':\r\n        await dispatch(initiateLoadMoreAlbums(albums.next));\r\n        break;\r\n      case 'artists':\r\n        await dispatch(initiateLoadMoreArtists(artists.next));\r\n        break;\r\n      default:\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const setCategory = (category) => { setSelectedCategory(category); };\r\n\r\n  const { tracks, albums, artists } = props;\r\n  const result = { tracks, albums, artists };\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <SearchForm handleSearch={handleSearch} />\r\n        <Loader show={isLoading}>\r\n          <Spinner animation=\"border\" role=\"status\" style={{marginRight: '0.5rem'}}/>\r\n          Loading...\r\n        </Loader>\r\n        <SearchResult\r\n          result={result}\r\n          loadMore={loadMore}\r\n          setCategory={setCategory}\r\n          selectedCategory={selectedCategory}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tracks: state.tracks,\r\n    albums: state.albums,\r\n    artists: state.artists\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Dashboard);","import React from 'react';\r\nimport Dashboard from './components/Dashboard';\r\nimport { getAuthToken } from './utils/api';\r\n\r\nclass SidebarSearch extends React.Component {\r\n    \r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { loaded: false, selectedCategory: 'tracks' };\r\n    }\r\n\r\n    updateCategory = (category) => {\r\n      const newState = {\r\n        ...this.state,\r\n        selectedCategory: category\r\n      };\r\n      this.setState(newState);\r\n    }\r\n    \r\n    refreshSession = async () => {\r\n        let result;\r\n        try{ result = await getAuthToken(); } \r\n        catch(error) { console.log(error); }\r\n        if(result) {\r\n          const {\r\n              access_token,\r\n              expires_in\r\n          } = result;\r\n          localStorage.setItem('params', JSON.stringify(access_token));\r\n          localStorage.setItem('expiry_time', new Date().getTime() + expires_in * 1000);\r\n          if(!this.loaded) this.setState({ loaded: true });\r\n        }\r\n    }\r\n    \r\n    isValidSession = () => {\r\n        let expiryTime;\r\n        try { expiryTime = JSON.parse(localStorage.getItem('expiry_time')); } \r\n        catch(error) { expiryTime = '0'; }\r\n        const currentTime = new Date().getTime();\r\n        if(currentTime >= expiryTime && this.loaded) this.setState({ loaded: false });\r\n        return currentTime < expiryTime;\r\n    };\r\n\r\n    render() {\r\n        if(!this.isValidSession()) {\r\n          this.refreshSession();\r\n          return (\r\n            <div className=\"sidebar-search\">\r\n              Loading...\r\n            </div>\r\n          );\r\n        }\r\n        return (\r\n          <div className=\"sidebar-search\">\r\n            <Dashboard key={this.props.refreshSidebar} isValidSession={this.isValidSession} refreshSession={this.refreshSession}\r\n              selectedCategory={this.state.selectedCategory} updateCategory={this.updateCategory} />\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SidebarSearch;","const Header = () => {\r\n  return <h1 className=\"main-heading\">Search</h1>;\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport '@atlaskit/css-reset';\r\nimport styled from 'styled-components';\r\nimport Column from './components/Column';\r\nimport ItemPool from './components/ItemPool';\r\nimport TrashCan from './components/TrashCan';\r\nimport TrashCan2 from './components/TrashCan2';\r\nimport { TierListContext } from './TierListContext';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport { Offcanvas } from 'react-bootstrap';\r\nimport { toSvg } from 'html-to-image';\r\nimport SidebarSearch from '../sidebar/SidebarSearch'\r\nimport Header from '../sidebar/components/Header';\r\nimport './tierlist-styles.css';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nclass InnerList extends React.PureComponent {\r\n  render() {\r\n    const { column, itemMap, index, updateHeader } = this.props;\r\n    const items = column.itemIds.map(itemId => itemMap[itemId]);\r\n    return <Column column={column} items={items} index={index} updateHeader={updateHeader} />;\r\n  }\r\n}\r\n\r\nlet refreshSidebar = false;\r\nlet refreshColumns = false;\r\nlet showSearchbar = false;\r\nlet showItempool = false;\r\n\r\nclass TierList extends React.Component {\r\n  static contextType = TierListContext;\r\n  state = this.context.data;\r\n\r\n  componentDidMount() {\r\n    this.context.containsItem = (id, type) => {\r\n      if(id in this.state.items) {\r\n        return this.state.items[id]['type'] === type;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    this.context.addToItemPool = (id, type, songURL, imgURL, title, subtitle) => {\r\n      if(this.context.containsItem(id, type)) return; // do nothing\r\n      const newItems = {\r\n        ...this.state.items,\r\n        [id]: {\r\n          id: id,\r\n          type: type,\r\n          songURL: songURL,\r\n          imgURL: imgURL,\r\n          title: title,\r\n          subtitle: subtitle\r\n        }\r\n      }\r\n      const newItemIds = Array.from(this.state.columns['item-pool'].itemIds).concat(id);\r\n      const newItemPool = {\r\n        ...this.state.columns['item-pool'],\r\n        itemIds: newItemIds\r\n      }\r\n      const newState = {\r\n        ...this.state,\r\n        items: newItems,\r\n        columns: {\r\n          ...this.state.columns,\r\n          'item-pool': newItemPool\r\n        }\r\n      };\r\n      this.setState(newState);\r\n    };\r\n    \r\n    this.context.deleteFromItemPool = (id, type) => {\r\n      if(!this.context.containsItem(id, type)) return; // do nothing\r\n      let newItems = this.state.items;\r\n      delete newItems[id];\r\n\r\n      let newColumns = this.state.columns;\r\n      Object.keys(newColumns).forEach(function(key) {\r\n        const delIndex = newColumns[key].itemIds.indexOf(id);\r\n        if(delIndex !== -1) newColumns[key].itemIds.splice(delIndex, 1);\r\n      });\r\n\r\n      const newState = {\r\n        ...this.state,\r\n        items: newItems,\r\n        columns: newColumns\r\n      }\r\n      console.log(newState);\r\n      refreshColumns = !refreshColumns;\r\n      this.setState(newState);\r\n    }\r\n  }\r\n\r\n  // uh-oh this might be buggy\r\n  importFromJson = e => {\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\r\n    fileReader.onload = e => {\r\n      const newState = JSON.parse(e.target.result);\r\n      // check if the required keys exist and the item-pool exists in column and has the correct format\r\n      if(!('columnOrder' in newState && 'items' in newState && 'columns' in newState && 'item-pool' in newState.columns\r\n      && 'id' in newState.columns['item-pool'] && newState.columns['item-pool'].id === 'item-pool'\r\n      && 'itemIds' in newState.columns['item-pool'] && Array.isArray(newState.columns['item-pool'].itemIds))) {\r\n        console.log('missing item pool!');\r\n        return;\r\n      }\r\n\r\n      // check if every column has the correct format\r\n      let hasValidColumns = true;\r\n      const requiredColumnKeys = ['id', 'title', 'color', 'itemIds'];\r\n      Object.keys(newState.columns).forEach(function(key) {\r\n        if(!hasValidColumns || key === 'item-pool') return;\r\n        const columnKeys = Object.keys(newState.columns[key]);\r\n        hasValidColumns = columnKeys.length === requiredColumnKeys.length && columnKeys.every(function(v, i) { return v === requiredColumnKeys[i]});\r\n      });\r\n      if(!hasValidColumns) {\r\n        console.log('missing required column information!');\r\n        return;\r\n      }\r\n\r\n      // check if every column in columnOrder exists in column (and no extra besides item-pool)\r\n      const columnOrder = newState.columnOrder;\r\n      let allColumns = Object.keys(newState.columns);\r\n      allColumns.splice(allColumns.indexOf('item-pool'), 1);\r\n      if(!(columnOrder.length === allColumns.length && columnOrder.every(el => allColumns.includes(el)))) {\r\n        console.log('columnOrder and columns don\\'t match!');\r\n        return;\r\n      }\r\n\r\n      // check if every item in items has the correct format\r\n      let hasValidItems = true;\r\n      const requiredItemKeys = ['id', 'type', 'songURL', 'imgURL', 'title', 'subtitle'];\r\n      Object.keys(newState.items).forEach(function(key) {\r\n        if(!hasValidItems) return;\r\n        const itemKeys = Object.keys(newState.items[key]);\r\n        hasValidItems = itemKeys.length === requiredItemKeys.length && itemKeys.every(function(v, i) { return v === requiredItemKeys[i]});\r\n      });\r\n      if(!hasValidItems) {\r\n        console.log('missing required item information!');\r\n        return;\r\n      }\r\n\r\n      // check if every itemIDs exists in items (and no extra)\r\n      const allItems = Object.keys(newState.items);\r\n      let itemIds = [];\r\n      Object.keys(newState.columns).forEach(function(key) {\r\n        itemIds = itemIds.concat(newState.columns[key].itemIds);\r\n      });\r\n      if(!(itemIds.length === allItems.length && itemIds.every(el => allItems.includes(el)))) {\r\n        console.log('items and itemIds don\\'t match!');\r\n        return;\r\n      }\r\n\r\n      // success\r\n      refreshSidebar = !refreshSidebar;\r\n      this.setState(newState);\r\n      console.log(this.state);\r\n    };\r\n  }\r\n\r\n  saveAsSVG() {\r\n    toSvg(document.getElementById('tierlist_all'), {backgroundColor: '#121212'})\r\n      .then((dataUrl) => {\r\n        const link = document.createElement('a');\r\n        link.download = 'tierlist.svg';\r\n        link.href = dataUrl;\r\n        link.click();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  deleteItem = (id, source, home) => {\r\n    const homeitemIds = Array.from(home.itemIds);\r\n    homeitemIds.splice(source.index, 1);\r\n    const newHome = {\r\n      ...home,\r\n      itemIds: homeitemIds,\r\n    };\r\n\r\n    const oldItems = this.state.items;\r\n    const newItems = Object.keys(oldItems).reduce((object, key) => {\r\n      if (key !== id) {\r\n        object[key] = oldItems[key];\r\n      }\r\n      return object;\r\n    }, {});\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      items: newItems,\r\n      columns: {\r\n        ...this.state.columns,\r\n        [newHome.id]: newHome,\r\n      },\r\n    };\r\n\r\n    refreshSidebar = !refreshSidebar;\r\n    this.setState(newState);\r\n  }\r\n\r\n  updateColHeader = (id, newTitle, newColor) => {\r\n    const oldHeader = this.state.columns[id];\r\n    const newHeader = {\r\n      ...oldHeader,\r\n      title: newTitle,\r\n      color: newColor\r\n    };\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        [id]: newHeader\r\n      }\r\n    };\r\n    this.setState(newState);\r\n  }\r\n\r\n  removeCol = (id) => {\r\n    const oldItems = this.state.items;\r\n    const newItems = Object.keys(oldItems).reduce((object, key) => {\r\n      if(!this.state.columns[id].itemIds.includes(key)) {\r\n        object[key] = oldItems[key];\r\n      }\r\n      return object;\r\n    }, {});\r\n\r\n    const newColumnOrder = Array.from(this.state.columnOrder);\r\n    newColumnOrder.splice(newColumnOrder.indexOf(id), 1);\r\n\r\n    const oldColumns = this.state.columns;\r\n    const newColumns = Object.keys(oldColumns).reduce((object, key) => {\r\n      if (key !== id) {\r\n        object[key] = oldColumns[key];\r\n      }\r\n      return object;\r\n    }, {});\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      items: newItems,\r\n      columns: newColumns,\r\n      columnOrder: newColumnOrder,\r\n    };\r\n    refreshSidebar = !refreshSidebar;\r\n    this.setState(newState);\r\n  }\r\n\r\n  onDragEnd = result => {\r\n    const { destination, source, draggableId, type } = result;\r\n\r\n    if (!destination) return;\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) return;\r\n\r\n    if (destination.droppableId === 'trash-can-2') {\r\n      this.removeCol(draggableId);\r\n      return;\r\n    }\r\n\r\n    if (type === 'column') {\r\n      const newColumnOrder = Array.from(this.state.columnOrder);\r\n      newColumnOrder.splice(source.index, 1);\r\n      newColumnOrder.splice(destination.index, 0, draggableId);\r\n\r\n      const newState = {\r\n        ...this.state,\r\n        columnOrder: newColumnOrder\r\n      };\r\n      this.setState(newState);\r\n      return;\r\n    }\r\n\r\n    const home = this.state.columns[source.droppableId];\r\n    const foreign = this.state.columns[destination.droppableId];\r\n\r\n    if (destination.droppableId === 'trash-can') {\r\n      this.deleteItem(draggableId, source, home);\r\n      return;\r\n    }\r\n\r\n    if (home === foreign) {\r\n      const newitemIds = Array.from(home.itemIds);\r\n      newitemIds.splice(source.index, 1);\r\n      newitemIds.splice(destination.index, 0, draggableId);\r\n\r\n      const newHome = {\r\n        ...home,\r\n        itemIds: newitemIds\r\n      };\r\n\r\n      const newState = {\r\n        ...this.state,\r\n        columns: {\r\n          ...this.state.columns,\r\n          [newHome.id]: newHome\r\n        }\r\n      };\r\n\r\n      this.setState(newState);\r\n      return;\r\n    }\r\n\r\n    // moving from one list to another\r\n    const homeitemIds = Array.from(home.itemIds);\r\n    homeitemIds.splice(source.index, 1);\r\n    const newHome = {\r\n      ...home,\r\n      itemIds: homeitemIds,\r\n    };\r\n\r\n    const foreignitemIds = Array.from(foreign.itemIds);\r\n    foreignitemIds.splice(destination.index, 0, draggableId);\r\n    const newForeign = {\r\n      ...foreign,\r\n      itemIds: foreignitemIds,\r\n    };\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        [newHome.id]: newHome,\r\n        [newForeign.id]: newForeign,\r\n      },\r\n    };\r\n    this.setState(newState);\r\n  };\r\n\r\n  addNewGroup = () => {\r\n    const ID = `column-${new Date().getTime()}`;\r\n    const newColumnOrder = Array.from(this.state.columnOrder).concat(ID);\r\n    const newState = {\r\n      ...this.state,\r\n      columnOrder: newColumnOrder\r\n    };\r\n    newState['columns'][ID] = {\r\n      id: ID,\r\n      title: 'NEW',\r\n      color: '#1DB954',\r\n      itemIds: [],\r\n    };\r\n    this.setState(newState);\r\n  }\r\n\r\n  resetAllItems = () => {\r\n    let newColumns = this.state.columns;\r\n    Object.keys(newColumns).forEach(function(key) {\r\n      if(key === 'item-pool') return;\r\n      newColumns['item-pool'].itemIds = newColumns['item-pool'].itemIds.concat(newColumns[key].itemIds);\r\n      newColumns[key].itemIds = [];\r\n    });\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      columns: newColumns\r\n    };\r\n    refreshColumns = !refreshColumns;\r\n    this.setState(newState);\r\n  }\r\n\r\n  removeAllItems = () => {\r\n    this.resetAllItems();\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        'item-pool': {\r\n          id: 'item-pool',\r\n          itemIds: [],\r\n        }\r\n      },\r\n      items: {},\r\n    };\r\n    refreshSidebar = !refreshSidebar;\r\n    this.setState(newState);\r\n  }\r\n\r\n  resetAllColumns = () => {\r\n    this.resetAllItems();\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        'column-1': {\r\n          id: 'column-1',\r\n          title: 'S',\r\n          color: 'purple',\r\n          itemIds: [],\r\n        },\r\n        'column-2': {\r\n          id: 'column-2',\r\n          title: 'A',\r\n          color: '#1DB954',\r\n          itemIds: [],\r\n        },\r\n        'column-3': {\r\n          id: 'column-3',\r\n          title: 'B',\r\n          color: 'blue',\r\n          itemIds: [],\r\n        },\r\n        'column-4': {\r\n          id: 'column-4',\r\n          title: 'C',\r\n          color: 'grey',\r\n          itemIds: [],\r\n        }\r\n      },\r\n      columnOrder: ['column-1', 'column-2', 'column-3','column-4']\r\n    }\r\n    refreshColumns = !refreshColumns;\r\n    this.setState(newState);\r\n  }\r\n\r\n  resetTierList = () => {\r\n    this.resetAllItems();\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        'column-1': {\r\n          id: 'column-1',\r\n          title: 'S',\r\n          color: 'purple',\r\n          itemIds: [],\r\n        },\r\n        'column-2': {\r\n          id: 'column-2',\r\n          title: 'A',\r\n          color: '#1DB954',\r\n          itemIds: [],\r\n        },\r\n        'column-3': {\r\n          id: 'column-3',\r\n          title: 'B',\r\n          color: 'blue',\r\n          itemIds: [],\r\n        },\r\n        'column-4': {\r\n          id: 'column-4',\r\n          title: 'C',\r\n          color: 'grey',\r\n          itemIds: [],\r\n        },\r\n        'item-pool': {\r\n          id: 'item-pool',\r\n          itemIds: [],\r\n        }\r\n      },\r\n      items: {},\r\n      columnOrder: ['column-1', 'column-2', 'column-3','column-4']\r\n    };\r\n    \r\n    refreshColumns = !refreshColumns;\r\n    refreshSidebar = !refreshSidebar;\r\n    this.setState(newState);\r\n  }\r\n\r\n  showSearch = (show) => {\r\n    showSearchbar = show;\r\n    this.setState(this.state);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <DragDropContext onDragEnd={this.onDragEnd}>\r\n          <Container>\r\n            <button type=\"button\" onClick={this.addNewGroup}>Add new group</button>\r\n            <button type=\"button\" onClick={this.resetAllItems}>Reset All Items</button>\r\n            <button type=\"button\" onClick={this.removeAllItems}>Remove All Items</button>\r\n            <button type=\"button\" onClick={this.resetAllColumns}>Reset All Columns</button>\r\n            <button type=\"button\" onClick={this.resetTierList}>Reset TierList</button>\r\n            <a\r\n              href={`data:text/json;charset=utf-8,${encodeURIComponent(\r\n                JSON.stringify(this.state)\r\n              )}`}\r\n              download=\"tierlist.json\"\r\n            >\r\n              {`Export as Json`}\r\n            </a>\r\n            <div>\r\n              <label htmlFor=\"import_tierlist\">Import from Json</label>\r\n              <input type=\"file\" id=\"import_tierlist\" name=\"import_tierlist\" accept=\".json\" onChange={this.importFromJson}/>\r\n            </div>\r\n            <button type=\"button\" onClick={this.saveAsSVG}>Save as .svg</button>\r\n            <button type=\"button\" onClick={() => this.showSearch(true)}>Search</button>\r\n          </Container>\r\n\r\n          <Container>\r\n            <Droppable droppableId=\"tiers\" direction=\"horizontal\" type=\"column\">\r\n              {provided => (\r\n                <Container\r\n                  {...provided.droppableProps}\r\n                  ref={provided.innerRef}\r\n                  id=\"tierlist_all\"\r\n                  key={refreshColumns}\r\n                >\r\n                  {this.state.columnOrder.map((columnId, index) => {\r\n                    const column = this.state.columns[columnId];\r\n                    return (\r\n                      <InnerList\r\n                        key={column.id}\r\n                        column={column}\r\n                        itemMap={this.state.items}\r\n                        index={index}\r\n                        updateHeader={this.updateColHeader}\r\n                      />\r\n                    );\r\n                  })}\r\n                  {provided.placeholder}\r\n                </Container>\r\n              )}\r\n            </Droppable>\r\n          </Container>\r\n\r\n          <Container>\r\n            <TrashCan />\r\n            <TrashCan2 />\r\n            <ItemPool items = {this.state.columns['item-pool'].itemIds.map(itemId => this.state.items[itemId])} />\r\n          </Container>\r\n\r\n          <Offcanvas id=\"sidebar-overlay\" show={showSearchbar} onHide={() => this.showSearch(false)} placement={'end'} scroll backdrop={false}>\r\n            <Offcanvas.Header closeButton closeVariant='white' style={{paddingBottom: \"0.5rem\"}}>\r\n              <Offcanvas.Title><Header /></Offcanvas.Title>\r\n            </Offcanvas.Header>\r\n            <Offcanvas.Body style={{padding: \"0.5rem 0 0 0\", overflowY: 'scroll'}}>\r\n              <SidebarSearch refreshSidebar={refreshSidebar}/>\r\n            </Offcanvas.Body>\r\n          </Offcanvas>\r\n        </DragDropContext>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TierList","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport TierList from './tierlist/TierList';\nimport { TierListContext, initialData } from './tierlist/TierListContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './sidebar-styles.css';\n\nReactDOM.render(\n  <TierListContext.Provider value = {initialData}>\n    <h1 className=\"title-heading\">Spotify Tier List Maker</h1>\n    <Provider store={store}>\n      <TierList/>\n    </Provider>\n  </TierListContext.Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}