{"version":3,"sources":["sidebar/utils/constants.js","sidebar/reducers/tracks.js","sidebar/reducers/albums.js","sidebar/reducers/artists.js","sidebar/reducers/playlist.js","store/store.js","sidebar/images/music.jpeg","tierlist/components/Item.jsx","tierlist/imgs/tool.svg","tierlist/imgs/palette.svg","tierlist/components/Title.jsx","tierlist/components/Column.jsx","tierlist/components/ItemPool.jsx","tierlist/components/TrashCan.jsx","tierlist/TierListContext.js","sidebar/utils/functions.js","sidebar/utils/api.js","sidebar/actions/result.js","sidebar/components/TracksList.js","sidebar/components/AlbumsList.js","sidebar/components/ArtistsList.js","sidebar/components/PlayList.js","sidebar/components/SearchResult.js","sidebar/components/SearchForm.js","sidebar/components/Header.js","sidebar/components/Loader.js","sidebar/components/Dashboard.js","sidebar/SidebarSearch.js","tierlist/TierList.js","index.js"],"names":["SET_TRACKS","ADD_TRACKS","SET_ALBUMS","ADD_ALBUMS","SET_ARTISTS","ADD_ARTISTS","SET_PLAYLIST","ADD_PLAYLIST","tracksReducer","state","action","tracks","type","next","items","albumsReducer","albums","artistsReducer","artists","playlistReducer","playlists","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","playlist","applyMiddleware","thunk","ItemContent","styled","div","props","isDragging","Item","draggableId","this","item","id","index","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","Card","style","margin","Container","Row","noGutters","Col","xs","target","href","songURL","rel","imgURL","Img","src","alt","music","Body","Title","title","subtitle","Text","React","Component","TitleStyle","h3","color","InputStyle","textarea","ButtonStyle","button","inputRef","useRef","useState","colData","setID","setTitle","setColor","inputVisible","setInputVisible","update","updateHeader","deleteHandler","onClickOutSide","e","current","contains","useEffect","document","addEventListener","removeEventListener","Fragment","width","display","alignItems","onSubmit","value","onChange","Dropdown","as","ButtonGroup","drop","Toggle","Image","palette","fluid","height","Menu","backgroundColor","onClick","Divider","textShadow","wordBreak","flexGrow","overflow","tool","ItemList","isDraggingOver","InnerList","nextProps","map","Column","column","droppableId","droppableProps","placeholder","ItemPool","className","TrashCan","initialData","data","columns","itemIds","columnOrder","containsItem","addToItemPool","TierListContext","createContext","setAuthHeader","params","JSON","parse","localStorage","getItem","axios","defaults","headers","common","error","console","log","get","url","a","result","getAuthToken","process","Accept","auth","username","password","grant_type","post","qs","stringify","response","setTracks","setAlbums","setArtists","setPlayList","initiateGetResult","searchTerm","dispatch","API_URL","encodeURIComponent","initiateLoadMoreTracks","initiateLoadMoreAlbums","initiateLoadMoreArtists","initiateLoadMorePlaylist","TracksList","updater","setUpdater","Object","keys","length","track","external_urls","spotify","name","artist","join","_","isEmpty","album","images","Consumer","maxWidth","marginLeft","marginRight","disabled","AlbumsList","ArtistsList","PlayList","owner","display_name","SearchResult","loadMore","setCategory","selectedCategory","Button","variant","SearchForm","setSearchTerm","errorMsg","setErrorMsg","Form","event","preventDefault","trim","handleSearch","Group","controlId","Control","autoComplete","Header","marginBottom","Loader","createElement","node","loader","querySelector","appendChild","classList","add","show","remove","body","ReactDOM","createPortal","children","connect","isLoading","setIsLoading","setSelectedCategory","isValidSession","refreshSession","then","category","SidebarSearch","access_token","expires_in","setItem","Date","getTime","loaded","setState","expiryTime","currentTime","itemMap","itemId","PureComponent","TierList","context","importFromJson","fileReader","FileReader","readAsText","files","onload","newState","Array","isArray","hasValidColumns","requiredColumnKeys","forEach","key","columnKeys","every","v","i","allColumns","splice","indexOf","el","includes","hasValidItems","requiredItemKeys","itemKeys","allItems","concat","deleteItem","source","home","homeitemIds","from","newHome","oldItems","newItems","reduce","object","updateColHeader","newTitle","newColor","oldHeader","newHeader","removeCol","newColumnOrder","oldColumns","newColumns","onDragEnd","destination","foreign","foreignitemIds","newForeign","newitemIds","newItemIds","newItemPool","ID","download","htmlFor","accept","direction","columnId","contextType","render","Provider","getElementById"],"mappings":"0PAAaA,EAAa,aACbC,EAAa,aACbC,EAAa,aACbC,EAAa,aACbC,EAAc,cACdC,EAAc,cACdC,EAAe,eACfC,EAAe,eCWbC,EAhBO,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACpCC,EAAWD,EAAXC,OACR,OAAQD,EAAOE,MACb,KAAKZ,EACH,OAAOW,EACT,KAAKV,EACH,OAAO,2BACFQ,GADL,IAEEI,KAAMF,EAAOE,KACbC,MAAM,GAAD,mBAAML,EAAMK,OAAZ,YAAsBH,EAAOG,UAEtC,QACE,OAAOL,ICIEM,EAhBO,WAAyB,IAAxBN,EAAuB,uDAAf,GAAIC,EAAW,uCACpCM,EAAWN,EAAXM,OACR,OAAQN,EAAOE,MACb,KAAKV,EACH,OAAOc,EACT,KAAKb,EACH,OAAO,2BACFM,GADL,IAEEI,KAAMG,EAAOH,KACbC,MAAM,GAAD,mBAAML,EAAMK,OAAZ,YAAsBE,EAAOF,UAEtC,QACE,OAAOL,ICIEQ,EAhBQ,WAAyB,IAAxBR,EAAuB,uDAAf,GAAIC,EAAW,uCACrCQ,EAAYR,EAAZQ,QACR,OAAQR,EAAOE,MACb,KAAKR,EACH,OAAOc,EACT,KAAKb,EACH,OAAO,2BACFI,GADL,IAEEI,KAAMK,EAAQL,KACdC,MAAM,GAAD,mBAAML,EAAMK,OAAZ,YAAsBI,EAAQJ,UAEvC,QACE,OAAOL,ICIEU,EAhBS,WAAyB,IAAxBV,EAAuB,uDAAf,GAAIC,EAAW,uCACtCU,EAAcV,EAAdU,UACR,OAAQV,EAAOE,MACb,KAAKN,EACH,OAAOc,EACT,KAAKb,EACH,OAAO,2BACFE,GADL,IAEEI,KAAMO,EAAUP,KAChBC,MAAM,GAAD,mBAAML,EAAMK,OAAZ,YAAsBM,EAAUN,UAEzC,QACE,OAAOL,ICRPY,EAAmBC,OAAOC,sCAAwCC,IAYzDC,EAVDC,YACZC,YAAgB,CACdhB,OAAQH,EACRQ,OAAQD,EACRG,QAASD,EACTW,SAAUT,IAEZE,EAAiBQ,YAAgBC,O,2GCfpB,MAA0B,mC,wHCMzC,IAAMC,EAAcC,IAAOC,IAAV,KAEK,SAAAC,GAAK,OAAKA,EAAMC,WAAa,aAAe,UAG7CC,E,uKACP,IAAD,OACP,OACE,cAAC,IAAD,CAAWC,YAAaC,KAAKJ,MAAMK,KAAKC,GAAIC,MAAOH,KAAKJ,MAAMO,MAA9D,SACG,SAACC,EAAUC,GAAX,OACC,cAACZ,EAAD,uCACMW,EAASE,gBACTF,EAASG,iBAFf,IAGEC,IAAKJ,EAASK,SACdZ,WAAYQ,EAASR,WAJvB,SAME,cAACa,EAAA,EAAD,CAAMC,MAAO,CAAEC,OAAQ,GAAvB,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,WAAS,EAAd,UACE,cAACC,EAAA,EAAD,CAAKC,GAAG,OAAR,SACE,mBACEC,OAAO,SACPC,KAAM,EAAKvB,MAAMK,KAAKmB,QACtBC,IAAI,sBAHN,SAKG,EAAKzB,MAAMK,KAAKqB,OACf,cAACZ,EAAA,EAAKa,IAAN,CAAUC,IAAK,EAAK5B,MAAMK,KAAKqB,OAAQG,IAAI,KAE3C,qBAAKD,IAAKE,EAAOD,IAAI,SAI3B,cAACT,EAAA,EAAD,UACE,eAACN,EAAA,EAAKiB,KAAN,WACE,cAACjB,EAAA,EAAKkB,MAAN,UAAa,EAAKhC,MAAMK,KAAK4B,QAC5B,EAAKjC,MAAMK,KAAK6B,UACf,cAACpB,EAAA,EAAKqB,KAAN,UACE,gCACG,EAAKnC,MAAMK,KAAK6B,mC,GAjCbE,IAAMC,W,kCCXzB,MAA0B,iCCA1B,MAA0B,oC,2sBCOzC,IAAMC,EAAaxC,IAAOyC,GAAV,KACQ,SAAAvC,GAAK,OAAIA,EAAMwC,SASjCC,EAAa3C,IAAO4C,SAAV,KAUVC,GAAc7C,IAAO8C,OAAV,KA4EFZ,GAhED,SAAAhC,GACZ,IAAM6C,EAAWC,iBAAO,MADH,EAEDC,mBAAS/C,EAAMgD,QAAQ1C,IAFtB,mBAEdA,EAFc,KAEV2C,EAFU,OAGKF,mBAAS/C,EAAMgD,QAAQf,OAH5B,mBAGdA,EAHc,KAGPiB,EAHO,OAIKH,mBAAS/C,EAAMgD,QAAQR,OAJ5B,mBAIdA,EAJc,KAIPW,EAJO,OAKmBJ,oBAAS,GAL5B,mBAKdK,EALc,KAKAC,EALA,KAMfC,EAAStD,EAAMuD,aACfC,EAAgBxD,EAAMwD,cAE5B,SAASC,EAAeC,GAClBb,EAASc,UAAYd,EAASc,QAAQC,SAASF,EAAEpC,SAAS+B,GAAgB,GAchF,OAXAQ,qBAAU,WAER,OADIT,GAAcU,SAASC,iBAAiB,YAAaN,GAClD,WAAQK,SAASE,oBAAoB,YAAaP,OAG3DI,qBAAU,WACRZ,EAAMjD,EAAMgD,QAAQ1C,IACpB4C,EAASlD,EAAMgD,QAAQf,OACvBkB,EAASnD,EAAMgD,QAAQR,SACtB,CAACxC,EAAMgD,UAGR,cAACV,EAAD,CAAYE,MAAOA,EAAnB,SACE,cAAC,IAAMyB,SAAP,UACGb,EACC,uBAAMrC,MAAO,CAACmD,MAAO,OAAQC,QAAS,OAAQC,WAAY,UAAWC,SAAU,kBAAMhB,GAAgB,IAAQzC,IAAKiC,EAAlH,UACE,cAACJ,EAAD,CACE6B,MAAOrC,EACPsC,SAAU,SAAAb,GACRR,EAASQ,EAAEpC,OAAOgD,OAClBhB,EAAOhD,EAAIoD,EAAEpC,OAAOgD,MAAO9B,MAG/B,eAACgC,EAAA,EAAD,CAAUC,GAAIC,IAAaC,KAAK,QAAhC,UACE,cAACH,EAAA,EAASI,OAAV,CAAiBtE,GAAG,eAApB,SACE,cAACuE,EAAA,EAAD,CAAOjD,IAAKkD,EAASC,OAAK,EAAClD,IAAI,SAASd,MAAO,CAACmD,MAAO,OAAQc,OAAQ,YAEzE,eAACR,EAAA,EAASS,KAAV,WACE,cAACT,EAAA,EAAStE,KAAV,CAAea,MAAO,CAACmE,gBAAiB,QAASC,QAAS,WAAQhC,EAAS,QAASG,EAAOhD,EAAI2B,EAAO,SAAtG,kBACA,cAACuC,EAAA,EAAStE,KAAV,CAAea,MAAO,CAACmE,gBAAiB,QAASC,QAAS,WAAQhC,EAAS,QAASG,EAAOhD,EAAI2B,EAAO,SAAtG,kBACA,cAACuC,EAAA,EAAStE,KAAV,CAAea,MAAO,CAACmE,gBAAiB,UAAWC,QAAS,WAAQhC,EAAS,UAAWG,EAAOhD,EAAI2B,EAAO,WAA1G,oBACA,cAACuC,EAAA,EAASY,QAAV,IACA,cAACZ,EAAA,EAAStE,KAAV,CAAea,MAAO,CAACmE,gBAAiB,WAAYC,QAAS,WAAQhC,EAAS,WAAYG,EAAOhD,EAAI2B,EAAO,YAA5G,qBACA,cAACuC,EAAA,EAASY,QAAV,IACA,cAACZ,EAAA,EAAStE,KAAV,CAAeiF,QAAS,WAAQ3B,EAAclD,IAA9C,kCAKN,sBAAKS,MAAO,CAACmD,MAAO,OAAQC,QAAS,OAAQC,WAAY,UAAzD,UACE,qBAAKrD,MAAO,CAACyB,MAAO,QAAS6C,WAAY,gBAAiBC,UAAW,YAAaC,SAAU,IAAKC,SAAU,UAA3G,SAAuHvD,IACvH,cAACU,GAAD,CAAawC,QAAS,kBAAM9B,GAAgB,IAA5C,SACE,cAACwB,EAAA,EAAD,CAAOjD,IAAK6D,EAAMV,OAAK,EAAClD,IAAI,WAAWd,MAAO,CAACmD,MAAO,OAAQc,OAAQ,oB,ibCxFpF,IAAM/D,GAAYnB,IAAOC,IAAV,MAST2F,GAAW5F,IAAOC,IAAV,MAGQ,SAAAC,GAAK,OAAIA,EAAM2F,eAAiB,YAAc,UAM9DC,G,oLACkBC,GACpB,OAAIA,EAAUjH,QAAUwB,KAAKJ,MAAMpB,Q,+BAMnC,OAAOwB,KAAKJ,MAAMpB,MAAMkH,KAAI,SAACzF,EAAME,GAAP,OAC1B,cAAC,EAAD,CAAoBF,KAAMA,EAAME,MAAOA,GAA5BF,EAAKC,W,GATE8B,IAAMC,WAcT0D,G,uKACT,IAAD,OACP,OACE,cAAC,IAAD,CAAW5F,YAAaC,KAAKJ,MAAMgG,OAAO1F,GAAIC,MAAOH,KAAKJ,MAAMO,MAAhE,SACG,SAAAC,GAAQ,OACP,eAAC,GAAD,2BAAeA,EAASE,gBAAxB,IAAwCE,IAAKJ,EAASK,SAAtD,UACE,+CAASL,EAASG,iBAAlB,aACE,cAAC,GAAD,CAAOqC,QAAS,EAAKhD,MAAMgG,OAAQzC,aAAc,EAAKvD,MAAMuD,aAAcC,cAAe,EAAKxD,MAAMwD,mBAEtG,cAAC,IAAD,CAAWyC,YAAa,EAAKjG,MAAMgG,OAAO1F,GAAI5B,KAAK,OAAnD,SACG,SAAC8B,EAAUC,GAAX,OACC,eAACiF,GAAD,yBACE9E,IAAKJ,EAASK,UACVL,EAAS0F,gBAFf,IAGEP,eAAgBlF,EAASkF,eAH3B,UAKE,cAAC,GAAD,CAAW/G,MAAO,EAAKoB,MAAMpB,QAC5B4B,EAAS2F,8B,GAjBQ/D,IAAMC,W,qbCjC1C,IAAMpB,GAAYnB,IAAOC,IAAV,MAUT2F,GAAW5F,IAAOC,IAAV,MAGQ,SAAAC,GAAK,OAAIA,EAAM2F,eAAiB,YAAc,UAK9DC,G,oLACkBC,GACpB,OAAIA,EAAUjH,QAAUwB,KAAKJ,MAAMpB,Q,+BAMnC,OAAOwB,KAAKJ,MAAMpB,MAAMkH,KAAI,SAACzF,EAAME,GAAP,OAC1B,cAAC,EAAD,CAAoBF,KAAMA,EAAME,MAAOA,GAA5BF,EAAKC,W,GATE8B,IAAMC,WAcT+D,G,uKACT,IAAD,OACP,OACE,gCACE,oBAAIC,UAAU,eAAd,mBACA,cAAC,GAAD,UACE,cAAC,IAAD,CAAWJ,YAAY,YAAYvH,KAAK,OAAxC,SACG,SAAC8B,EAAUC,GAAX,OACC,eAAC,GAAD,yBACEG,IAAKJ,EAASK,UACVL,EAAS0F,gBAFf,IAGEP,eAAgBlF,EAASkF,eAH3B,UAKE,cAAC,GAAD,CAAW/G,MAAO,EAAKoB,MAAMpB,QAC5B4B,EAAS2F,4B,GAdY/D,IAAMC,W,8aCjC5C,IAAMpB,GAAYnB,IAAOC,IAAV,MAUT2F,GAAW5F,IAAOC,IAAV,MAGQ,SAAAC,GAAK,OAAIA,EAAM2F,eAAiB,OAAS,UAK1CW,G,uKAEjB,OACE,gCACA,oBAAID,UAAU,eAAd,uBACE,cAAC,GAAD,UACE,cAAC,IAAD,CAAWJ,YAAY,YAAYvH,KAAK,OAAxC,SACG,SAAC8B,EAAUC,GAAX,OACG,cAAC,GAAD,yBACEG,IAAKJ,EAASK,UACVL,EAAS0F,gBAFf,IAGEP,eAAgBlF,EAASkF,eAH3B,SAKGnF,EAAS2F,2B,GAbU/D,IAAMC,WCpB/BkE,GAAc,CACzBC,KAAM,CACJ5H,MAAO,GACP6H,QAAS,CACP,WAAY,CACVnG,GAAI,WACJ2B,MAAO,IACPO,MAAO,SACPkE,QAAS,IAEX,WAAY,CACVpG,GAAI,WACJ2B,MAAO,IACPO,MAAO,UACPkE,QAAS,IAEX,WAAY,CACVpG,GAAI,WACJ2B,MAAO,IACPO,MAAO,OACPkE,QAAS,IAEX,WAAY,CACVpG,GAAI,WACJ2B,MAAO,IACPO,MAAO,OACPkE,QAAS,IAEX,YAAa,CACXpG,GAAI,YACJoG,QAAS,IAEX,YAAa,CACXpG,GAAI,cAGRqG,YAAa,CAAC,WAAY,WAAY,WAAW,aAEnDC,aAAc,SAACtG,KACfuG,cAAe,SAACvG,EAAIkB,EAASE,EAAQO,EAAOC,MAGjC4E,GAAkB1E,IAAM2E,cAAcR,I,oEC/BtCS,GAAgB,WAC3B,IACE,IAAMC,EAASC,KAAKC,MAAMC,aAAaC,QAAQ,WAC3CJ,IACFK,KAAMC,SAASC,QAAQC,OAAvB,+BAEcR,IAEhB,MAAOS,GACPC,QAAQC,IAAI,qBAAsBF,KClBzBG,GAAG,yCAAG,WAAOC,EAAKb,GAAZ,gBAAAc,EAAA,6DACjBf,KADiB,SAEIM,KAAMO,IAAIC,EAAKb,GAFnB,cAEXe,EAFW,yBAGVA,EAAOxB,MAHG,2CAAH,wDAYHyB,GAAY,yCAAG,iCAAAF,EAAA,4DACTG,mCACIA,mCAEfV,EAAU,CACdA,QAAS,CACPW,OAAQ,mBACR,eAAgB,qCAElBC,KAAM,CACJC,SATaH,mCAUbI,SATiBJ,qCAYf1B,EAAO,CACX+B,WAAY,sBAfY,kBAmBDjB,KAAMkB,KAC3B,yCACAC,KAAGC,UAAUlC,GACbgB,GAtBsB,cAmBlBmB,EAnBkB,yBAwBjBA,EAASnC,MAxBQ,kCAyBRmB,QAAQC,IAAR,MAzBQ,0DAAH,qDCJZgB,GAAY,SAACnK,GAAD,MAAa,CACpCC,KAAMZ,EACNW,WAOWoK,GAAY,SAAC/J,GAAD,MAAa,CACpCJ,KAAMV,EACNc,WAOWgK,GAAa,SAAC9J,GAAD,MAAc,CACtCN,KAAMR,EACNc,YAOW+J,GAAc,SAAC7J,GAAD,MAAgB,CACzCR,KAAMN,EACNc,cAOW8J,GAAoB,SAACC,GAChC,gDAAO,WAAOC,GAAP,0BAAAnB,EAAA,sEAEGoB,EAFH,kDAEwDC,mBACzDH,GAHC,uDAKkBpB,GAAIsB,GALtB,cAKGnB,EALH,OAMHL,QAAQC,IAAII,GACJvJ,EAAuCuJ,EAAvCvJ,OAAQK,EAA+BkJ,EAA/BlJ,OAAQE,EAAuBgJ,EAAvBhJ,QAASE,EAAc8I,EAAd9I,UACjCgK,EAASN,GAAUnK,IACnByK,EAASL,GAAU/J,IACnBoK,EAASJ,GAAW9J,IAVjB,kBAWIkK,EAASH,GAAY7J,KAXzB,kCAaHyI,QAAQC,IAAI,QAAZ,MAbG,0DAAP,uDAkBWyB,GAAyB,SAACvB,GACrC,gDAAO,WAAOoB,GAAP,gBAAAnB,EAAA,sEAEHJ,QAAQC,IAAI,MAAOE,GAFhB,SAGkBD,GAAIC,GAHtB,cAGGE,EAHH,OAIHL,QAAQC,IAAI,cAAeI,GAJxB,kBAKIkB,GAzDazK,EAyDMuJ,EAAOvJ,OAzDD,CACpCC,KAAMX,EACNU,aAkDO,gCAOHkJ,QAAQC,IAAI,QAAZ,MAPG,kCApDgB,IAACnJ,IAoDjB,oBAAP,uDAYW6K,GAAyB,SAACxB,GACrC,gDAAO,WAAOoB,GAAP,gBAAAnB,EAAA,sEAEHJ,QAAQC,IAAI,MAAOE,GAFhB,SAGkBD,GAAIC,GAHtB,cAGGE,EAHH,OAIHL,QAAQC,IAAI,cAAeI,GAJxB,kBAKIkB,GA7DapK,EA6DMkJ,EAAOlJ,OA7DD,CACpCJ,KAAMT,EACNa,aAsDO,gCAOH6I,QAAQC,IAAI,QAAZ,MAPG,kCAxDgB,IAAC9I,IAwDjB,oBAAP,uDAYWyK,GAA0B,SAACzB,GACtC,gDAAO,WAAOoB,GAAP,gBAAAnB,EAAA,sEAEHJ,QAAQC,IAAI,MAAOE,GAFhB,SAGkBD,GAAIC,GAHtB,cAGGE,EAHH,OAIHL,QAAQC,IAAI,cAAeI,GAJxB,kBAKIkB,GAjEclK,EAiEMgJ,EAAOhJ,QAjEA,CACtCN,KAAMP,EACNa,cA0DO,gCAOH2I,QAAQC,IAAI,QAAZ,MAPG,kCA5DiB,IAAC5I,IA4DlB,oBAAP,uDAYWwK,GAA2B,SAAC1B,GACvC,gDAAO,WAAOoB,GAAP,gBAAAnB,EAAA,sEAEHJ,QAAQC,IAAI,MAAOE,GAFhB,SAGkBD,GAAIC,GAHtB,cAGGE,EAHH,OAIHL,QAAQC,IAAI,cAAeI,GAJxB,kBAKIkB,GArEehK,EAqEM8I,EAAO9I,UArEE,CACzCR,KAAML,EACNa,gBA8DO,gCAOHyI,QAAQC,IAAI,QAAZ,MAPG,kCAhEkB,IAAC1I,IAgEnB,oBAAP,uD,6BCtCauK,GA/DI,SAAC,GAAgB,IAAdhL,EAAa,EAAbA,OAAa,EACHsE,oBAAS,GADN,mBAC1B2G,EAD0B,KACjBC,EADiB,KAEjC,OACE,cAAC,IAAM1F,SAAP,UACG2F,OAAOC,KAAKpL,GAAQqL,OAAS,GAC5B,qBAAKzD,UAAU,SAAf,SACG5H,EAAOG,MAAMkH,KAAI,SAACiE,EAAOxJ,GACxB,IAAID,EAAKyJ,EAAMzJ,GAAI5B,EAAO,QAAS8C,EAAUuI,EAAMC,cAAcC,QAAShI,EAAQ8H,EAAMG,KAAMhI,EAAW6H,EAAM/K,QAAQ8G,KAAI,SAACqE,GAAD,OAAYA,EAAOD,QAAME,KAAK,MACrJ1I,EAAU2I,KAAEC,QAAQP,EAAMQ,MAAMC,QAAsC,KAA5BT,EAAMQ,MAAMC,OAAO,GAAG1C,IACpE,OACE,cAAC,IAAM7D,SAAP,UACE,cAAC6C,GAAgB2D,SAAjB,UACG,gBAAE7D,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,cAAhB,OACC,cAAC/F,EAAA,EAAD,CAAMC,MAAO,CAAC2J,SAAU,QAASxG,MAAO,QAASyG,WAAY,SAAUC,YAAa,UAApF,SACE,cAAC3J,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,WAAS,EAAd,UACE,cAACC,EAAA,EAAD,CAAKC,GAAG,OAAR,SACE,mBACEC,OAAO,SACPC,KAAMC,EACNC,IAAI,sBAHN,SAKI4I,KAAEC,QAAQP,EAAMQ,MAAMC,QAGtB,qBAAK5I,IAAKE,EAAOD,IAAI,KAFrB,cAACf,EAAA,EAAKa,IAAN,CAAUC,IAAKF,EAAQG,IAAI,SAMjC,cAACT,EAAA,EAAD,UACE,eAACN,EAAA,EAAKiB,KAAN,WACE,cAACjB,EAAA,EAAKkB,MAAN,UAAaC,IACb,cAACnB,EAAA,EAAKqB,KAAN,UACE,gCAAQD,WAId,cAACd,EAAA,EAAD,CAAKC,GAAG,OAAR,SACE,8BACGuF,EAAatG,EAAI5B,GAChB,wBAAQmM,UAAQ,EAACxE,UAAU,eAA3B,eAEA,wBAAQA,UAAU,eAAelB,QAAS,WACxC0B,EAAcvG,EAAI5B,EAAM8C,EAASE,EAAQO,EAAOC,GAChDyH,GAAYD,IAFd,8BAhCGnJ,WCsDpBuK,GAhEI,SAAC,GAAgB,IAAdhM,EAAa,EAAbA,OAAa,EACHiE,oBAAS,GADN,mBAC1B2G,EAD0B,KACjBC,EADiB,KAEjC,OACE,cAAC,IAAM1F,SAAP,UACG2F,OAAOC,KAAK/K,GAAQgL,OAAS,GAC5B,qBAAKzD,UAAU,SAAf,SACGvH,EAAOF,MAAMkH,KAAI,SAACyE,EAAOhK,GACxB,IAAID,EAAKiK,EAAMjK,GAAI5B,EAAO,QAAS8C,EAAU+I,EAAMP,cAAcC,QAAShI,EAAQsI,EAAML,KAAMhI,EAAWqI,EAAMvL,QAAQ8G,KAAI,SAACqE,GAAD,OAAYA,EAAOD,QAAME,KAAK,MACrJ1I,EAAU2I,KAAEC,QAAQC,EAAMC,QAAgC,KAAtBD,EAAMC,OAAO,GAAG1C,IACxD,OACE,cAAC,IAAM7D,SAAP,UACE,cAAC6C,GAAgB2D,SAAjB,UACG,gBAAE7D,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,cAAhB,OACC,cAAC/F,EAAA,EAAD,CAAMC,MAAO,CAAC2J,SAAU,QAASxG,MAAO,QAASyG,WAAY,SAAUC,YAAa,UAApF,SACE,cAAC3J,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,WAAS,EAAd,UACE,cAACC,EAAA,EAAD,CAAKC,GAAG,OAAR,SACE,mBACEC,OAAO,SACPC,KAAMC,EACNC,IAAI,sBAHN,SAKI4I,KAAEC,QAAQC,EAAMC,QAGhB,qBAAK5I,IAAKE,EAAOD,IAAI,KAFrB,cAACf,EAAA,EAAKa,IAAN,CAAUC,IAAK2I,EAAMC,OAAO,GAAG1C,IAAKjG,IAAI,SAM9C,cAACT,EAAA,EAAD,UACE,eAACN,EAAA,EAAKiB,KAAN,WACE,cAACjB,EAAA,EAAKkB,MAAN,CAAYjB,MAAO,CAACC,OAAQ,KAA5B,SAAmCiB,IACnC,cAACnB,EAAA,EAAKqB,KAAN,UACE,gCAAQD,WAId,cAACd,EAAA,EAAD,CAAKC,GAAG,OAAR,SACE,gCACGuF,EAAatG,EAAI5B,GAChB,wBAAQmM,UAAQ,EAACxE,UAAU,eAA3B,eAEA,wBAAQA,UAAU,eAAelB,QAAS,WACxC0B,EAAcvG,EAAI5B,EAAM8C,EAASE,EAAQO,EAAOC,GAChDyH,GAAYD,IAFd,eAKF,wBAAQrD,UAAU,eAAlB,+BArCK9F,WCmDpBwK,GA7DK,SAAC,GAAiB,IAAf/L,EAAc,EAAdA,QAAc,EACL+D,oBAAS,GADJ,mBAC5B2G,EAD4B,KACnBC,EADmB,KAEnC,OACE,cAAC,IAAM1F,SAAP,UACG2F,OAAOC,KAAK7K,GAAS8K,OAAS,GAC7B,qBAAKzD,UAAU,UAAf,SACGrH,EAAQJ,MAAMkH,KAAI,SAACqE,EAAQ5J,GAC1B,IAAID,EAAK6J,EAAO7J,GAAI5B,EAAO,SAAU8C,EAAU2I,EAAOH,cAAcC,QAAShI,EAAQkI,EAAOD,KACxFxI,EAAU2I,KAAEC,QAAQH,EAAOK,QAAiC,KAAvBL,EAAOK,OAAO,GAAG1C,IAC1D,OACE,cAAC,IAAM7D,SAAP,UACE,cAAC6C,GAAgB2D,SAAjB,UACG,gBAAE7D,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,cAAhB,OACC,cAAC/F,EAAA,EAAD,CAAMC,MAAO,CAAC2J,SAAU,QAASxG,MAAO,QAASyG,WAAY,SAAUC,YAAa,UAApF,SACE,cAAC3J,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,WAAS,EAAd,UACE,cAACC,EAAA,EAAD,CAAKC,GAAG,OAAR,SACE,mBACEC,OAAO,SACPC,KAAMC,EACNC,IAAI,sBAHN,SAKI4I,KAAEC,QAAQH,EAAOK,QAGjB,qBAAK5I,IAAKE,EAAOD,IAAI,KAFrB,cAACf,EAAA,EAAKa,IAAN,CAAUC,IAAKuI,EAAOK,OAAO,GAAG1C,IAAKjG,IAAI,SAM/C,cAACT,EAAA,EAAD,UACE,cAACN,EAAA,EAAKiB,KAAN,UACE,cAACjB,EAAA,EAAKkB,MAAN,CAAYjB,MAAO,CAACC,OAAQ,KAA5B,SAAmCiB,QAGvC,cAACb,EAAA,EAAD,CAAKC,GAAG,OAAR,SACE,gCACGuF,EAAatG,EAAI5B,GAChB,wBAAQmM,UAAQ,EAACxE,UAAU,eAA3B,eAEA,wBAAQA,UAAU,eAAelB,QAAS,WACxC0B,EAAcvG,EAAI5B,EAAM8C,EAASE,EAAQO,EAjC8C,MAkCvF0H,GAAYD,IAFd,eAKF,wBAAQrD,UAAU,eAAlB,+BAlCK9F,WCoDpByK,GA9DE,SAAC,GAAkB,IAAhBtL,EAAe,EAAfA,SAAe,EACHqD,oBAAS,GADN,mBAC1B2G,EAD0B,KACjBC,EADiB,KAEjC,OACE,8BACGC,OAAOC,KAAKnK,GAAUoK,OAAS,GAC9B,qBAAKzD,UAAU,WAAf,SACG3G,EAASd,MAAMkH,KAAI,SAACzF,EAAME,GACzB,IAAID,EAAKD,EAAKC,GAAI5B,EAAO,WAAY8C,EAAUnB,EAAK2J,cAAcC,QAAShI,EAAQ5B,EAAK6J,KAAMhI,EAAW,MAAQ7B,EAAK4K,MAAMC,aACxHxJ,EAAU2I,KAAEC,QAAQjK,EAAKmK,QAA+B,KAArBnK,EAAKmK,OAAO,GAAG1C,IACtD,OACE,cAAC,IAAM7D,SAAP,UACE,cAAC6C,GAAgB2D,SAAjB,UACG,gBAAE7D,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,cAAhB,OACC,cAAC/F,EAAA,EAAD,CAAMC,MAAO,CAAC2J,SAAU,QAASxG,MAAO,QAASyG,WAAY,SAAUC,YAAa,UAApF,SACE,cAAC3J,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,WAAS,EAAd,UACE,cAACC,EAAA,EAAD,CAAKC,GAAG,OAAR,SACE,mBACEC,OAAO,SACPC,KAAMC,EACNC,IAAI,sBAHN,SAKI4I,KAAEC,QAAQjK,EAAKmK,QAGf,qBAAK5I,IAAKE,EAAOD,IAAI,KAFrB,cAACf,EAAA,EAAKa,IAAN,CAAUC,IAAKvB,EAAKmK,OAAO,GAAG1C,IAAKjG,IAAI,SAM7C,cAACT,EAAA,EAAD,UACE,eAACN,EAAA,EAAKiB,KAAN,WACE,cAACjB,EAAA,EAAKkB,MAAN,CAAYjB,MAAO,CAACC,OAAQ,KAA5B,SAAmCiB,IACnC,cAACnB,EAAA,EAAKqB,KAAN,UAAYD,SAGhB,cAACd,EAAA,EAAD,CAAKC,GAAG,OAAR,SACE,gCACGuF,EAAatG,EAAI5B,GAChB,wBAAQmM,UAAQ,EAACxE,UAAU,eAA3B,eAEA,wBAAQA,UAAU,eAAelB,QAAS,WACxC0B,EAAcvG,EAAI5B,EAAM8C,EAASE,EAAQO,EAAOC,GAChDyH,GAAYD,IAFd,eAKF,wBAAQrD,UAAU,eAAlB,+BAnCK9F,WCkEpB4K,GA1EM,SAACnL,GAAW,IACvBoL,EAAoDpL,EAApDoL,SAAUpD,EAA0ChI,EAA1CgI,OAAQqD,EAAkCrL,EAAlCqL,YAAaC,EAAqBtL,EAArBsL,iBAC/B7M,EAAsCuJ,EAAtCvJ,OAAQK,EAA8BkJ,EAA9BlJ,OAAQE,EAAsBgJ,EAAtBhJ,QAASU,EAAasI,EAAbtI,SAEjC,OACE,eAAC,IAAMuE,SAAP,WACE,sBAAKoC,UAAU,iBAAf,WACIgE,KAAEC,QAAQ7L,EAAOG,QACjB,wBACEyH,UAAS,UACc,WAArBiF,EAAgC,aAAe,OAEjDnG,QAAS,kBAAMkG,EAAY,WAJ7B,oBASAhB,KAAEC,QAAQxL,EAAOF,QACjB,wBACEyH,UAAS,UACc,WAArBiF,EAAgC,aAAe,OAEjDnG,QAAS,kBAAMkG,EAAY,WAJ7B,qBASAhB,KAAEC,QAAQtL,EAAQJ,QAClB,wBACEyH,UAAS,UACc,YAArBiF,EAAiC,aAAe,OAElDnG,QAAS,kBAAMkG,EAAY,YAJ7B,sBASAhB,KAAEC,QAAQ5K,EAASd,QACnB,wBACEyH,UAAS,UACc,aAArBiF,EAAkC,aAAe,OAEnDnG,QAAS,kBAAMkG,EAAY,aAJ7B,0BAWJ,qBAAKhF,UAAS,UAA0B,WAArBiF,EAAgC,GAAK,QAAxD,SACGxM,GAAU,cAAC,GAAD,CAAYL,OAAQA,MAEjC,qBAAK4H,UAAS,UAA0B,WAArBiF,EAAgC,GAAK,QAAxD,SACGxM,GAAU,cAAC,GAAD,CAAYA,OAAQA,MAEjC,qBAAKuH,UAAS,UAA0B,YAArBiF,EAAiC,GAAK,QAAzD,SACGtM,GAAW,cAAC,GAAD,CAAaA,QAASA,MAEpC,qBAAKqH,UAAS,UAA0B,aAArBiF,EAAkC,GAAK,QAA1D,SACG5L,GAAY,cAAC,GAAD,CAAUA,SAAUA,OAGjC2K,KAAEC,QAAQtC,EAAOsD,MACjBjB,KAAEC,QAAQtC,EAAOsD,GAAkB3M,OACnC,qBAAK0H,UAAU,YAAf,SACE,cAACkF,GAAA,EAAD,CAAQC,QAAQ,OAAO9M,KAAK,SAASyG,QAAS,kBAAMiG,EAASE,IAA7D,6B,UChCKG,GAtCI,SAACzL,GAAW,IAAD,EACQ+C,mBAAS,IADjB,mBACrBkG,EADqB,KACTyC,EADS,OAEI3I,mBAAS,IAFb,mBAErB4I,EAFqB,KAEXC,EAFW,KAmB5B,OACE,8BACE,eAACC,GAAA,EAAD,CAAMxH,SAZW,SAACyH,GACpBA,EAAMC,iBACoB,KAAtB9C,EAAW+C,QACbJ,EAAY,IACZ5L,EAAMiM,aAAahD,IAEnB2C,EAAY,gCAMZ,UACGD,GAAY,mBAAGtF,UAAU,WAAb,SAAyBsF,IACtC,cAACE,GAAA,EAAKK,MAAN,CAAYC,UAAU,iBAAtB,SACE,cAACN,GAAA,EAAKO,QAAN,CACE1N,KAAK,SACLwL,KAAK,aACL5F,MAAO2E,EACP9C,YAAY,eACZ5B,SAzBgB,SAACuH,GACzB,IAAM7C,EAAa6C,EAAMxK,OAAOgD,MAChCoH,EAAczC,IAwBNoD,aAAa,gBC3BVC,GAJA,WACb,OAAO,oBAAIjG,UAAU,eAAetF,MAAO,CAACwL,aAAc,OAAnD,qBCoBMC,GApBA,SAACxM,GAAW,IAAD,EACT+C,mBAASe,SAAS2I,cAAc,QAAxCC,EADiB,oBAElBC,EAAS7I,SAAS8I,cAAc,WAgBtC,OAdA/I,qBAAU,WACR8I,EAAOE,YAAYH,GAAMI,UAAUC,IAAI,aACtC,CAACJ,EAAQD,IAEZ7I,qBAAU,WACJ7D,EAAMgN,MACRL,EAAOG,UAAUG,OAAO,QACxBnJ,SAASoJ,KAAKJ,UAAUC,IAAI,iBAE5BJ,EAAOG,UAAUC,IAAI,QACrBjJ,SAASoJ,KAAKJ,UAAUG,OAAO,kBAEhC,CAACN,EAAQ3M,EAAMgN,OAEXG,IAASC,aAAapN,EAAMqN,SAAUX,ICkEhCY,gBATS,SAAC/O,GACvB,MAAO,CACLE,OAAQF,EAAME,OACdK,OAAQP,EAAMO,OACdE,QAAST,EAAMS,QACfU,SAAUnB,EAAMmB,YAIL4N,EAzEG,SAACtN,GAAW,IAAD,EACO+C,oBAAS,GADhB,mBACpBwK,EADoB,KACTC,EADS,OAEqBzK,mBAAS,UAF9B,mBAEpBuI,EAFoB,KAEFmC,EAFE,KAGnBC,EAAmC1N,EAAnC0N,eAAgBC,EAAmB3N,EAAnB2N,eAElB1B,EAAY,yCAAG,WAAOhD,GAAP,UAAAlB,EAAA,yDACnByF,GAAa,GACRE,IAFc,0CAGLC,IAHK,uDAIFhG,QAAQC,IAAR,MAJE,QAMnB5H,EAAMkJ,SAASF,GAAkBC,IAAa2E,MAAK,WACjDJ,GAAa,MAPI,yDAAH,sDAWZpC,EAAQ,yCAAG,WAAO1M,GAAP,wBAAAqJ,EAAA,yDACPmB,EAAgDlJ,EAAhDkJ,SAAUzK,EAAsCuB,EAAtCvB,OAAQK,EAA8BkB,EAA9BlB,OAAQE,EAAsBgB,EAAtBhB,QAASU,EAAaM,EAAbN,SAC3C8N,GAAa,GACRE,IAHU,0CAIDC,IAJC,uDAKEhG,QAAQC,IAAR,MALF,aAOPlJ,EAPO,OAQR,WARQ,QAWR,WAXQ,QAcR,YAdQ,QAiBR,aAjBQ,0CASLwK,EAASG,GAAuB5K,EAAOE,OATlC,6DAYLuK,EAASI,GAAuBxK,EAAOH,OAZlC,6DAeLuK,EAASK,GAAwBvK,EAAQL,OAfpC,6DAkBLuK,EAASM,GAAyB9J,EAASf,OAlBtC,4CAsBf6O,GAAa,GAtBE,yDAAH,sDA4BRxF,EAAS,CAAEvJ,OAD6BuB,EAAtCvB,OACiBK,OADqBkB,EAA9BlB,OACiBE,QADagB,EAAtBhB,QACkBU,SADIM,EAAbN,UAIjC,OADAiI,QAAQC,IAAI,OAEV,cAAC,IAAM3D,SAAP,UACE,gCACE,cAAC,GAAD,IACA,cAAC,GAAD,CAAYgI,aAAcA,IAC1B,cAAC,GAAD,CAAQe,KAAMO,EAAd,wBACA,cAAC,GAAD,CACEvF,OAAQA,EACRoD,SAAUA,EACVC,YAfY,SAACwC,GAAeJ,EAAoBI,IAgBhDvC,iBAAkBA,YCnBbwC,G,kDA/CX,WAAY9N,GAAQ,IAAD,8BACjB,cAAMA,IAIR2N,eALmB,wBAKF,mCAAA5F,EAAA,+EAEOE,KAFP,OAERD,EAFQ,sDAGEL,QAAQC,IAAR,MAHF,OAIVI,IAEG+F,GAFM,EAIN/F,GAFA+F,aACAC,EAHK,EAGLA,WAEJ5G,aAAa6G,QAAQ,SAAU/G,KAAKwB,UAAUqF,IAC9C3G,aAAa6G,QAAQ,eAAe,IAAIC,MAAOC,UAAyB,IAAbH,GACvD,EAAKI,QAAQ,EAAKC,SAAS,CAAED,QAAQ,KAX9B,yDALE,EAoBnBV,eAAiB,WACb,IAAIY,EACJ,IAAMA,EAAapH,KAAKC,MAAMC,aAAaC,QAAQ,gBACnD,MAAMK,GAAS4G,EAAa,IAC5B,IAAMC,GAAc,IAAIL,MAAOC,UAE/B,OADGI,GAAeD,GAAc,EAAKF,QAAQ,EAAKC,SAAS,CAAED,QAAQ,IAC9DG,EAAcD,GAxBvB,EAAK/P,MAAQ,CAAE6P,QAAQ,GAFN,E,qDA+Bf,OADAzG,QAAQC,IAAIxH,KAAKJ,OACbI,KAAKsN,iBASP,qBAAKrH,UAAU,iBAAf,SACE,cAAC,GAAD,CAA2CqH,eAAgBtN,KAAKsN,eAAgBC,eAAgBvN,KAAKuN,gBAArG,WAAmB,IAAIO,MAAOC,eAThC/N,KAAKuN,iBAEH,qBAAKtH,UAAU,iBAAf,6B,GAnCgBjE,IAAMC,W,2FCOlC,IAAMpB,GAAYnB,IAAOC,IAAV,MAIT6F,G,uKACM,IAAD,EACyDxF,KAAKJ,MAA7DgG,EADD,EACCA,OAAQwI,EADT,EACSA,QAASjO,EADlB,EACkBA,MAAOgD,EADzB,EACyBA,aAAcC,EADvC,EACuCA,cACxC5E,EAAQoH,EAAOU,QAAQZ,KAAI,SAAA2I,GAAM,OAAID,EAAQC,MACnD,OAAO,cAAC,GAAD,CAAQzI,OAAQA,EAAQpH,MAAOA,EAAO2B,MAAOA,EAAOgD,aAAcA,EAAcC,cAAeA,Q,GAJlFpB,IAAMsM,eAQxBC,G,4MAEJpQ,MAAQ,EAAKqQ,QAAQpI,K,EAwCrBqI,eAAiB,SAAAnL,GACf,IAAMoL,EAAa,IAAIC,WACvBD,EAAWE,WAAWtL,EAAEpC,OAAO2N,MAAM,GAAI,SACzCH,EAAWI,OAAS,SAAAxL,GAClB,IAAMyL,EAAWjI,KAAKC,MAAMzD,EAAEpC,OAAO0G,QAErC,GAAK,gBAAiBmH,GAAY,UAAWA,GAAY,YAAaA,GACnE,cAAeA,EAAS1I,SAAW,cAAe0I,EAAS1I,SAC3D,OAAQ0I,EAAS1I,QAAQ,cAAqD,cAArC0I,EAAS1I,QAAQ,aAAanG,IACvE,YAAa6O,EAAS1I,QAAQ,cAAgB2I,MAAMC,QAAQF,EAAS1I,QAAQ,aAAaC,UAC1F,OAAQyI,EAAS1I,QAAQ,cAAqD,cAArC0I,EAAS1I,QAAQ,aAAanG,GAJ1E,CAUA,IAAIgP,GAAkB,EAChBC,EAAqB,CAAC,KAAM,QAAS,QAAS,WAMpD,GALA3F,OAAOC,KAAKsF,EAAS1I,SAAS+I,SAAQ,SAASC,GAC7C,GAAIH,GAA2B,cAARG,GAA+B,cAARA,EAA9C,CACA,IAAMC,EAAa9F,OAAOC,KAAKsF,EAAS1I,QAAQgJ,IAChDH,EAAkBI,EAAW5F,SAAWyF,EAAmBzF,QAAU4F,EAAWC,OAAM,SAASC,EAAGC,GAAK,OAAOD,IAAML,EAAmBM,UAErIP,EAAJ,CAMA,IAAM3I,EAAcwI,EAASxI,YACzBmJ,EAAalG,OAAOC,KAAKsF,EAAS1I,SAGtC,GAFAqJ,EAAWC,OAAOD,EAAWE,QAAQ,aAAc,GACnDF,EAAWC,OAAOD,EAAWE,QAAQ,aAAc,GAC9CrJ,EAAYmD,SAAWgG,EAAWhG,QAAUnD,EAAYgJ,OAAM,SAAAM,GAAE,OAAIH,EAAWI,SAASD,MAA7F,CAMA,IAAIE,GAAgB,EACdC,EAAmB,CAAC,KAAM,OAAQ,UAAW,SAAU,QAAS,YAMtE,GALAxG,OAAOC,KAAKsF,EAASvQ,OAAO4Q,SAAQ,SAASC,GAC3C,GAAIU,EAAJ,CACA,IAAME,EAAWzG,OAAOC,KAAKsF,EAASvQ,MAAM6Q,IAC5CU,EAAgBE,EAASvG,SAAWsG,EAAiBtG,QAAUuG,EAASV,OAAM,SAASC,EAAGC,GAAK,OAAOD,IAAMQ,EAAiBP,UAE3HM,EAAJ,CAMA,IAAMG,EAAW1G,OAAOC,KAAKsF,EAASvQ,OAClC8H,EAAU,GACdkD,OAAOC,KAAKsF,EAAS1I,SAAS+I,SAAQ,SAASC,GAClC,cAARA,IACH/I,EAAUA,EAAQ6J,OAAOpB,EAAS1I,QAAQgJ,GAAK/I,aAE5CA,EAAQoD,SAAWwG,EAASxG,QAAUpD,EAAQiJ,OAAM,SAAAM,GAAE,OAAIK,EAASJ,SAASD,OAMjF,EAAK5B,SAASc,GACdxH,QAAQC,IAAI,EAAKrJ,QANfoJ,QAAQC,IAAI,uCAZZD,QAAQC,IAAI,2CAbZD,QAAQC,IAAI,6CAVZD,QAAQC,IAAI,6CAbZD,QAAQC,IAAI,mC,EA0DlB4I,WAAa,SAAClQ,EAAImQ,EAAQC,GACxB,IAAMC,EAAcvB,MAAMwB,KAAKF,EAAKhK,SACpCiK,EAAYZ,OAAOU,EAAOlQ,MAAO,GACjC,IAAMsQ,EAAO,2BACRH,GADQ,IAEXhK,QAASiK,IAGLG,EAAW,EAAKvS,MAAMK,MACtBmS,EAAWnH,OAAOC,KAAKiH,GAAUE,QAAO,SAACC,EAAQxB,GAIrD,OAHIA,IAAQnP,IACV2Q,EAAOxB,GAAOqB,EAASrB,IAElBwB,IACN,IAEG9B,EAAQ,2BACT,EAAK5Q,OADI,IAEZK,MAAOmS,EACPtK,QAAQ,2BACH,EAAKlI,MAAMkI,SADT,kBAEJoK,EAAQvQ,GAAKuQ,MAIlB,EAAKxC,SAASc,I,EAGhB+B,gBAAkB,SAAC5Q,EAAI6Q,EAAUC,GAC/B,IAAMC,EAAY,EAAK9S,MAAMkI,QAAQnG,GAC/BgR,EAAS,2BACVD,GADU,IAEbpP,MAAOkP,EACP3O,MAAO4O,IAEHjC,EAAQ,2BACT,EAAK5Q,OADI,IAEZkI,QAAQ,2BACH,EAAKlI,MAAMkI,SADT,kBAEJnG,EAAKgR,MAGV,EAAKjD,SAASc,I,EAGhBoC,UAAY,SAACjR,GACX,IAAMkR,EAAiBpC,MAAMwB,KAAK,EAAKrS,MAAMoI,aAC7C6K,EAAezB,OAAOyB,EAAexB,QAAQ1P,GAAK,GAElD,IAAMmR,EAAa,EAAKlT,MAAMkI,QACxBiL,EAAa9H,OAAOC,KAAK4H,GAAYT,QAAO,SAACC,EAAQxB,GAIzD,OAHIA,IAAQnP,IACV2Q,EAAOxB,GAAOgC,EAAWhC,IAEpBwB,IACN,IAEG9B,EAAQ,2BACT,EAAK5Q,OADI,IAEZkI,QAASiL,EACT/K,YAAa6K,IAEf,EAAKnD,SAASc,I,EAGhBwC,UAAY,SAAA3J,GAAW,IAAD,EACZ4J,EAA2C5J,EAA3C4J,YAAanB,EAA8BzI,EAA9ByI,OAAQtQ,EAAsB6H,EAAtB7H,YAAazB,EAASsJ,EAATtJ,KAE1C,GAAKkT,IACDA,EAAY3L,cAAgBwK,EAAOxK,aAAe2L,EAAYrR,QAAUkQ,EAAOlQ,OAEnF,GAAa,WAAT7B,EAAJ,CAaA,IAAMgS,EAAO,EAAKnS,MAAMkI,QAAQgK,EAAOxK,aACjC4L,EAAU,EAAKtT,MAAMkI,QAAQmL,EAAY3L,aAE/C,GAAgC,cAA5B2L,EAAY3L,YAKhB,GAAIyK,IAASmB,EAAb,CAuBA,IAAMlB,EAAcvB,MAAMwB,KAAKF,EAAKhK,SACpCiK,EAAYZ,OAAOU,EAAOlQ,MAAO,GACjC,IAAMsQ,EAAO,2BACRH,GADQ,IAEXhK,QAASiK,IAGLmB,EAAiB1C,MAAMwB,KAAKiB,EAAQnL,SAC1CoL,EAAe/B,OAAO6B,EAAYrR,MAAO,EAAGJ,GAC5C,IAAM4R,EAAU,2BACXF,GADW,IAEdnL,QAASoL,IAGL3C,EAAQ,2BACT,EAAK5Q,OADI,IAEZkI,QAAQ,2BACH,EAAKlI,MAAMkI,SADT,uBAEJoK,EAAQvQ,GAAKuQ,GAFT,cAGJkB,EAAWzR,GAAKyR,GAHZ,MAMT,EAAK1D,SAASc,OA7Cd,CACE,IAAM6C,EAAa5C,MAAMwB,KAAKF,EAAKhK,SACnCsL,EAAWjC,OAAOU,EAAOlQ,MAAO,GAChCyR,EAAWjC,OAAO6B,EAAYrR,MAAO,EAAGJ,GAExC,IAAM0Q,EAAO,2BACRH,GADQ,IAEXhK,QAASsL,IAGL7C,EAAQ,2BACT,EAAK5Q,OADI,IAEZkI,QAAQ,2BACH,EAAKlI,MAAMkI,SADT,kBAEJoK,EAAQvQ,GAAKuQ,MAIlB,EAAKxC,SAASc,QAtBd,EAAKqB,WAAWrQ,EAAasQ,EAAQC,OAjBvC,CACE,IAAMc,EAAiBpC,MAAMwB,KAAK,EAAKrS,MAAMoI,aAC7C6K,EAAezB,OAAOU,EAAOlQ,MAAO,GACpCiR,EAAezB,OAAO6B,EAAYrR,MAAO,EAAGJ,GAE5C,IAAMgP,EAAQ,2BACT,EAAK5Q,OADI,IAEZoI,YAAa6K,IAEf,EAAKnD,SAASc,K,kEA3LG,IAAD,OAClB/O,KAAKwO,QAAQhI,aAAe,SAACtG,EAAI5B,GAC/B,OAAG4B,KAAM,EAAK/B,MAAMK,OACX,EAAKL,MAAMK,MAAM0B,GAAjB,OAAiC5B,GAI5C0B,KAAKwO,QAAQ/H,cAAgB,SAACvG,EAAI5B,EAAM8C,EAASE,EAAQO,EAAOC,GAC9D,IAAG,EAAK0M,QAAQhI,aAAatG,EAAI5B,GAAjC,CACA,IAAMqS,EAAQ,2BACT,EAAKxS,MAAMK,OADF,kBAEX0B,EAAK,CACJA,GAAIA,EACJ5B,KAAMA,EACN8C,QAASA,EACTE,OAAQA,EACRO,MAAOA,EACPC,SAAUA,KAGR+P,EAAa7C,MAAMwB,KAAK,EAAKrS,MAAMkI,QAAQ,aAAaC,SAAS6J,OAAOjQ,GACxE4R,EAAW,2BACZ,EAAK3T,MAAMkI,QAAQ,cADP,IAEfC,QAASuL,IAEL9C,EAAQ,2BACT,EAAK5Q,OADI,IAEZK,MAAOmS,EACPtK,QAAQ,2BACH,EAAKlI,MAAMkI,SADT,IAEL,YAAayL,MAGjB,EAAK7D,SAASc,O,+BAsNR,IAAD,OACP,OACE,gCACE,wBACEzQ,KAAK,SACLyG,QAAS,WACP,IAAMgN,EAAE,kBAAa,IAAIjE,MAAOC,WAC1BqD,EAAiBpC,MAAMwB,KAAK,EAAKrS,MAAMoI,aAAa4J,OAAO4B,GAC3DhD,EAAQ,2BACT,EAAK5Q,OADI,IAEZoI,YAAa6K,IAEfrC,EAAQ,QAAYgD,GAAM,CACxB7R,GAAI6R,EACJlQ,MAAO,MACPO,MAAO,UACPkE,QAAS,IAEX,EAAK2H,SAASc,IAflB,2BAoBA,mBACE5N,KAAI,uCAAkC6H,mBACpClC,KAAKwB,UAAUtI,KAAK7B,SAEtB6T,SAAS,gBAJX,4BASA,gCACE,uBAAOC,QAAQ,kBAAf,8BACA,uBAAO3T,KAAK,OAAO4B,GAAG,kBAAkB4J,KAAK,kBAAkBoI,OAAO,QAAQ/N,SAAUnE,KAAKyO,oBAE/F,eAAC,IAAD,CAAiB8C,UAAWvR,KAAKuR,UAAjC,UACE,eAAC,GAAD,WACE,cAAC,GAAD,IACA,cAAC,IAAD,CAAW1L,YAAY,QAAQsM,UAAU,aAAa7T,KAAK,SAA3D,SACG,SAAA8B,GAAQ,OACP,eAAC,GAAD,2BACMA,EAAS0F,gBADf,IAEEtF,IAAKJ,EAASK,SAFhB,UAIG,EAAKtC,MAAMoI,YAAYb,KAAI,SAAC0M,EAAUjS,GACrC,IAAMyF,EAAS,EAAKzH,MAAMkI,QAAQ+L,GAClC,OACE,cAAC,GAAD,CAEExM,OAAQA,EACRwI,QAAS,EAAKjQ,MAAMK,MACpB2B,MAAOA,EACPgD,aAAc,EAAK2N,gBACnB1N,cAAe,EAAK+N,WALfvL,EAAO1F,OASjBE,EAAS2F,sBAKlB,eAAC,GAAD,WACE,cAAC,GAAD,CAAUvH,MAASwB,KAAK7B,MAAMkI,QAAQ,aAAaC,QAAQZ,KAAI,SAAA2I,GAAM,OAAI,EAAKlQ,MAAMK,MAAM6P,QAC1F,cAAC,GAAD,iB,GA5TWrM,IAAMC,WAAvBsM,GACG8D,YAAc3L,GAmUR6H,U,aClVfxB,IAASuF,OACP,eAAC5L,GAAgB6L,SAAjB,CAA0BrO,MAASiC,GAAnC,UACE,oBAAIF,UAAU,eAAd,0DACA,cAAC,IAAD,CAAU9G,MAAOA,EAAjB,SACE,cAAC,GAAD,SAGJuE,SAAS8O,eAAe,U","file":"static/js/main.128222bf.chunk.js","sourcesContent":["export const SET_TRACKS = 'SET_TRACKS';\r\nexport const ADD_TRACKS = 'ADD_TRACKS';\r\nexport const SET_ALBUMS = 'SET_ALBUMS';\r\nexport const ADD_ALBUMS = 'ADD_ALBUMS';\r\nexport const SET_ARTISTS = 'SET_ARTISTS';\r\nexport const ADD_ARTISTS = 'ADD_ARTISTS';\r\nexport const SET_PLAYLIST = 'SET_PLAYLIST';\r\nexport const ADD_PLAYLIST = 'ADD_PLAYLIST';","import { SET_TRACKS, ADD_TRACKS } from '../utils/constants';\r\n\r\nconst tracksReducer = (state = {}, action) => {\r\n  const { tracks } = action;\r\n  switch (action.type) {\r\n    case SET_TRACKS:\r\n      return tracks;\r\n    case ADD_TRACKS:\r\n      return {\r\n        ...state,\r\n        next: tracks.next,\r\n        items: [...state.items, ...tracks.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tracksReducer;","import { SET_ALBUMS, ADD_ALBUMS } from '../utils/constants';\r\n\r\nconst albumsReducer = (state = {}, action) => {\r\n  const { albums } = action;\r\n  switch (action.type) {\r\n    case SET_ALBUMS:\r\n      return albums;\r\n    case ADD_ALBUMS:\r\n      return {\r\n        ...state,\r\n        next: albums.next,\r\n        items: [...state.items, ...albums.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default albumsReducer;","import { SET_ARTISTS, ADD_ARTISTS } from '../utils/constants';\r\n\r\nconst artistsReducer = (state = {}, action) => {\r\n  const { artists } = action;\r\n  switch (action.type) {\r\n    case SET_ARTISTS:\r\n      return artists;\r\n    case ADD_ARTISTS:\r\n      return {\r\n        ...state,\r\n        next: artists.next,\r\n        items: [...state.items, ...artists.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default artistsReducer;","import { SET_PLAYLIST, ADD_PLAYLIST } from '../utils/constants';\r\n\r\nconst playlistReducer = (state = {}, action) => {\r\n  const { playlists } = action;\r\n  switch (action.type) {\r\n    case SET_PLAYLIST:\r\n      return playlists;\r\n    case ADD_PLAYLIST:\r\n      return {\r\n        ...state,\r\n        next: playlists.next,\r\n        items: [...state.items, ...playlists.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default playlistReducer;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport tracksReducer from '../sidebar/reducers/tracks';\r\nimport albumsReducer from '../sidebar/reducers/albums';\r\nimport artistsReducer from '../sidebar/reducers/artists';\r\nimport playlistReducer from '../sidebar/reducers/playlist';\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    tracks: tracksReducer,\r\n    albums: albumsReducer,\r\n    artists: artistsReducer,\r\n    playlist: playlistReducer\r\n  }),\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","export default __webpack_public_path__ + \"static/media/music.b2fe7d4d.jpeg\";","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { Card, Container, Row, Col } from 'react-bootstrap';\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport music from '../../sidebar/images/music.jpeg';\r\n\r\nconst ItemContent = styled.div`\r\n  margin-bottom: 8px;\r\n  background-color: ${props => (props.isDragging ? 'lightgreen' : 'none')};\r\n`;\r\n\r\nexport default class Item extends React.Component {\r\n    render() {\r\n      return (\r\n        <Draggable draggableId={this.props.item.id} index={this.props.index}>\r\n          {(provided, snapshot) => (\r\n            <ItemContent\r\n              {...provided.draggableProps}\r\n              {...provided.dragHandleProps}\r\n              ref={provided.innerRef}\r\n              isDragging={snapshot.isDragging}\r\n            >\r\n              <Card style={{ margin: 0 }}>\r\n                <Container>\r\n                  <Row noGutters>\r\n                    <Col xs=\"auto\">\r\n                      <a\r\n                        target=\"_blank\"\r\n                        href={this.props.item.songURL}\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        {this.props.item.imgURL ? (\r\n                          <Card.Img src={this.props.item.imgURL} alt=\"\" />\r\n                        ) : (\r\n                          <img src={music} alt=\"\" />\r\n                        )}\r\n                      </a>\r\n                    </Col>\r\n                    <Col>\r\n                      <Card.Body>\r\n                        <Card.Title>{this.props.item.title}</Card.Title>\r\n                        {this.props.item.subtitle &&\r\n                          <Card.Text>\r\n                            <small>\r\n                              {this.props.item.subtitle}\r\n                            </small>\r\n                          </Card.Text>\r\n                        }\r\n                      </Card.Body>\r\n                    </Col>\r\n                  </Row>\r\n                </Container>\r\n              </Card>\r\n            </ItemContent>\r\n          )}\r\n        </Draggable>\r\n      );\r\n    }\r\n  }","export default __webpack_public_path__ + \"static/media/tool.f60e7b86.svg\";","export default __webpack_public_path__ + \"static/media/palette.c614a1c8.svg\";","import React, { useState, useRef, useEffect } from 'react';\r\nimport { Image, Dropdown, ButtonGroup } from 'react-bootstrap'\r\nimport styled from 'styled-components';\r\nimport tool from '../imgs/tool.svg'\r\nimport palette from '../imgs/palette.svg'\r\nimport '../tierlist-styles.css'\r\n\r\nconst TitleStyle = styled.h3`\r\n    background-color: ${props => props.color};\r\n    padding: 8px;\r\n    margin-bottom: 0;\r\n    display: flex;\r\n    max-width: 21rem;\r\n    user-select: none;\r\n`;\r\n\r\n// how tf do i make this full height when editing\r\nconst InputStyle = styled.textarea`\r\n    flex-grow: 1;\r\n    overflow: hidden;\r\n    word-break: break-all;\r\n    min-height: 40px;\r\n    max-width: 17rem;\r\n    height: 40px;\r\n    resize: both;\r\n`;\r\n\r\nconst ButtonStyle = styled.button`\r\n    width: 40px;\r\n    min-width: 40px;\r\n    height: 40px;\r\n    float: right;\r\n    margin-left: 8px;\r\n    outline: none;\r\n    background: transparent no-repeat;\r\n    border: none;\r\n    border-radius: 50%;\r\n`;\r\n\r\nconst Title = props => {\r\n  const inputRef = useRef(null);\r\n  const [id, setID] = useState(props.colData.id);\r\n  const [title, setTitle] = useState(props.colData.title);\r\n  const [color, setColor] = useState(props.colData.color);\r\n  const [inputVisible, setInputVisible] = useState(false);\r\n  const update = props.updateHeader;\r\n  const deleteHandler = props.deleteHandler;\r\n\r\n  function onClickOutSide(e) {\r\n    if (inputRef.current && !inputRef.current.contains(e.target)) setInputVisible(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (inputVisible) document.addEventListener(\"mousedown\", onClickOutSide);\r\n    return () => { document.removeEventListener(\"mousedown\", onClickOutSide); };  //apparently happens when the button is clicked as well\r\n  });\r\n\r\n  useEffect(() => {\r\n    setID(props.colData.id);\r\n    setTitle(props.colData.title);\r\n    setColor(props.colData.color);\r\n  }, [props.colData]);\r\n\r\n  return (\r\n    <TitleStyle color={color}>\r\n      <React.Fragment>\r\n        {inputVisible ? (\r\n          <form style={{width: \"100%\", display: \"flex\", alignItems: \"center\"}} onSubmit={() => setInputVisible(false)} ref={inputRef}>\r\n            <InputStyle\r\n              value={title}\r\n              onChange={e => {\r\n                setTitle(e.target.value);\r\n                update(id, e.target.value, color);\r\n              }}\r\n            />\r\n            <Dropdown as={ButtonGroup} drop=\"right\">\r\n              <Dropdown.Toggle id='color-toggle'>\r\n                <Image src={palette} fluid alt='colors' style={{width: \"100%\", height: \"100%\"}}/>\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item style={{backgroundColor: \"gray\"}} onClick={() => { setColor('gray'); update(id, title, 'gray'); }}>Gray</Dropdown.Item>\r\n                <Dropdown.Item style={{backgroundColor: \"blue\"}} onClick={() => { setColor('blue'); update(id, title, 'blue'); }}>Blue</Dropdown.Item>\r\n                <Dropdown.Item style={{backgroundColor: \"purple\"}} onClick={() => { setColor('purple'); update(id, title, 'purple'); }}>Purple</Dropdown.Item>\r\n                <Dropdown.Divider />\r\n                <Dropdown.Item style={{backgroundColor: \"#1DB954\"}} onClick={() => { setColor('#1DB954'); update(id, title, '#1DB954'); }}>Default</Dropdown.Item>\r\n                <Dropdown.Divider />\r\n                <Dropdown.Item onClick={() => { deleteHandler(id); }}>DELETE THIS</Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </form>\r\n        ) : (\r\n          <div style={{width: \"100%\", display: \"flex\", alignItems: \"center\"}}>\r\n            <div style={{color: \"white\", textShadow: \"0 0 4px black\", wordBreak: \"break-all\", flexGrow: \"1\", overflow: \"hidden\"}}>{title}</div>\r\n            <ButtonStyle onClick={() => setInputVisible(true)}>\r\n              <Image src={tool} fluid alt='settings' style={{width: \"100%\", height: \"100%\"}}/>\r\n            </ButtonStyle> \r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    </TitleStyle>\r\n  );\r\n};\r\n\r\nexport default Title; ","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport Item from './Item';\r\nimport Title from './Title'\r\n\r\nconst Container = styled.div`\r\n  margin: 8px;\r\n  border: 1px solid #1DB954;\r\n  background-color: none;\r\n  border-radius: 2px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ItemList = styled.div`\r\n  padding: 8px;\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${props => props.isDraggingOver ? 'lightgrey' : 'none'};\r\n  flex-grow: 1;\r\n  min-width: 12rem;\r\n  min-height: 25rem;\r\n`;\r\n\r\nclass InnerList extends React.Component {\r\n  shouldComponentUpdate(nextProps) {\r\n    if (nextProps.items === this.props.items) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  render() {\r\n    return this.props.items.map((item, index) => (\r\n      <Item key={item.id} item={item} index={index} />\r\n    ));\r\n  }\r\n}\r\n\r\nexport default class Column extends React.Component {\r\n  render() {\r\n    return (\r\n      <Draggable draggableId={this.props.column.id} index={this.props.index}>\r\n        {provided => (\r\n          <Container {...provided.draggableProps} ref={provided.innerRef}>\r\n            <div {...provided.dragHandleProps}>\r\n              <Title colData={this.props.column} updateHeader={this.props.updateHeader} deleteHandler={this.props.deleteHandler} />\r\n            </div>\r\n            <Droppable droppableId={this.props.column.id} type=\"item\">\r\n              {(provided, snapshot) => (\r\n                <ItemList\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  isDraggingOver={snapshot.isDraggingOver}\r\n                >\r\n                  <InnerList items={this.props.items} />\r\n                  {provided.placeholder}\r\n                </ItemList>\r\n              )}\r\n            </Droppable>\r\n          </Container>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport Item from './Item';\r\n\r\nconst Container = styled.div`\r\n  margin: 8px;\r\n  border: 1px solid #1DB954;\r\n  background-color: none;\r\n  border-radius: 2px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 21.125rem;\r\n`;\r\n\r\nconst ItemList = styled.div`\r\n  padding: 8px;\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${props => props.isDraggingOver ? 'lightgrey' : 'none'};\r\n  flex-grow: 1;\r\n  min-height: 16rem;\r\n`;\r\n\r\nclass InnerList extends React.Component {\r\n  shouldComponentUpdate(nextProps) {\r\n    if (nextProps.items === this.props.items) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  render() {\r\n    return this.props.items.map((item, index) => (\r\n      <Item key={item.id} item={item} index={index} />\r\n    ));\r\n  }\r\n}\r\n\r\nexport default class ItemPool extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"main-heading\">Items</h1>\r\n        <Container>\r\n          <Droppable droppableId=\"item-pool\" type=\"item\">\r\n            {(provided, snapshot) => (\r\n              <ItemList\r\n                ref={provided.innerRef}\r\n                {...provided.droppableProps}\r\n                isDraggingOver={snapshot.isDraggingOver}\r\n              >\r\n                <InnerList items={this.props.items} />\r\n                {provided.placeholder}\r\n              </ItemList>\r\n            )}\r\n          </Droppable>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\n\r\nconst Container = styled.div`\r\n  margin: 8px;\r\n  border: 1px solid #1DB954;\r\n  background-color: none;\r\n  border-radius: 2px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 21.2rem;\r\n`;\r\n\r\nconst ItemList = styled.div`\r\n  padding: 8px;\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${props => props.isDraggingOver ? 'pink' : 'none'};\r\n  flex-grow: 1;\r\n  height: 5rem;\r\n`;\r\n\r\nexport default class TrashCan extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n      <h1 className=\"main-heading\">Trash Can</h1>\r\n        <Container>\r\n          <Droppable droppableId=\"trash-can\" type=\"item\">\r\n            {(provided, snapshot) => (\r\n                <ItemList\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  isDraggingOver={snapshot.isDraggingOver}\r\n                >\r\n                  {provided.placeholder}\r\n                </ItemList>\r\n            )}\r\n          </Droppable>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nexport const initialData = {\r\n  data: {\r\n    items: {},\r\n    columns: {\r\n      'column-1': {\r\n        id: 'column-1',\r\n        title: 'S',\r\n        color: 'purple',\r\n        itemIds: [],\r\n      },\r\n      'column-2': {\r\n        id: 'column-2',\r\n        title: 'A',\r\n        color: '#1DB954',\r\n        itemIds: [],\r\n      },\r\n      'column-3': {\r\n        id: 'column-3',\r\n        title: 'B',\r\n        color: 'blue',\r\n        itemIds: [],\r\n      },\r\n      'column-4': {\r\n        id: 'column-4',\r\n        title: 'C',\r\n        color: 'grey',\r\n        itemIds: [],\r\n      },\r\n      'item-pool': {\r\n        id: 'item-pool',\r\n        itemIds: [],\r\n      },\r\n      'trash-can': {\r\n        id: 'trash-can'\r\n      }\r\n    },\r\n    columnOrder: ['column-1', 'column-2', 'column-3','column-4']\r\n  },\r\n  containsItem: (id) => {},\r\n  addToItemPool: (id, songURL, imgURL, title, subtitle) => {},\r\n}\r\n\r\nexport const TierListContext = React.createContext(initialData);","import axios from 'axios';\r\n\r\nexport const getParamValues = (url) => {\r\n  return url\r\n    .slice(1)\r\n    .split('&')\r\n    .reduce((prev, curr) => {\r\n      const [title, value] = curr.split('=');\r\n      prev[title] = value;\r\n      return prev;\r\n    }, {});\r\n};\r\n\r\nexport const setAuthHeader = () => {\r\n  try {\r\n    const params = JSON.parse(localStorage.getItem('params'));\r\n    if (params) {\r\n      axios.defaults.headers.common[\r\n        'Authorization'\r\n      ] = `Bearer ${params}`;\r\n    }\r\n  } catch (error) {\r\n    console.log('Error setting auth', error);\r\n  }\r\n};\r\n","import axios from 'axios';\r\nimport qs from 'qs';\r\nimport { setAuthHeader } from './functions';\r\n\r\nexport const get = async (url, params) => {\r\n  setAuthHeader();\r\n  const result = await axios.get(url, params);\r\n  return result.data;\r\n};\r\n\r\nexport const post = async (url, params) => {\r\n  setAuthHeader();\r\n  const result = await axios.post(url, params);\r\n  return result.data;\r\n};\r\n\r\nexport const getAuthToken = async () => {\r\n  const clientId = process.env.REACT_APP_CLIENT_ID;\r\n  const clientSecret = process.env.REACT_APP_CLIENT_SECRET;\r\n  \r\n  const headers = {\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    auth: {\r\n      username: clientId,\r\n      password: clientSecret,\r\n    },\r\n  };\r\n  const data = {\r\n    grant_type: 'client_credentials',\r\n  };\r\n\r\n  try {\r\n    const response = await axios.post(\r\n      'https://accounts.spotify.com/api/token',\r\n      qs.stringify(data),\r\n      headers\r\n    );\r\n    return response.data;\r\n  } catch (error) { console.log(error); }\r\n};","import {\r\n  SET_ALBUMS,\r\n  ADD_ALBUMS,\r\n  SET_ARTISTS,\r\n  ADD_ARTISTS,\r\n  SET_PLAYLIST,\r\n  ADD_PLAYLIST,\r\n  SET_TRACKS,\r\n  ADD_TRACKS\r\n} from '../utils/constants';\r\nimport { get } from '../utils/api';\r\n\r\nexport const setTracks = (tracks) => ({\r\n  type: SET_TRACKS,\r\n  tracks\r\n});\r\nexport const addTracks = (tracks) => ({\r\n  type: ADD_TRACKS,\r\n  tracks\r\n});\r\n\r\nexport const setAlbums = (albums) => ({\r\n  type: SET_ALBUMS,\r\n  albums\r\n});\r\nexport const addAlbums = (albums) => ({\r\n  type: ADD_ALBUMS,\r\n  albums\r\n});\r\n\r\nexport const setArtists = (artists) => ({\r\n  type: SET_ARTISTS,\r\n  artists\r\n});\r\nexport const addArtists = (artists) => ({\r\n  type: ADD_ARTISTS,\r\n  artists\r\n});\r\n\r\nexport const setPlayList = (playlists) => ({\r\n  type: SET_PLAYLIST,\r\n  playlists\r\n});\r\nexport const addPlaylist = (playlists) => ({\r\n  type: ADD_PLAYLIST,\r\n  playlists\r\n});\r\n\r\nexport const initiateGetResult = (searchTerm) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const API_URL = `https://api.spotify.com/v1/search?query=${encodeURIComponent(\r\n        searchTerm\r\n      )}&type=track,album,artist,playlist&limit=24`;\r\n      const result = await get(API_URL);\r\n      console.log(result);\r\n      const { tracks, albums, artists, playlists } = result;\r\n      dispatch(setTracks(tracks));\r\n      dispatch(setAlbums(albums));\r\n      dispatch(setArtists(artists));\r\n      return dispatch(setPlayList(playlists));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateLoadMoreTracks = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log('url', url);\r\n      const result = await get(url);\r\n      console.log('categoriess', result);\r\n      return dispatch(addTracks(result.tracks));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateLoadMoreAlbums = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log('url', url);\r\n      const result = await get(url);\r\n      console.log('categoriess', result);\r\n      return dispatch(addAlbums(result.albums));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateLoadMoreArtists = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log('url', url);\r\n      const result = await get(url);\r\n      console.log('categoriess', result);\r\n      return dispatch(addArtists(result.artists));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateLoadMorePlaylist = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log('url', url);\r\n      const result = await get(url);\r\n      console.log('categoriess', result);\r\n      return dispatch(addPlaylist(result.playlists));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\n","import React, { useState } from 'react';\r\nimport { Card, Container, Row, Col } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport music from '../images/music.jpeg';\r\nimport { TierListContext } from '../../tierlist/TierListContext';\r\n\r\nconst TracksList = ({ tracks }) => {\r\n  const [updater, setUpdater] = useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(tracks).length > 0 && (\r\n        <div className=\"tracks\">\r\n          {tracks.items.map((track, index) => {\r\n            let id = track.id, type = 'track', songURL = track.external_urls.spotify, title = track.name, subtitle = track.artists.map((artist) => artist.name).join(', ');\r\n            let imgURL = !_.isEmpty(track.album.images) ? track.album.images[0].url : null;\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <TierListContext.Consumer>\r\n                  {({containsItem, addToItemPool}) => (\r\n                    <Card style={{maxWidth: \"22rem\", width: \"22rem\", marginLeft: \"0.5rem\", marginRight: \"0.5rem\"}}>\r\n                      <Container>\r\n                        <Row noGutters>\r\n                          <Col xs=\"auto\">\r\n                            <a\r\n                              target=\"_blank\"\r\n                              href={songURL}\r\n                              rel=\"noopener noreferrer\"\r\n                            >\r\n                              {!_.isEmpty(track.album.images) ? (\r\n                                <Card.Img src={imgURL} alt=\"\" />\r\n                              ) : (\r\n                                <img src={music} alt=\"\" />\r\n                              )}\r\n                            </a>\r\n                          </Col>\r\n                          <Col>\r\n                            <Card.Body>\r\n                              <Card.Title>{title}</Card.Title>\r\n                              <Card.Text>\r\n                                <small>{subtitle}</small>\r\n                              </Card.Text>\r\n                            </Card.Body>\r\n                          </Col>\r\n                          <Col xs=\"auto\">\r\n                            <div>\r\n                              {containsItem(id, type) ? (\r\n                                <button disabled className=\"item-buttons\">x</button>\r\n                              ) : (\r\n                                <button className=\"item-buttons\" onClick={() => {\r\n                                  addToItemPool(id, type, songURL, imgURL, title, subtitle);\r\n                                  setUpdater(!updater);\r\n                                }}>+</button>\r\n                              )}\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </Container>\r\n                    </Card>\r\n                  )}\r\n                </TierListContext.Consumer>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TracksList;","import React, { useState } from 'react';\r\nimport { Card, Container, Row, Col } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport music from '../images/music.jpeg';\r\nimport { TierListContext } from '../../tierlist/TierListContext';\r\n\r\nconst AlbumsList = ({ albums }) => {\r\n  const [updater, setUpdater] = useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(albums).length > 0 && (\r\n        <div className=\"albums\">\r\n          {albums.items.map((album, index) => {\r\n            let id = album.id, type = 'album', songURL = album.external_urls.spotify, title = album.name, subtitle = album.artists.map((artist) => artist.name).join(', ');\r\n            let imgURL = !_.isEmpty(album.images) ? album.images[0].url : null;\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <TierListContext.Consumer>\r\n                  {({containsItem, addToItemPool}) => (\r\n                    <Card style={{maxWidth: \"22rem\", width: \"22rem\", marginLeft: \"0.5rem\", marginRight: \"0.5rem\"}}>\r\n                      <Container>\r\n                        <Row noGutters>\r\n                          <Col xs=\"auto\">\r\n                            <a\r\n                              target=\"_blank\"\r\n                              href={songURL}\r\n                              rel=\"noopener noreferrer\"\r\n                            >\r\n                              {!_.isEmpty(album.images) ? (\r\n                                <Card.Img src={album.images[0].url} alt=\"\" />\r\n                              ) : (\r\n                                <img src={music} alt=\"\" />\r\n                              )}\r\n                            </a>\r\n                          </Col>\r\n                          <Col>\r\n                            <Card.Body>\r\n                              <Card.Title style={{margin: '0'}}>{title}</Card.Title>\r\n                              <Card.Text>\r\n                                <small>{subtitle}</small>\r\n                              </Card.Text>\r\n                            </Card.Body>\r\n                          </Col>\r\n                          <Col xs=\"auto\">\r\n                            <div>\r\n                              {containsItem(id, type) ? (\r\n                                <button disabled className=\"item-buttons\">x</button>\r\n                              ) : (\r\n                                <button className=\"item-buttons\" onClick={() => {\r\n                                  addToItemPool(id, type, songURL, imgURL, title, subtitle);\r\n                                  setUpdater(!updater);\r\n                                }}>+</button>\r\n                              )}\r\n                              <button className=\"item-buttons\">v</button>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </Container>\r\n                    </Card>\r\n                  )}\r\n                </TierListContext.Consumer>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AlbumsList;","import React, { useState } from 'react';\r\nimport { Card, Container, Row, Col } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport music from '../images/music.jpeg';\r\nimport { TierListContext } from '../../tierlist/TierListContext';\r\n\r\nconst ArtistsList = ({ artists }) => {\r\n  const [updater, setUpdater] = useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(artists).length > 0 && (\r\n        <div className=\"artists\">\r\n          {artists.items.map((artist, index) => {\r\n            let id = artist.id, type = 'artist', songURL = artist.external_urls.spotify, title = artist.name, subtitle = null;\r\n            let imgURL = !_.isEmpty(artist.images) ? artist.images[0].url : null;\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <TierListContext.Consumer>\r\n                  {({containsItem, addToItemPool}) => (\r\n                    <Card style={{maxWidth: \"22rem\", width: \"22rem\", marginLeft: \"0.5rem\", marginRight: \"0.5rem\"}}>\r\n                      <Container>\r\n                        <Row noGutters>\r\n                          <Col xs=\"auto\">\r\n                            <a\r\n                              target=\"_blank\"\r\n                              href={songURL}\r\n                              rel=\"noopener noreferrer\"\r\n                            >\r\n                              {!_.isEmpty(artist.images) ? (\r\n                                <Card.Img src={artist.images[0].url} alt=\"\" />\r\n                              ) : (\r\n                                <img src={music} alt=\"\" />\r\n                              )}\r\n                            </a>\r\n                          </Col>\r\n                          <Col>\r\n                            <Card.Body>\r\n                              <Card.Title style={{margin: '0'}}>{title}</Card.Title>\r\n                            </Card.Body>\r\n                          </Col>\r\n                          <Col xs=\"auto\">\r\n                            <div>\r\n                              {containsItem(id, type) ? (\r\n                                <button disabled className=\"item-buttons\">x</button>\r\n                              ) : (\r\n                                <button className=\"item-buttons\" onClick={() => {\r\n                                  addToItemPool(id, type, songURL, imgURL, title, subtitle);\r\n                                  setUpdater(!updater);\r\n                                }}>+</button>\r\n                              )}\r\n                              <button className=\"item-buttons\">v</button>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </Container>\r\n                    </Card>\r\n                  )}\r\n                </TierListContext.Consumer>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ArtistsList;","import React, { useState } from 'react';\r\nimport { Card, Container, Row, Col } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport music from '../images/music.jpeg';\r\nimport { TierListContext } from '../../tierlist/TierListContext';\r\n\r\nconst PlayList = ({ playlist }) => {\r\n  const [updater, setUpdater] = useState(false);\r\n  return (\r\n    <div>\r\n      {Object.keys(playlist).length > 0 && (\r\n        <div className=\"playlist\">\r\n          {playlist.items.map((item, index) => {\r\n            let id = item.id, type = 'playlist', songURL = item.external_urls.spotify, title = item.name, subtitle = \"By \" + item.owner.display_name;\r\n            let imgURL = !_.isEmpty(item.images) ? item.images[0].url : null;\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <TierListContext.Consumer>\r\n                  {({containsItem, addToItemPool}) => (\r\n                    <Card style={{maxWidth: \"22rem\", width: \"22rem\", marginLeft: \"0.5rem\", marginRight: \"0.5rem\"}}>\r\n                      <Container>\r\n                        <Row noGutters>\r\n                          <Col xs=\"auto\">\r\n                            <a\r\n                              target=\"_blank\"\r\n                              href={songURL}\r\n                              rel=\"noopener noreferrer\"\r\n                            >\r\n                              {!_.isEmpty(item.images) ? (\r\n                                <Card.Img src={item.images[0].url} alt=\"\" />\r\n                              ) : (\r\n                                <img src={music} alt=\"\" />\r\n                              )}\r\n                            </a>\r\n                          </Col>\r\n                          <Col>\r\n                            <Card.Body>\r\n                              <Card.Title style={{margin: '0'}}>{title}</Card.Title>\r\n                              <Card.Text>{subtitle}</Card.Text>\r\n                            </Card.Body>\r\n                          </Col>\r\n                          <Col xs=\"auto\">\r\n                            <div>\r\n                              {containsItem(id, type) ? (\r\n                                <button disabled className=\"item-buttons\">x</button>\r\n                              ) : (\r\n                                <button className=\"item-buttons\" onClick={() => {\r\n                                  addToItemPool(id, type, songURL, imgURL, title, subtitle);\r\n                                  setUpdater(!updater);\r\n                                }}>+</button>\r\n                              )}\r\n                              <button className=\"item-buttons\">v</button>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </Container>\r\n                    </Card>\r\n                  )}\r\n                </TierListContext.Consumer>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayList;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport TracksList from './TracksList';\r\nimport AlbumsList from './AlbumsList';\r\nimport ArtistsList from './ArtistsList';\r\nimport PlayList from './PlayList';\r\n\r\nconst SearchResult = (props) => {\r\n  const { loadMore, result, setCategory, selectedCategory } = props;\r\n  const { tracks, albums, artists, playlist } = result;\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"search-buttons\">\r\n        {!_.isEmpty(tracks.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'tracks' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('tracks')}\r\n          >\r\n            Songs\r\n          </button>\r\n        )}\r\n        {!_.isEmpty(albums.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'albums' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('albums')}\r\n          >\r\n            Albums\r\n          </button>\r\n        )}\r\n        {!_.isEmpty(artists.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'artists' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('artists')}\r\n          >\r\n            Artists\r\n          </button>\r\n        )}\r\n        {!_.isEmpty(playlist.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'playlist' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('playlist')}\r\n          >\r\n            PlayLists\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <div className={`${selectedCategory === 'tracks' ? '' : 'hide'}`}>\r\n        {albums && <TracksList tracks={tracks} />}\r\n      </div>\r\n      <div className={`${selectedCategory === 'albums' ? '' : 'hide'}`}>\r\n        {albums && <AlbumsList albums={albums} />}\r\n      </div>\r\n      <div className={`${selectedCategory === 'artists' ? '' : 'hide'}`}>\r\n        {artists && <ArtistsList artists={artists} />}\r\n      </div>\r\n      <div className={`${selectedCategory === 'playlist' ? '' : 'hide'}`}>\r\n        {playlist && <PlayList playlist={playlist} />}\r\n      </div>\r\n\r\n      {!_.isEmpty(result[selectedCategory]) &&\r\n       !_.isEmpty(result[selectedCategory].next) && (\r\n        <div className=\"load-more\">\r\n          <Button variant=\"info\" type=\"button\" onClick={() => loadMore(selectedCategory)}>\r\n            Load More\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SearchResult;","import React, { useState } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst SearchForm = (props) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n\r\n  const handleInputChange = (event) => {\r\n    const searchTerm = event.target.value;\r\n    setSearchTerm(searchTerm);\r\n  };\r\n\r\n  const handleSearch = (event) => {\r\n    event.preventDefault();\r\n    if (searchTerm.trim() !== '') {\r\n      setErrorMsg('');\r\n      props.handleSearch(searchTerm);\r\n    } else {\r\n      setErrorMsg('Please enter a search term.');\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleSearch}>\r\n        {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Control\r\n            type=\"search\"\r\n            name=\"searchTerm\"\r\n            value={searchTerm}\r\n            placeholder=\"Search here!\"\r\n            onChange={handleInputChange}\r\n            autoComplete=\"off\"\r\n          />\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchForm;","import React from 'react';\r\n\r\nconst Header = () => {\r\n  return <h1 className=\"main-heading\" style={{marginBottom: \"8px\"}}>Search</h1>;\r\n};\r\n\r\nexport default Header;\r\n","import { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst Loader = (props) => {\r\n  const [node] = useState(document.createElement('div'));\r\n  const loader = document.querySelector('#loader');\r\n\r\n  useEffect(() => {\r\n    loader.appendChild(node).classList.add('message');\r\n  }, [loader, node]);\r\n\r\n  useEffect(() => {\r\n    if (props.show) {\r\n      loader.classList.remove('hide');\r\n      document.body.classList.add('loader-open');\r\n    } else {\r\n      loader.classList.add('hide');\r\n      document.body.classList.remove('loader-open');\r\n    }\r\n  }, [loader, props.show]);\r\n\r\n  return ReactDOM.createPortal(props.children, node);\r\n};\r\nexport default Loader;","import React, { useState } from 'react';\r\nimport {\r\n  initiateGetResult,\r\n  initiateLoadMoreTracks,\r\n  initiateLoadMoreAlbums,\r\n  initiateLoadMorePlaylist,\r\n  initiateLoadMoreArtists\r\n} from '../actions/result';\r\nimport { connect } from 'react-redux';\r\nimport SearchResult from './SearchResult';\r\nimport SearchForm from './SearchForm';\r\nimport Header from './Header';\r\nimport Loader from './Loader';\r\n\r\nconst Dashboard = (props) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedCategory, setSelectedCategory] = useState('tracks');\r\n  const { isValidSession, refreshSession } = props;\r\n\r\n  const handleSearch = async (searchTerm) => {\r\n    setIsLoading(true);\r\n    if (!isValidSession()) {\r\n      try { await refreshSession(); } \r\n      catch(error) { console.log(error); }\r\n    }\r\n    props.dispatch(initiateGetResult(searchTerm)).then(() => {\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n\r\n  const loadMore = async (type) => {\r\n    const { dispatch, tracks, albums, artists, playlist } = props;\r\n    setIsLoading(true);\r\n    if (!isValidSession()) {\r\n      try { await refreshSession(); }\r\n      catch(error) { console.log(error); }\r\n    }\r\n    switch (type) {\r\n      case 'tracks':\r\n        await dispatch(initiateLoadMoreTracks(tracks.next));\r\n        break;\r\n      case 'albums':\r\n        await dispatch(initiateLoadMoreAlbums(albums.next));\r\n        break;\r\n      case 'artists':\r\n        await dispatch(initiateLoadMoreArtists(artists.next));\r\n        break;\r\n      case 'playlist':\r\n        await dispatch(initiateLoadMorePlaylist(playlist.next));\r\n        break;\r\n      default:\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const setCategory = (category) => { setSelectedCategory(category); };\r\n\r\n  const { tracks, albums, artists, playlist } = props;\r\n  const result = { tracks, albums, artists, playlist };\r\n  \r\n  console.log(\"yup\");\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <Header />\r\n        <SearchForm handleSearch={handleSearch} />\r\n        <Loader show={isLoading}>Loading...</Loader>\r\n        <SearchResult\r\n          result={result}\r\n          loadMore={loadMore}\r\n          setCategory={setCategory}\r\n          selectedCategory={selectedCategory}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tracks: state.tracks,\r\n    albums: state.albums,\r\n    artists: state.artists,\r\n    playlist: state.playlist\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Dashboard);","import React from 'react';\r\nimport Dashboard from './components/Dashboard';\r\nimport { getAuthToken } from './utils/api';\r\n\r\nclass SidebarSearch extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { loaded: false };\r\n    }\r\n    \r\n    refreshSession = async () => {\r\n        let result;\r\n        try{ result = await getAuthToken(); } \r\n        catch(error) { console.log(error); }\r\n        if(result) {\r\n          const {\r\n              access_token,\r\n              expires_in\r\n          } = result;\r\n          localStorage.setItem('params', JSON.stringify(access_token));\r\n          localStorage.setItem('expiry_time', new Date().getTime() + expires_in * 1000);\r\n          if(!this.loaded) this.setState({ loaded: true });\r\n        }\r\n    }\r\n    \r\n    isValidSession = () => {\r\n        let expiryTime;\r\n        try { expiryTime = JSON.parse(localStorage.getItem('expiry_time')); } \r\n        catch(error) { expiryTime = '0'; }\r\n        const currentTime = new Date().getTime();\r\n        if(currentTime >= expiryTime && this.loaded) this.setState({ loaded: false });\r\n        return currentTime < expiryTime;\r\n    };\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        if(!this.isValidSession()) {\r\n          this.refreshSession();\r\n          return (\r\n            <div className=\"sidebar-search\">\r\n              Loading...\r\n            </div>\r\n          );\r\n        }\r\n        return (\r\n          <div className=\"sidebar-search\">\r\n            <Dashboard key={`${new Date().getTime()}`} isValidSession={this.isValidSession} refreshSession={this.refreshSession} />\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SidebarSearch;","import React from 'react';\r\nimport '@atlaskit/css-reset';\r\nimport styled from 'styled-components';\r\nimport Column from './components/Column';\r\nimport ItemPool from './components/ItemPool';\r\nimport TrashCan from './components/TrashCan';\r\nimport { TierListContext } from './TierListContext';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport SidebarSearch from '../sidebar/SidebarSearch'\r\nimport './tierlist-styles.css';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nclass InnerList extends React.PureComponent {\r\n  render() {\r\n    const { column, itemMap, index, updateHeader, deleteHandler } = this.props;\r\n    const items = column.itemIds.map(itemId => itemMap[itemId]);\r\n    return <Column column={column} items={items} index={index} updateHeader={updateHeader} deleteHandler={deleteHandler}/>;\r\n  }\r\n}\r\n\r\nclass TierList extends React.Component {\r\n  static contextType = TierListContext;\r\n  state = this.context.data;\r\n\r\n  componentDidMount() {\r\n    this.context.containsItem = (id, type) => {\r\n      if(id in this.state.items) {\r\n        return this.state.items[id]['type'] === type;\r\n      }\r\n      return false;\r\n    };\r\n    this.context.addToItemPool = (id, type, songURL, imgURL, title, subtitle) => {\r\n      if(this.context.containsItem(id, type)) return; // do nothing\r\n      const newItems = {\r\n        ...this.state.items,\r\n        [id]: {\r\n          id: id,\r\n          type: type,\r\n          songURL: songURL,\r\n          imgURL: imgURL,\r\n          title: title,\r\n          subtitle: subtitle\r\n        }\r\n      }\r\n      const newItemIds = Array.from(this.state.columns['item-pool'].itemIds).concat(id);\r\n      const newItemPool = {\r\n        ...this.state.columns['item-pool'],\r\n        itemIds: newItemIds\r\n      }\r\n      const newState = {\r\n        ...this.state,\r\n        items: newItems,\r\n        columns: {\r\n          ...this.state.columns,\r\n          'item-pool': newItemPool\r\n        }\r\n      };\r\n      this.setState(newState);\r\n    };\r\n  }\r\n\r\n  // uh-oh this might be buggy\r\n  importFromJson = e => {\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\r\n    fileReader.onload = e => {\r\n      const newState = JSON.parse(e.target.result);\r\n      // check if the required keys exist and the item-pool and trash-can exists in column and has the correct format\r\n      if(!('columnOrder' in newState && 'items' in newState && 'columns' in newState\r\n      && 'item-pool' in newState.columns && 'trash-can' in newState.columns\r\n      && 'id' in newState.columns['item-pool'] && newState.columns['item-pool'].id === 'item-pool'\r\n      && 'itemIds' in newState.columns['item-pool'] && Array.isArray(newState.columns['item-pool'].itemIds)\r\n      && 'id' in newState.columns['trash-can'] && newState.columns['trash-can'].id === 'trash-can')) {\r\n        console.log('missing required information!');\r\n        return;\r\n      }\r\n\r\n      // check if every column has the correct format\r\n      let hasValidColumns = true;\r\n      const requiredColumnKeys = ['id', 'title', 'color', 'itemIds'];\r\n      Object.keys(newState.columns).forEach(function(key) {\r\n        if(!hasValidColumns || key === 'item-pool' || key === 'trash-can') return;\r\n        const columnKeys = Object.keys(newState.columns[key]);\r\n        hasValidColumns = columnKeys.length === requiredColumnKeys.length && columnKeys.every(function(v, i) { return v === requiredColumnKeys[i]});\r\n      });\r\n      if(!hasValidColumns) {\r\n        console.log('missing required column information!');\r\n        return;\r\n      }\r\n\r\n      // check if every column in columnOrder exists in column (and no extra besides item-pool and trash-can)\r\n      const columnOrder = newState.columnOrder;\r\n      let allColumns = Object.keys(newState.columns);\r\n      allColumns.splice(allColumns.indexOf('item-pool'), 1);\r\n      allColumns.splice(allColumns.indexOf('trash-can'), 1);\r\n      if(!(columnOrder.length === allColumns.length && columnOrder.every(el => allColumns.includes(el)))) {\r\n        console.log('columnOrder and columns don\\'t match!');\r\n        return;\r\n      }\r\n\r\n      // check if every item in items has the correct format\r\n      let hasValidItems = true;\r\n      const requiredItemKeys = ['id', 'type', 'songURL', 'imgURL', 'title', 'subtitle'];\r\n      Object.keys(newState.items).forEach(function(key) {\r\n        if(!hasValidItems) return;\r\n        const itemKeys = Object.keys(newState.items[key]);\r\n        hasValidItems = itemKeys.length === requiredItemKeys.length && itemKeys.every(function(v, i) { return v === requiredItemKeys[i]});\r\n      });\r\n      if(!hasValidItems) {\r\n        console.log('missing required item information!');\r\n        return;\r\n      }\r\n\r\n      // check if every itemIDs exists in items (and no extra)\r\n      const allItems = Object.keys(newState.items);\r\n      let itemIds = [];\r\n      Object.keys(newState.columns).forEach(function(key) {\r\n        if(key === 'trash-can') return;\r\n        itemIds = itemIds.concat(newState.columns[key].itemIds);\r\n      });\r\n      if(!(itemIds.length === allItems.length && itemIds.every(el => allItems.includes(el)))) {\r\n        console.log('items and itemIds don\\'t match!');\r\n        return;\r\n      }\r\n\r\n      // success\r\n      this.setState(newState);\r\n      console.log(this.state);\r\n    };\r\n  }\r\n\r\n  deleteItem = (id, source, home) => {\r\n    const homeitemIds = Array.from(home.itemIds);\r\n    homeitemIds.splice(source.index, 1);\r\n    const newHome = {\r\n      ...home,\r\n      itemIds: homeitemIds,\r\n    };\r\n\r\n    const oldItems = this.state.items;\r\n    const newItems = Object.keys(oldItems).reduce((object, key) => {\r\n      if (key !== id) {\r\n        object[key] = oldItems[key];\r\n      }\r\n      return object;\r\n    }, {});\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      items: newItems,\r\n      columns: {\r\n        ...this.state.columns,\r\n        [newHome.id]: newHome,\r\n      },\r\n    };\r\n\r\n    this.setState(newState);\r\n  }\r\n\r\n  updateColHeader = (id, newTitle, newColor) => {\r\n    const oldHeader = this.state.columns[id];\r\n    const newHeader = {\r\n      ...oldHeader,\r\n      title: newTitle,\r\n      color: newColor\r\n    };\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        [id]: newHeader\r\n      }\r\n    };\r\n    this.setState(newState);\r\n  }\r\n\r\n  removeCol = (id) => {\r\n    const newColumnOrder = Array.from(this.state.columnOrder);\r\n    newColumnOrder.splice(newColumnOrder.indexOf(id), 1);\r\n\r\n    const oldColumns = this.state.columns;\r\n    const newColumns = Object.keys(oldColumns).reduce((object, key) => {\r\n      if (key !== id) {\r\n        object[key] = oldColumns[key];\r\n      }\r\n      return object;\r\n    }, {});\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      columns: newColumns,\r\n      columnOrder: newColumnOrder,\r\n    };\r\n    this.setState(newState);\r\n  }\r\n\r\n  onDragEnd = result => {\r\n    const { destination, source, draggableId, type } = result;\r\n\r\n    if (!destination) return;\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) return;\r\n\r\n    if (type === 'column') {\r\n      const newColumnOrder = Array.from(this.state.columnOrder);\r\n      newColumnOrder.splice(source.index, 1);\r\n      newColumnOrder.splice(destination.index, 0, draggableId);\r\n\r\n      const newState = {\r\n        ...this.state,\r\n        columnOrder: newColumnOrder\r\n      };\r\n      this.setState(newState);\r\n      return;\r\n    }\r\n\r\n    const home = this.state.columns[source.droppableId];\r\n    const foreign = this.state.columns[destination.droppableId];\r\n    \r\n    if (destination.droppableId === 'trash-can') {\r\n      this.deleteItem(draggableId, source, home);\r\n      return;\r\n    }\r\n\r\n    if (home === foreign) {\r\n      const newitemIds = Array.from(home.itemIds);\r\n      newitemIds.splice(source.index, 1);\r\n      newitemIds.splice(destination.index, 0, draggableId);\r\n\r\n      const newHome = {\r\n        ...home,\r\n        itemIds: newitemIds\r\n      };\r\n\r\n      const newState = {\r\n        ...this.state,\r\n        columns: {\r\n          ...this.state.columns,\r\n          [newHome.id]: newHome\r\n        }\r\n      };\r\n\r\n      this.setState(newState);\r\n      return;\r\n    }\r\n\r\n    // moving from one list to another\r\n    const homeitemIds = Array.from(home.itemIds);\r\n    homeitemIds.splice(source.index, 1);\r\n    const newHome = {\r\n      ...home,\r\n      itemIds: homeitemIds,\r\n    };\r\n\r\n    const foreignitemIds = Array.from(foreign.itemIds);\r\n    foreignitemIds.splice(destination.index, 0, draggableId);\r\n    const newForeign = {\r\n      ...foreign,\r\n      itemIds: foreignitemIds,\r\n    };\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        [newHome.id]: newHome,\r\n        [newForeign.id]: newForeign,\r\n      },\r\n    };\r\n    this.setState(newState);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            const ID = `column-${new Date().getTime()}`;\r\n            const newColumnOrder = Array.from(this.state.columnOrder).concat(ID);\r\n            const newState = {\r\n              ...this.state,\r\n              columnOrder: newColumnOrder\r\n            };\r\n            newState['columns'][ID] = {\r\n              id: ID,\r\n              title: 'NEW',\r\n              color: '#1DB954',\r\n              itemIds: [],\r\n            };\r\n            this.setState(newState);\r\n          }}\r\n        >\r\n          Add new group\r\n        </button>\r\n        <a\r\n          href={`data:text/json;charset=utf-8,${encodeURIComponent(\r\n            JSON.stringify(this.state)\r\n          )}`}\r\n          download=\"tierlist.json\"\r\n        >\r\n          {`Export as Json`}\r\n        </a>\r\n\r\n        <div>\r\n          <label htmlFor=\"import_tierlist\">Import from Json</label>\r\n          <input type=\"file\" id=\"import_tierlist\" name=\"import_tierlist\" accept=\".json\" onChange={this.importFromJson}/>\r\n        </div>\r\n        <DragDropContext onDragEnd={this.onDragEnd}>\r\n          <Container>\r\n            <TrashCan />\r\n            <Droppable droppableId=\"tiers\" direction=\"horizontal\" type=\"column\">\r\n              {provided => (\r\n                <Container\r\n                  {...provided.droppableProps}\r\n                  ref={provided.innerRef}\r\n                >\r\n                  {this.state.columnOrder.map((columnId, index) => {\r\n                    const column = this.state.columns[columnId];\r\n                    return (\r\n                      <InnerList\r\n                        key={column.id}\r\n                        column={column}\r\n                        itemMap={this.state.items}\r\n                        index={index}\r\n                        updateHeader={this.updateColHeader}\r\n                        deleteHandler={this.removeCol}\r\n                      />\r\n                    );\r\n                  })}\r\n                  {provided.placeholder}\r\n                </Container>\r\n              )}\r\n            </Droppable>\r\n          </Container>\r\n          <Container>\r\n            <ItemPool items = {this.state.columns['item-pool'].itemIds.map(itemId => this.state.items[itemId])} />\r\n            <SidebarSearch />\r\n          </Container>\r\n        </DragDropContext>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TierList","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport TierList from './tierlist/TierList';\nimport { TierListContext, initialData } from './tierlist/TierListContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './sidebar-styles.css';\n\nReactDOM.render(\n  <TierListContext.Provider value = {initialData}>\n    <h1 className=\"main-heading\">Spotify Tier List Maker (under construction)</h1>\n    <Provider store={store}>\n      <TierList/>\n    </Provider>\n  </TierListContext.Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}