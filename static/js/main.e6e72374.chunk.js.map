{"version":3,"sources":["sidebar/actions/result.js","sidebar/utils/constants.js","sidebar/reducers/tracks.js","sidebar/reducers/albums.js","sidebar/reducers/artists.js","store/store.js","sidebar/images/notrack.svg","sidebar/images/noalbum.svg","sidebar/images/noartist.svg","tierlist/components/Item.jsx","tierlist/imgs/cog-black.svg","tierlist/imgs/palette-black.svg","tierlist/imgs/cog-white.svg","tierlist/imgs/palette-white.svg","tierlist/imgs/cross.svg","tierlist/components/Title.jsx","tierlist/components/Column.jsx","tierlist/imgs/plus.svg","tierlist/components/AddColumnButton.jsx","tierlist/components/ItemPool.jsx","tierlist/imgs/trash-can.svg","tierlist/components/TrashCan.jsx","tierlist/TierListContext.js","sidebar/utils/api.js","sidebar/components/TracksList.js","tierlist/imgs/cross-all.svg","tierlist/imgs/plus-all.svg","sidebar/components/AlbumsList.js","sidebar/components/ArtistsList.js","sidebar/components/SearchResult.js","sidebar/components/SearchForm.js","sidebar/components/Loader.js","sidebar/components/Dashboard.js","sidebar/SidebarSearch.js","sidebar/components/CountryCodes.js","sidebar/components/RegionSelector.js","tierlist/imgs/search.svg","tierlist/imgs/playlist.svg","tierlist/TierList.js","index.js"],"names":["searchTracks","searchAlbums","SET_TRACKS","ADD_TRACKS","SET_ALBUMS","ADD_ALBUMS","SET_ARTISTS","ADD_ARTISTS","tracksReducer","state","action","tracks","type","next","items","albumsReducer","albums","artistsReducer","artists","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunk","ItemContent","styled","div","props","isDragging","ItemSmall","small","Item","draggableId","this","item","id","index","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","Card","style","margin","Container","Row","Col","xs","className","target","href","songURL","rel","onDragStart","e","preventDefault","imgURL","Img","src","alt","notrack","noalbum","noartist","Body","Title","title","subtitle","Text","React","Component","TitleStyle","h3","attrs","borderBottom","color","backgroundColor","InputStyle","textarea","ButtonStyle","button","inputRef","useRef","useState","colData","setID","setTitle","setColor","useColor","color_p","setColor_P","inputVisible","setInputVisible","colorPickerVisible","setcolorPickerVisible","deleteModalShow","setdeleteModalShow","update","updateHeader","deleteCol","deleteHandler","presetColors","onClickOutSide","current","contains","hex","setEditing","useEffect","document","addEventListener","removeEventListener","showDeleteButton","position","onClick","itemIds","length","Image","cross","fluid","width","height","Modal","show","onHide","size","Header","closeButton","closeVariant","Footer","Button","variant","Fragment","display","alignItems","onSubmit","value","onChange","Dropdown","autoClose","as","ButtonGroup","drop","onToggle","isOpen","OverlayTrigger","placement","overlay","Tooltip","Toggle","hsv","v","palette_white","palette_black","Menu","h","newHSV","toColor","setBorderColor","hideRGB","hideHSV","dark","map","idx","ToggleButton","textShadow","wordBreak","flexGrow","settings_white","settings_black","isDragDisabled","bdColorDark","bdColor","ItemList","isDraggingOver","bgColor","InnerList","nextProps","Column","isEditing","borderColor","column","newColor","a","toggleEditMode","getDarkBorderColor","setState","droppableId","snapshot2","droppableProps","getBodyColor","placeholder","AddColumnButton","addHandler","plus","ItemPool","TrashHeading","h1","TrashCan","trash","transition","filter","initialData","data","columns","columnOrder","containsItem","addToItemPool","deleteFromItemPool","addManyToItemPool","deleteManyFromItemPool","TierListContext","createContext","get","url","process","axios","concat","encodeURIComponent","result","setTracks","setAlbums","setArtists","initiateGetResult","searchTerm","Set","dispatch","API_URL","sessionStorage","getItem","newAlbums","trackItems","albumItems","newTracks","forEach","key","name","artist","has","add","push","total_tracks","console","log","initiateLoadMoreTracks","initiateLoadMoreAlbums","initiateLoadMoreArtists","getMultipleItems","typeFrom","itemType","albumSet","allItems","newItems","TracksList","updater","setUpdater","Object","keys","track","external_urls","spotify","join","_","isEmpty","album","images","Consumer","AlbumsList","getInnerItems","getTracksFromAlbum","cacheKey","albumContents","undefined","i","setItem","LZString","compress","JSON","stringify","parse","decompress","right","transitionDelay","plus_all","cross_all","ArtistsList","getAlbumsFromArtist","artistContents","release_date","available_markets","SearchResult","loadMore","setCategory","selectedCategory","CC_REGEX","countryCodetoFlag","cc","test","TypeError","codePoints","toUpperCase","c","codePointAt","String","fromCodePoint","SearchForm","setSearchTerm","errorMsg","setErrorMsg","flag","setFlag","Form","event","trim","handleSearch","InputGroup","Control","autoComplete","Loader","createElement","node","loader","querySelector","appendChild","classList","remove","body","ReactDOM","createPortal","children","connect","isLoading","setIsLoading","updateCategory","setSelectedCategory","then","Spinner","animation","role","marginRight","category","SidebarSearch","refreshSidebar","CountryCodes","RegionSelector","region","setRegion","Select","saveFileTypes","refreshColumns","showSearchbar","showItemPool","showItemNotifBadge","showErrorModal","errorModalText","showPlaylistModal","playlistModalText","itemMap","itemId","PureComponent","TierList","context","saveStateToStorage","importFromJson","fileReader","FileReader","readAsText","files","onload","newState","Array","isArray","hasValidColumns","requiredColumnKeys","columnKeys","every","allColumns","splice","indexOf","el","includes","hasValidItems","requiredItemKeys","itemKeys","importFromPlaylist","deleteItem","source","home","homeitemIds","from","newHome","oldItems","reduce","object","updateColHeader","newTitle","oldHeader","newHeader","addNewCol","ID","Date","getTime","newColumnOrder","removeCol","keepItems","oldColumns","newColumns","resetAllItems","removeAllItems","resetAllColumns","resetTierList","showSearch","getElementById","showItems","onDragEnd","destination","foreign","foreignitemIds","newForeign","newitemIds","newItemIds","newItemPool","delIndex","fileType","saveIMG","dataUrl","link","download","click","tierlist","displayWidth","getBoundingClientRect","fullWidth","scrollWidth","fullHeight","scrollHeight","toJpeg","pixelRatio","catch","err","toPng","toSvg","flexDirection","justifyContent","fontSize","borderLeftStyle","borderRightStyle","padding","flexWrap","DropdownButton","menuVariant","menuRole","saveAsIMG","letterSpacing","onSelect","ItemText","htmlFor","accept","direction","columnId","items_img","Offcanvas","scroll","backdrop","search_img","paddingBottom","overflowY","contextType","render","Provider"],"mappings":"qMAqCIA,EAAcC,E,2ECrCLC,EAAa,aACbC,EAAa,aACbC,EAAa,aACbC,EAAa,aACbC,EAAc,cACdC,EAAc,cCaZC,EAhBO,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACpCC,EAAWD,EAAXC,OACR,OAAQD,EAAOE,MACb,KAAKV,EACH,OAAOS,EACT,KAAKR,EACH,OAAO,2BACFM,GADL,IAEEI,KAAMF,EAAOE,KACbC,MAAM,GAAD,mBAAML,EAAMK,OAAZ,YAAsBH,EAAOG,UAEtC,QACE,OAAOL,ICIEM,EAhBO,WAAyB,IAAxBN,EAAuB,uDAAf,GAAIC,EAAW,uCACpCM,EAAWN,EAAXM,OACR,OAAQN,EAAOE,MACb,KAAKR,EACH,OAAOY,EACT,KAAKX,EACH,OAAO,2BACFI,GADL,IAEEI,KAAMG,EAAOH,KACbC,MAAM,GAAD,mBAAML,EAAMK,OAAZ,YAAsBE,EAAOF,UAEtC,QACE,OAAOL,ICIEQ,EAhBQ,WAAyB,IAAxBR,EAAuB,uDAAf,GAAIC,EAAW,uCACrCQ,EAAYR,EAAZQ,QACR,OAAQR,EAAOE,MACb,KAAKN,EACH,OAAOY,EACT,KAAKX,EACH,OAAO,2BACFE,GADL,IAEEI,KAAMK,EAAQL,KACdC,MAAM,GAAD,mBAAML,EAAMK,OAAZ,YAAsBI,EAAQJ,UAEvC,QACE,OAAOL,ICTPU,EAAmBC,OAAOC,sCAAwCC,IAWzDC,EATDC,YACZC,YAAgB,CACdd,OAAQH,EACRQ,OAAQD,EACRG,QAASD,IAEXE,EAAiBO,YAAgBC,O,qHCbpB,MAA0B,oCCA1B,MAA0B,oCCA1B,OAA0B,qC,QCQnCC,GAAcC,IAAOC,IAAV,yHACK,SAAAC,GAAK,OAAKA,EAAMC,WAAa,UAAY,UAMzDC,GAAYJ,IAAOK,MAAV,2CACJ,SAAAH,GAAK,OAAKA,EAAMC,WAAa,mBAAqB,aAGxCG,G,4JACjB,WAAU,IAAD,OACP,OACE,eAAC,IAAD,CAAWC,YAAaC,KAAKN,MAAMO,KAAKC,GAAIC,MAAOH,KAAKN,MAAMS,MAA9D,SACG,SAACC,EAAUC,GAAX,OACC,eAACd,GAAD,uCACMa,EAASE,gBACTF,EAASG,iBAFf,IAGEC,IAAKJ,EAASK,SACdd,WAAYU,EAASV,WAJvB,SAME,eAACe,EAAA,EAAD,CAAMC,MAAO,CAAEC,OAAQ,GAAvB,SACE,eAACC,EAAA,EAAD,UACE,gBAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKC,GAAG,OAAR,SACE,oBACEC,UAAU,gBACVC,OAAO,SACPC,KAAM,EAAKzB,MAAMO,KAAKmB,QACtBC,IAAI,sBACJC,YAAa,SAAAC,GAAC,OAAIA,EAAEC,kBALtB,SAOG,EAAK9B,MAAMO,KAAKwB,OACf,eAACf,EAAA,EAAKgB,IAAN,CAAUC,IAAK,EAAKjC,MAAMO,KAAKwB,OAAQG,IAAI,KAE3C,eAAClB,EAAA,EAAKgB,IAAN,CAAUC,IAA8B,UAAzB,EAAKjC,MAAMO,KAAK1B,KAAmBsD,EAAmC,UAAzB,EAAKnC,MAAMO,KAAK1B,KAAmBuD,EAAUC,GAAWH,IAAI,SAI9H,eAACb,EAAA,EAAD,UACE,gBAACL,EAAA,EAAKsB,KAAN,WACE,eAACtB,EAAA,EAAKuB,MAAN,UAAa,EAAKvC,MAAMO,KAAKiC,QAC5B,EAAKxC,MAAMO,KAAKkC,UACf,eAACzB,EAAA,EAAK0B,KAAN,UACE,eAACxC,GAAD,CAAWD,WAAYU,EAASV,WAAhC,SACG,EAAKD,MAAMO,KAAKkC,mC,GAnCbE,IAAMC,W,wFCnBzB,OAA0B,sCCA1B,OAA0B,0CCA1B,OAA0B,sCCA1B,OAA0B,0CCA1B,OAA0B,kCCYnCC,I,aAAa/C,IAAOgD,GAAGC,OAAM,SAAA/C,GAAK,MAAK,CAC3CiB,MAAO,CACL+B,aAAa,aAAD,OAAehD,EAAMiD,OACjCC,gBAAiBlD,EAAMiD,UAHRnD,CAAH,uJAaVqD,GAAarD,IAAOsD,SAAV,yLAUVC,GAAcvD,IAAOwD,OAAV,0PA+IFf,GAlID,SAAAvC,GACZ,IAAMuD,EAAWC,iBAAO,MACxB,EAAoBC,mBAASzD,EAAM0D,QAAQlD,IAA3C,oBAAOA,EAAP,KAAWmD,EAAX,KACA,EAA0BF,mBAASzD,EAAM0D,QAAQlB,OAAjD,oBAAOA,EAAP,KAAcoB,EAAd,KACA,EAA0BH,mBAASzD,EAAM0D,QAAQT,OAAjD,oBAAOA,EAAP,KAAcY,EAAd,KACA,EAA8BC,YAAS,MAAO9D,EAAM0D,QAAQT,OAA5D,oBAAOc,EAAP,KAAgBC,EAAhB,KACA,EAAwCP,oBAAS,GAAjD,oBAAOQ,EAAP,KAAqBC,EAArB,KACA,EAAoDT,oBAAS,GAA7D,oBAAOU,EAAP,KAA2BC,EAA3B,KACA,EAA8CX,oBAAS,GAAvD,oBAAOY,EAAP,KAAwBC,EAAxB,KACMC,EAASvE,EAAMwE,aACfC,EAAYzE,EAAM0E,cAClBC,EAAe3E,EAAM2E,aAG3B,SAASC,EAAe/C,GAClB0B,EAASsB,UAAYtB,EAASsB,QAAQC,SAASjD,EAAEL,UACnD0C,GAAgB,GACbC,IACDC,GAAsB,GACtBG,EAAO/D,EAAIgC,EAAOuB,EAAQgB,MAE5B/E,EAAMgF,YAAW,IAerB,OAXAC,qBAAU,WAER,OADIhB,GAAciB,SAASC,iBAAiB,YAAaP,GAClD,WAAQM,SAASE,oBAAoB,YAAaR,OAG3DK,qBAAU,WACRtB,EAAM3D,EAAM0D,QAAQlD,IACpBoD,EAAS5D,EAAM0D,QAAQlB,OACvBqB,EAAS7D,EAAM0D,QAAQT,SACtB,CAACjD,EAAM0D,UAGR,iCACG1D,EAAMqF,kBACH,sBAAKpE,MAAO,CAACqE,SAAU,YAAvB,SACE,yBAAQ/D,UAAU,uBAAuBgE,QAAS,kBAAMvF,EAAM0D,QAAQ8B,QAAQC,OAAS,EAAInB,GAAmB,GAAQG,EAAUjE,GAAI,IAApI,SACE,eAACkF,GAAA,EAAD,CAAO9D,YAAa,SAAAC,GAAC,OAAIA,EAAEC,kBAAkBG,IAAK0D,GAAOC,OAAK,EAAC1D,IAAI,gBAAgBjB,MAAO,CAAC4E,MAAO,MAAOC,OAAQ,aAIzH,gBAACC,GAAA,EAAD,CAAOvF,GAAG,eAAewF,KAAM3B,EAAiB4B,OAAQ,kBAAM3B,GAAmB,IAAQ4B,KAAK,KAA9F,UACE,eAACH,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAACC,aAAa,QAAvC,SACE,eAACN,GAAA,EAAMxD,MAAP,+BAEF,eAACwD,GAAA,EAAMzD,KAAP,iEAGA,gBAACyD,GAAA,EAAMO,OAAP,WACE,eAACC,GAAA,EAAD,CAAQC,QAAQ,UAAUhG,GAAG,aAAa+E,QAAS,WAAOjB,GAAmB,GAAQG,EAAUjE,GAAI,IAAnG,kBACA,eAAC+F,GAAA,EAAD,CAAQC,QAAQ,SAAShG,GAAG,eAAe+E,QAAS,WAAOjB,GAAmB,GAAQG,EAAUjE,GAAI,IAApG,oBACA,eAAC+F,GAAA,EAAD,CAAQC,QAAQ,YAAYhG,GAAG,oBAAoB+E,QAAS,WAAOjB,GAAmB,IAAtF,0BAIJ,eAACzB,GAAD,CAAYI,MAAOc,EAAQgB,IAA3B,SACE,eAAC,IAAM0B,SAAP,UACGxC,EACC,wBAAMhD,MAAO,CAAC4E,MAAO,OAAQa,QAAS,OAAQC,WAAY,UAAWC,SAAU,WAAQ1C,GAAgB,GAAQlE,EAAMgF,YAAW,IAAWlE,IAAKyC,EAAhJ,UACE,eAACJ,GAAD,CACE0D,MAAOrE,EACPsE,SAAU,SAAAjF,GACR+B,EAAS/B,EAAEL,OAAOqF,OAClBtC,EAAO/D,EAAIqB,EAAEL,OAAOqF,MAAO5D,MAG/B,gBAAC8D,GAAA,EAAD,CAAUC,UAAU,SAASC,GAAIC,KAAaC,KAAK,QACjDC,SAAU,SAACC,GACTjD,EAAsBiD,GAClBA,GAAQ9C,EAAO/D,EAAIgC,EAAOuB,EAAQgB,MAH1C,UAME,eAACuC,GAAA,EAAD,CACEC,UAAW,MACXC,QAAS,eAACC,GAAA,EAAD,yBAFX,SAIE,eAACV,GAAA,EAASW,OAAV,CAAiBlH,GAAG,eAAegG,QAAQ,YAA3C,SACE,eAACd,GAAA,EAAD,CAAO9D,YAAa,SAAAC,GAAC,OAAIA,EAAEC,kBAAkBG,IAAK8B,EAAQ4D,IAAIC,EAAI,GAAKC,GAAgBC,GAAelC,OAAK,EAAC1D,IAAI,SAASjB,MAAO,CAAC4E,MAAO,OAAQC,OAAQ,cAG5J,gBAACiB,GAAA,EAASgB,KAAV,CAAevH,GAAG,iBAAiBgG,QAAQ,OAA3C,UACE,eAAC,IAAD,CAAaV,OAAQ,IAAKD,MAAO,IAAK5C,MAAOc,EAAS+C,SAAU,SAAAjF,GAC9D,GAAGA,EAAE8F,IAAIK,GAAK,IAAK,CACjB,IAAIC,EAASpG,EAAE8F,IACfM,EAAOD,EAAI,IACXnG,EAAIqG,YAAQ,MAAOD,GAErBjE,EAAWnC,GACX7B,EAAMmI,eAAetG,EAAEkD,MACtBqD,SAAO,EAACC,SAAO,EAACC,MAAI,IAEvB,sBAAK9H,GAAG,gBAAR,SACGmE,EAAa4D,KAAI,SAACtF,EAAOuF,GAAR,OAChB,eAACC,GAAA,EAAD,CAEElH,UAAY,sBACZf,GAAE,gBAAWgI,GACb3J,KAAK,QACL2H,QAAQ,QACRvF,MAAO,CAACiC,gBAAiBD,GACzB6D,SAAU,WAAO9C,EAAWkE,YAAQ,MAAOjF,IAASjD,EAAMmI,eAAelF,KANpEuF,iBAcjB,uBAAKvH,MAAO,CAAC4E,MAAO,OAAQa,QAAS,OAAQC,WAAY,UAAzD,UACE,sBAAK1F,MAAO,CAACgC,MAAO,QAASyF,WAAY,gBAAiBC,UAAW,YAAaC,SAAU,KAA5F,SAAmGpG,IACjG,eAAC8E,GAAA,EAAD,CACEC,UAAW,MACXC,QAAS,eAACC,GAAA,EAAD,0BAFX,SAIA,eAACpE,GAAD,CAAakC,QAAS,WAAQrB,GAAgB,GAAOlE,EAAMgF,YAAW,IAAtE,SACE,eAACU,GAAA,EAAD,CAAO9D,YAAa,SAAAC,GAAC,OAAIA,EAAEC,kBAAkBG,IAAK8B,EAAQ4D,IAAIC,EAAI,GAAKiB,GAAiBC,GAAgBlD,OAAK,EAAC1D,IAAI,WAAWjB,MAAO,CAAC4E,MAAO,OAAQC,OAAQ,yBChKxK3E,GAAYrB,IAAOC,IAAV,qKACO,SAAAC,GAAK,OAAIA,EAAM+I,eAAiB/I,EAAMgJ,YAAchJ,EAAMiJ,WAQ1EC,GAAWpJ,IAAOC,IAAV,iLAEQ,SAAAC,GAAK,OAAIA,EAAMmJ,gBAAkBnJ,EAAMC,WAAaD,EAAMoJ,QAAU,UAOpFC,G,2KACJ,SAAsBC,GACpB,OAAIA,EAAUvK,QAAUuB,KAAKN,MAAMjB,Q,oBAKrC,WACE,OAAOuB,KAAKN,MAAMjB,MAAMwJ,KAAI,SAAChI,EAAME,GAAP,OAC1B,eAAC,GAAD,CAAoBF,KAAMA,EAAME,MAAOA,GAA5BF,EAAKC,W,GATEmC,IAAMC,WAcT2G,G,kDACnB,WAAYvJ,GAAQ,IAAD,8BACjB,cAAMA,IACDtB,MAAQ,CACX8K,WAAW,EACXC,YAAa,EAAKzJ,MAAM0J,OAAOzG,OAJhB,E,sDAQnB,SAAmBA,GACjB,IAAI0G,EAAWzB,YAAQ,MAAOjF,GAAO0E,IAErC,OADAgC,EAASC,EAAI,IACN1B,YAAQ,MAAOyB,GAAU5E,M,0BAGlC,SAAa9B,GACX,IAAI0G,EAAWzB,YAAQ,MAAOjF,GAAO0E,IAGrC,OAFAgC,EAAS/B,EAAI+B,EAAS/B,EAAI,EAC1B+B,EAASC,EAAI,IACN1B,YAAQ,MAAOyB,GAAU5E,M,oBAGlC,WAAU,IAAD,OACP,OACE,eAAC,IAAD,CAAW1E,YAAaC,KAAKN,MAAM0J,OAAOlJ,GAAIC,MAAOH,KAAKN,MAAMS,MAAOsI,eAAgBzI,KAAK5B,MAAM8K,WAAalJ,KAAKN,MAAM6J,eAA1H,SACG,SAACnJ,EAAUC,GAAX,OACC,gBAAC,GAAD,2BACMD,EAASE,gBADf,IAEEE,IAAKJ,EAASK,SACdgI,eAAgB,EAAK/I,MAAM6J,eAC3BZ,QAAS,EAAKvK,MAAM+K,YACpBT,YAAa,EAAKc,mBAAmB,EAAKpL,MAAM+K,aALlD,UAOE,gDAAS/I,EAASG,iBAAlB,aACE,eAAC,GAAD,CACE6C,QAAS,EAAK1D,MAAM0J,OACpBlF,aAAc,EAAKxE,MAAMwE,aACzBE,cAAe,EAAK1E,MAAM0E,cAC1BW,iBAAkB,EAAKrF,MAAM6J,eAC7BlF,aAAc,EAAK3E,MAAM2E,aACzBK,WAAY,SAACnD,GAAD,OAAO,EAAKkI,SAAS,CAAEP,UAAW3H,KAC9CsG,eAAgB,SAAClF,GAAD,OAAW,EAAK8G,SAAS,CAAEN,YAAaxG,UAG5D,eAAC,IAAD,CAAW+G,YAAa,EAAKhK,MAAM0J,OAAOlJ,GAAI3B,KAAK,OAAnD,SACG,SAAC6B,EAAUuJ,GAAX,OACC,gBAACf,GAAD,yBACEpI,IAAKJ,EAASK,UACVL,EAASwJ,gBAFf,IAGEjK,WAAYU,EAASV,WACrBkJ,eAAgBc,EAAUd,eAC1BC,QAAS,EAAKe,aAAa,EAAKnK,MAAM0J,OAAOzG,OAL/C,UAOE,eAAC,GAAD,CAAWlE,MAAO,EAAKiB,MAAMjB,QAC5B2B,EAAS0J,8B,GAtDQzH,IAAMC,WCvC3B,OAA0B,iCCMnCzB,GAAYrB,IAAOC,IAAV,mJAQMsK,G,4JACnB,WAAU,IAAD,OACP,OACE,eAAC,IAAD,CAAWhK,YAAW,kBAAaC,KAAKN,MAAMS,OAASA,MAAOH,KAAKN,MAAMS,MAAOsI,gBAAgB,EAAhG,SACG,SAACrI,GAAD,OACC,eAAC,GAAD,2BACMA,EAASE,gBADf,IAEEE,IAAKJ,EAASK,SAFhB,SAIE,yBAAQQ,UAAU,oBAAoBgE,QAAS,kBAAM,EAAKvF,MAAMsK,WAAW,EAAKtK,MAAMS,QAAtF,SACE,eAACiF,GAAA,EAAD,CAAO9D,YAAa,SAAAC,GAAC,OAAIA,EAAEC,kBAAkBG,IAAKsI,GAAM3E,OAAK,EAAC1D,IAAI,aAAajB,MAAO,CAAC4E,MAAO,QAASC,OAAQ,uB,GAVhFnD,IAAMC,WCT7CzB,GAAYrB,IAAOC,IAAV,2PAYTmJ,GAAWpJ,IAAOC,IAAV,mIAGQ,SAAAC,GAAK,OAAIA,EAAMmJ,eAAiB,UAAY,UAI5DE,G,2KACJ,SAAsBC,GACpB,OAAIA,EAAUvK,QAAUuB,KAAKN,MAAMjB,Q,oBAKrC,WACE,OAAOuB,KAAKN,MAAMjB,MAAMwJ,KAAI,SAAChI,EAAME,GAAP,OAC1B,eAAC,GAAD,CAAoBF,KAAMA,EAAME,MAAOA,GAA5BF,EAAKC,W,GATEmC,IAAMC,WAcT4H,G,4JACnB,WAAU,IAAD,OACP,OACE,eAAC,GAAD,UACE,eAAC,IAAD,CAAWR,YAAY,YAAYnL,KAAK,OAAxC,SACG,SAAC6B,EAAUC,GAAX,OACC,gBAAC,GAAD,yBACEG,IAAKJ,EAASK,UACVL,EAASwJ,gBAFf,IAGEf,eAAgBxI,EAASwI,eAH3B,UAKE,eAAC,GAAD,CAAWpK,MAAO,EAAKiB,MAAMjB,QAC5B2B,EAAS0J,yB,GAZczH,IAAMC,WCtC7B,OAA0B,sCCMnCzB,GAAYrB,IAAOC,IAAV,wPAEO,SAAAC,GAAK,OAAIA,EAAMmJ,eAAiB,MAAQ,aAUxDD,GAAWpJ,IAAOC,IAAV,mIAGQ,SAAAC,GAAK,OAAIA,EAAMmJ,eAAiB,UAAY,UAI5DsB,GAAe3K,IAAO4K,GAAV,kLACP,SAAA1K,GAAK,OAAIA,EAAMmJ,eAAiB,MAAQ,aAa9BwB,G,4JACnB,WACE,OACE,eAAC,IAAD,CAAWX,YAAY,YAAYnL,KAAK,OAAxC,SACG,SAAC6B,EAAUC,GAAX,OACC,uBAAKM,MAAO,CAACqE,SAAU,YAAvB,UACE,eAACmF,GAAD,CAAclJ,UAAU,eAAe4H,eAAgBxI,EAASwI,eAAhE,SACC,eAACzD,GAAA,EAAD,CAAOzD,IAAK2I,GAAOhF,OAAK,EAAC1D,IAAI,YAAYjB,MAAO,CAAC4E,MAAO,OAAQgF,WAAY,mBAAoBC,OAAQnK,EAASwI,eATlG,0FADF,6FAYd,eAAC,GAAD,CAAWA,eAAgBxI,EAASwI,eAApC,SACE,eAAC,GAAD,yBACErI,IAAKJ,EAASK,UACVL,EAASwJ,gBAFf,IAGEf,eAAgBxI,EAASwI,eAH3B,SAKGzI,EAAS0J,2B,GAfYzH,IAAMC,WCrC/BmI,GAAc,CACzBC,KAAM,CACJjM,MAAO,GACPkM,QAAS,CACP,WAAY,CACVzK,GAAI,WACJgC,MAAO,IACPS,MAAO,UACPuC,QAAS,IAEX,WAAY,CACVhF,GAAI,WACJgC,MAAO,IACPS,MAAO,UACPuC,QAAS,IAEX,WAAY,CACVhF,GAAI,WACJgC,MAAO,IACPS,MAAO,UACPuC,QAAS,IAEX,WAAY,CACVhF,GAAI,WACJgC,MAAO,IACPS,MAAO,UACPuC,QAAS,IAEX,YAAa,CACXhF,GAAI,YACJgF,QAAS,KAGb0F,YAAa,CAAC,WAAY,WAAY,WAAW,aAEnDC,aAAc,SAAC3K,KACf4K,cAAe,SAAC5K,EAAI3B,EAAM6C,EAASK,EAAQS,EAAOC,KAClD4I,mBAAoB,SAAC7K,EAAI3B,KACzByM,kBAAmB,SAACvM,KACpBwM,uBAAwB,SAACxM,MAGdyM,GAAkB7I,IAAM8I,cAAcV,I,iDC1CtCW,GAAG,yCAAG,WAAOC,GAAP,gBAAA/B,EAAA,4DACDgC,kGADC,SAEIC,KAAMH,IADXE,kGACuBE,OAAOC,mBAAmBJ,KAFhD,cAEXK,EAFW,yBAGVA,EAAOhB,MAHG,2CAAH,sDvBQHiB,GAAY,SAACrN,GAAD,MAAa,CACpCC,KAAMV,EACNS,WAOWsN,GAAY,SAACjN,GAAD,MAAa,CACpCJ,KAAMR,EACNY,WAOWkN,GAAa,SAAChN,GAAD,MAAc,CACtCN,KAAMN,EACNY,YAaWiN,GAAoB,SAACC,GAEhC,OANApO,EAAe,IAAIqO,IACnBpO,EAAe,IAAIoO,IAKnB,yCAAO,WAAOC,GAAP,gCAAA3C,EAAA,sEAEC4C,EAFD,kDAEsDT,mBACvDM,GAHC,qCAKHG,GAAO,kBAAeC,eAAeC,QAAQ,iBAL1C,SAMkBhB,GAAIc,GANtB,cAMGR,EANH,OAOKpN,EAA4BoN,EAA5BpN,OAAQK,EAAoB+M,EAApB/M,OAAQE,EAAY6M,EAAZ7M,QACAwN,EAAY1N,EAChC2N,EAAa,GAAIC,EAAa,IAD9BC,EAAYlO,GAGNG,MAAMgO,SAAQ,SAASxM,GAC/B,IAAIyM,EAAMzM,EAAK0M,KACf1M,EAAKpB,QAAQ4N,SAAQ,SAASG,GAC5BF,GAAO,GAAKE,EAAO1M,MAEjBvC,EAAakP,IAAIH,KACnB/O,EAAamP,IAAIJ,GACjBJ,EAAWS,KAAK9M,OAGpBuM,EAAU/N,MAAQ6N,EAClBL,EAASN,GAAUa,IAEnBH,EAAU5N,MAAMgO,SAAQ,SAASxM,GAC/B,IAAIyM,EAAMzM,EAAK0M,KACf1M,EAAKpB,QAAQ4N,SAAQ,SAASG,GAC5BF,GAAO,GAAKE,EAAO1M,OAEjBtC,EAAaiP,IAAIH,IAAQzM,EAAK+M,aAAe,IAC/CpP,EAAakP,IAAIJ,GACjBH,EAAWQ,KAAK9M,OAGpBoM,EAAU5N,MAAQ8N,EAClBN,EAASL,GAAUS,IAnChB,kBAqCIJ,EAASJ,GAAWhN,KArCxB,kCAuCHoO,QAAQC,IAAI,QAAZ,MAvCG,0DAAP,uDAkDWC,GAAyB,SAAC9B,GACrC,gDAAO,WAAOY,GAAP,oBAAA3C,EAAA,+EAEkB8B,GAAIC,GAFtB,cAEGK,EAFH,OAGCc,EAAYd,EAAOpN,OACnBgO,EAAa,GAEjBE,EAAU/N,MAAMgO,SAAQ,SAASxM,GAC/B,IAAIyM,EAAMzM,EAAK0M,KACf1M,EAAKpB,QAAQ4N,SAAQ,SAASG,GAC5BF,GAAO,GAAKE,EAAO1M,MAEjBvC,EAAakP,IAAIH,KACnB/O,EAAamP,IAAIJ,GACjBJ,EAAWS,KAAK9M,OAGpBuM,EAAU/N,MAAQ6N,EAhBf,kBAkBIL,EApGyB,CACpC1N,KAAMT,EACNQ,OAkG8BkO,KAlBvB,kCAoBHS,QAAQC,IAAI,QAAZ,MApBG,0DAAP,uDAyBWE,GAAyB,SAAC/B,GACrC,gDAAO,WAAOY,GAAP,oBAAA3C,EAAA,+EAEkB8B,GAAIC,GAFtB,cAEGK,EAFH,OAGCW,EAAYX,EAAO/M,OACnB4N,EAAa,GAEjBF,EAAU5N,MAAMgO,SAAQ,SAASxM,GAC/B,IAAIyM,EAAMzM,EAAK0M,KACf1M,EAAKpB,QAAQ4N,SAAQ,SAASG,GAC5BF,GAAO,GAAKE,EAAO1M,OAEjBtC,EAAaiP,IAAIH,IAAQzM,EAAK+M,aAAe,IAC/CpP,EAAakP,IAAIJ,GACjBH,EAAWQ,KAAK9M,OAGpBoM,EAAU5N,MAAQ8N,EAhBf,kBAkBIN,EArHyB,CACpC1N,KAAMP,EACNW,OAmH8B0N,KAlBvB,kCAoBHY,QAAQC,IAAI,QAAZ,MApBG,0DAAP,uDAyBWG,GAA0B,SAAChC,GACtC,gDAAO,WAAOY,GAAP,gBAAA3C,EAAA,+EAEkB8B,GAAIC,GAFtB,cAEGK,EAFH,yBAGIO,GAvHcpN,EAuHM6M,EAAO7M,QAvHA,CACtCN,KAAML,EACNW,cAkHO,gCAKHoO,QAAQC,IAAI,QAAZ,MALG,kCApHiB,IAACrO,IAoHlB,oBAAP,uDAUWyO,GAAgB,yCAAG,WAAOpN,EAAIqN,EAAUC,GAArB,0BAAAlE,EAAA,sDAC1BmE,EAAW,IAAIzB,IADW,SAGxB0B,EAAW,GACXxB,EAJwB,qCAIgBqB,EAJhB,aAI6B9B,mBAAmBvL,GAJhD,YAIuDsN,EAJvD,cAKZ,WAAbD,IAAuBrB,GAAO,gCACjCA,GAAO,kBAAeC,eAAeC,QAAQ,iBAC7Ca,QAAQC,IAAIf,eAAeC,QAAQ,iBAPP,uBASLhB,GAAIc,GATC,OASpBR,EAToB,OAUlBjN,EAAgBiN,EAAhBjN,MAAOD,EAASkN,EAATlN,KACC,WAAb+O,EAAwB,WACzB,IAAII,EAAW,GACflP,EAAMgO,SAAQ,SAASxM,IACjBwN,EAASZ,IAAI5M,EAAK0M,OAAS1M,EAAK+M,aAAe,IACjDS,EAASX,IAAI7M,EAAK0M,MAClBgB,EAASZ,KAAK9M,OAGlByN,EAAWA,EAASlC,OAAOmC,GARF,GAUtBD,EAAWA,EAASlC,OAAO/M,GAChCyN,EAAU1N,EAtBgB,WAuBnB0N,EAvBmB,iDAwBrBwB,GAxBqB,kCA0B5BT,QAAQC,IAAI,QAAZ,MA1B4B,0DAAH,0D,mGwB/EdU,GAvEI,SAAC,GAAgB,IAAdtP,EAAa,EAAbA,OACpB,EAA8B6E,oBAAS,GAAvC,oBAAO0K,EAAP,KAAgBC,EAAhB,KACA,OACE,eAAC,IAAM3H,SAAP,UACG4H,OAAOC,KAAK1P,GAAQ6G,OAAS,GAC5B,sBAAKlE,UAAU,SAAf,SACG3C,EAAOG,MAAMwJ,KAAI,SAACgG,EAAO9N,GACxB,IAAID,EAAK+N,EAAM/N,GAAI3B,EAAO,QAAS6C,EAAU6M,EAAMC,cAAcC,QAASjM,EAAQ+L,EAAMtB,KAAMxK,EAAW8L,EAAMpP,QAAQoJ,KAAI,SAAC2E,GAAD,OAAYA,EAAOD,QAAMyB,KAAK,MACrJ3M,EAAU4M,KAAEC,QAAQL,EAAMM,MAAMC,QAAsC,KAA5BP,EAAMM,MAAMC,OAAO,GAAGnD,IACpE,OACE,eAAC,IAAMlF,SAAP,UACE,eAAC+E,GAAgBuD,SAAjB,UACG,gBAAE5D,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,cAAeC,EAA/B,EAA+BA,mBAA/B,OACC,eAACrK,EAAA,EAAD,CAAMO,UAAU,cAAcN,MAAO,CAACC,OAAQ,YAAagC,gBAAiBiI,EAAa3K,EAAI3B,GAAQ,QAAU,IAA/G,SACE,eAACsC,EAAA,EAAD,UACE,gBAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKC,GAAG,OAAR,SACE,oBACEC,UAAU,gBACVC,OAAO,SACPC,KAAMC,EACNC,IAAI,sBACJV,MAAO,CAAC6J,OAAQK,EAAa3K,EAAI3B,GAAQ,kBAAoB,oBAC7D+C,YAAa,SAAAC,GAAC,OAAIA,EAAEC,kBANtB,SAQc,OAAXC,EACC,eAACf,EAAA,EAAKgB,IAAN,CAAUC,IAAKF,EAAQG,IAAI,sBAE3B,eAAClB,EAAA,EAAKgB,IAAN,CAAUC,IAAKE,EAASD,IAAI,4BAIlC,eAACb,EAAA,EAAD,UACE,gBAACL,EAAA,EAAKsB,KAAN,WACE,eAACtB,EAAA,EAAKuB,MAAN,CAAYtB,MAAO,CAACgC,MAAOkI,EAAa3K,EAAI3B,GAAQ,OAAS,IAA7D,SAAmE2D,IACnE,eAACxB,EAAA,EAAK0B,KAAN,UACE,wBAAOzB,MAAO,CAACgC,MAAOkI,EAAa3K,EAAI3B,GAAS,OAAS,IAAzD,SAA+D4D,MAEjE,+BACG0I,EAAa3K,EAAI3B,GAChB,yBAAQ0C,UAAU,iBAAiBgE,QAAS,WAC1C8F,EAAmB7K,EAAI3B,GACvBuP,GAAYD,IAFd,SAIE,eAACzI,GAAA,EAAD,CAAO9D,YAAa,SAAAC,GAAC,OAAIA,EAAEC,kBAAkBG,IAAK0D,GAAOC,OAAK,EAAC1D,IAAI,eAAejB,MAAO,CAAC4E,MAAO,MAAOC,OAAQ,WAGlH,yBAAQvE,UAAU,eAAegE,QAAS,WACxC6F,EAAc5K,EAAI3B,EAAM6C,EAASK,EAAQS,EAAOC,GAChD2L,GAAYD,IAFd,SAIE,eAACzI,GAAA,EAAD,CAAO9D,YAAa,SAAAC,GAAC,OAAIA,EAAEC,kBAAkBG,IAAKsI,GAAM3E,OAAK,EAAC1D,IAAI,YAAYjB,MAAO,CAAC4E,MAAO,MAAOC,OAAQ,6BAzC7GrF,WClBpB,OAA0B,sCCA1B,OAA0B,qCC+H1BuO,GApHI,SAAC,GAA+B,IAA7B/P,EAA4B,EAA5BA,OAAQgQ,EAAoB,EAApBA,cAC5B,EAA8BxL,oBAAS,GAAvC,oBAAO0K,EAAP,KAAgBC,EAAhB,KAEMc,EAAkB,yCAAG,WAAO1O,EAAIuB,GAAX,wBAAA6H,EAAA,yDACrBuF,EADqB,gBACD3O,GACgB,OAArCiM,eAAeC,QAAQyC,GAFD,wBAGnBC,EAAgB,GAHG,SAIJH,EAAczO,EAAI,QAAS,SAJvB,eAKT6O,KADVrD,EAJmB,cAKkBqD,IAAdrD,EAAO,GALX,yCAKoC,MALpC,OAMvB,IAAQsD,EAAI,EAAGA,EAAItD,EAAOvG,OAAQ6J,IAC5B/O,EAAOyL,EAAOsD,GAClBF,EAAc/B,KAAK,CACjB7M,GAAID,EAAKC,GACT3B,KAAM,QACN6C,QAASnB,EAAKiO,cAAcC,QAC5B1M,OAAQA,EACRS,MAAOjC,EAAK0M,KACZxK,SAAUlC,EAAKpB,QAAQoJ,KAAI,SAAC2E,GAAD,OAAYA,EAAOD,QAAMyB,KAAK,QAG7DjC,eAAe8C,QAAQJ,EAAUK,KAASC,SAASC,KAAKC,UAAUP,KAjB3C,iCAmBlBM,KAAKE,MAAMJ,KAASK,WAAWpD,eAAeC,QAAQyC,MAnBpC,4CAAH,wDAsBxB,OACE,eAAC,IAAM1I,SAAP,UACG4H,OAAOC,KAAKrP,GAAQwG,OAAS,GAC5B,sBAAKlE,UAAU,SAAf,SACGtC,EAAOF,MAAMwJ,KAAI,SAACsG,EAAOpO,GACxB,IAAID,EAAKqO,EAAMrO,GAAI3B,EAAO,QAAS6C,EAAUmN,EAAML,cAAcC,QAASjM,EAAQqM,EAAM5B,KAAMxK,EAAWoM,EAAM1P,QAAQoJ,KAAI,SAAC2E,GAAD,OAAYA,EAAOD,QAAMyB,KAAK,MACrJ3M,EAAU4M,KAAEC,QAAQC,EAAMC,QAAgC,KAAtBD,EAAMC,OAAO,GAAGnD,IACxD,OACE,eAAC,IAAMlF,SAAP,UACE,eAAC+E,GAAgBuD,SAAjB,UACG,gBAAE5D,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,cAAeC,EAA/B,EAA+BA,mBAAoBC,EAAnD,EAAmDA,kBAAmBC,EAAtE,EAAsEA,uBAAtE,OACC,eAACvK,EAAA,EAAD,CAAMO,UAAU,cAAcN,MAAO,CAACC,OAAQ,YAAagC,gBAAiBiI,EAAa3K,EAAI3B,GAAQ,QAAU,IAA/G,SACE,eAACsC,EAAA,EAAD,UACE,gBAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKC,GAAG,OAAR,SACE,oBACEC,UAAU,gBACVC,OAAO,SACPC,KAAMC,EACNC,IAAI,sBACJV,MAAO,CAAC6J,OAAQK,EAAa3K,EAAI3B,GAAQ,kBAAoB,oBAC7D+C,YAAa,SAAAC,GAAC,OAAIA,EAAEC,kBANtB,SAQc,OAAXC,EACC,eAACf,EAAA,EAAKgB,IAAN,CAAUC,IAAK4M,EAAMC,OAAO,GAAGnD,IAAKzJ,IAAI,gBAExC,eAAClB,EAAA,EAAKgB,IAAN,CAAUC,IAAKG,EAASF,IAAI,4BAIlC,eAACb,EAAA,EAAD,UACE,gBAACL,EAAA,EAAKsB,KAAN,WACE,eAACtB,EAAA,EAAKuB,MAAN,CAAYtB,MAAO,CAACgC,MAAOkI,EAAa3K,EAAI3B,GAAQ,OAAS,IAA7D,SAAmE2D,IACnE,eAACxB,EAAA,EAAK0B,KAAN,UACE,wBAAOzB,MAAO,CAACgC,MAAOkI,EAAa3K,EAAI3B,GAAS,OAAS,IAAzD,SAA+D4D,MAEjE,iCACG0I,EAAa3K,EAAI3B,GAChB,yBAAQ0C,UAAU,iBAAiBgE,QAAS,WAC1C8F,EAAmB7K,EAAI3B,GACvBuP,GAAYD,IAFd,SAIE,eAACzI,GAAA,EAAD,CAAO9D,YAAa,SAAAC,GAAC,OAAIA,EAAEC,kBAAkBG,IAAK0D,GAAOC,OAAK,EAAC1D,IAAI,eAAejB,MAAO,CAAC4E,MAAO,MAAOC,OAAQ,WAGlH,yBAAQvE,UAAU,eAAegE,QAAS,WACxC6F,EAAc5K,EAAI3B,EAAM6C,EAASK,EAAQS,EAAOC,GAChD2L,GAAYD,IAFd,SAIE,eAACzI,GAAA,EAAD,CAAO9D,YAAa,SAAAC,GAAC,OAAIA,EAAEC,kBAAkBG,IAAKsI,GAAM3E,OAAK,EAAC1D,IAAI,YAAYjB,MAAO,CAAC4E,MAAO,MAAOC,OAAQ,WAIhH,yBAAQvE,UAAU,eAAeN,MAAO,CAAC6O,MAAO,SAAUC,gBAAiB,UAAWxK,QAAO,wBAAE,6BAAAqE,EAAA,sEACjEsF,EAAmB1O,EAAIuB,GAD0C,QACvFqN,EADuF,UAG3F9D,EAAkB8D,EAAe,SACjChB,GAAYD,IAJ+E,2CAA/F,SAOE,eAACzI,GAAA,EAAD,CAAO9D,YAAa,SAAAC,GAAC,OAAIA,EAAEC,kBAAkBG,IAAK+N,GAAUpK,OAAK,EAAC1D,IAAI,0BAA0BjB,MAAO,CAAC4E,MAAO,MAAOC,OAAQ,WAGhI,yBAAQvE,UAAU,iBAAiBN,MAAO,CAAC6O,MAAO,SAAUC,gBAAiB,UAAWxK,QAAO,wBAAE,6BAAAqE,EAAA,sEACnEsF,EAAmB1O,EAAIuB,GAD4C,QACzFqN,EADyF,UAG7F7D,EAAuB6D,EAAe,SACtChB,GAAYD,IAJiF,2CAAjG,SAOE,eAACzI,GAAA,EAAD,CAAO9D,YAAa,SAAAC,GAAC,OAAIA,EAAEC,kBAAkBG,IAAKgO,GAAWrK,OAAK,EAAC1D,IAAI,6BAA6BjB,MAAO,CAAC4E,MAAO,MAAOC,OAAQ,mBAK1I,eAACzE,EAAA,EAAD,CAAKC,GAAG,oBAnECb,WC+EpByP,GAhHK,SAAC,GAAgC,IAA9B/Q,EAA6B,EAA7BA,QAAS8P,EAAoB,EAApBA,cAC9B,EAA8BxL,oBAAS,GAAvC,oBAAO0K,EAAP,KAAgBC,EAAhB,KAEM+B,EAAmB,yCAAG,WAAO3P,GAAP,wBAAAoJ,EAAA,yDACtBuF,EADsB,iBACD3O,EADC,YACKiM,eAAeC,QAAQ,iBACd,OAArCD,eAAeC,QAAQyC,GAFA,wBAGpBiB,EAAiB,GAHG,SAILnB,EAAczO,EAAI,SAAU,SAJvB,eAKV6O,KADVrD,EAJoB,cAKiBqD,IAAdrD,EAAO,GALV,yCAKmC,MALnC,OAMxB,IAAQsD,EAAI,EAAGA,EAAItD,EAAOvG,OAAQ6J,IAC5B/O,EAAOyL,EAAOsD,GAClBc,EAAe/C,KAAK,CAClB7M,GAAID,EAAKC,GACT3B,KAAM,QACN6C,QAASnB,EAAKiO,cAAcC,QAC5B1M,OAAS4M,KAAEC,QAAQrO,EAAKuO,QAA+B,KAArBvO,EAAKuO,OAAO,GAAGnD,IACjDnJ,MAAOjC,EAAK0M,KACZxK,SAAUlC,EAAKpB,QAAQoJ,KAAI,SAAC2E,GAAD,OAAYA,EAAOD,QAAMyB,KAAK,QAE3DnB,QAAQC,IAAIjN,EAAKC,GAAID,EAAK0M,KAAM1M,EAAK8P,aAAc9P,EAAK+M,aAAc/M,EAAK+P,mBAE7E7D,eAAe8C,QAAQJ,EAAUK,KAASC,SAASC,KAAKC,UAAUS,KAlB1C,iCAoBnBV,KAAKE,MAAMJ,KAASK,WAAWpD,eAAeC,QAAQyC,MApBnC,4CAAH,sDAuBzB,OACE,eAAC,IAAM1I,SAAP,UACG4H,OAAOC,KAAKnP,GAASsG,OAAS,GAC7B,sBAAKlE,UAAU,UAAf,SACGpC,EAAQJ,MAAMwJ,KAAI,SAAC2E,EAAQzM,GAC1B,IAAID,EAAK0M,EAAO1M,GAAI3B,EAAO,SAAU6C,EAAUwL,EAAOsB,cAAcC,QAASjM,EAAQ0K,EAAOD,KACxFlL,EAAU4M,KAAEC,QAAQ1B,EAAO4B,QAAiC,KAAvB5B,EAAO4B,OAAO,GAAGnD,IAC1D,OACE,eAAC,IAAMlF,SAAP,UACE,eAAC+E,GAAgBuD,SAAjB,UACG,gBAAE5D,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,cAAeC,EAA/B,EAA+BA,mBAAoBC,EAAnD,EAAmDA,kBAAmBC,EAAtE,EAAsEA,uBAAtE,OACC,eAACvK,EAAA,EAAD,CAAMO,UAAU,cAAcN,MAAO,CAACC,OAAQ,YAAagC,gBAAiBiI,EAAa3K,EAAI3B,GAAQ,QAAU,IAA/G,SACE,eAACsC,EAAA,EAAD,UACE,gBAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKC,GAAG,OAAR,SACE,oBACEC,UAAU,gBACVC,OAAO,SACPC,KAAMC,EACNC,IAAI,sBACJV,MAAO,CAAC6J,OAAQK,EAAa3K,EAAI3B,GAAQ,kBAAoB,oBAC7D+C,YAAa,SAAAC,GAAC,OAAIA,EAAEC,kBANtB,SAQc,OAAXC,EACC,eAACf,EAAA,EAAKgB,IAAN,CAAUC,IAAKiL,EAAO4B,OAAO,GAAGnD,IAAKzJ,IAAI,WAEzC,eAAClB,EAAA,EAAKgB,IAAN,CAAUC,IAAKI,GAAUH,IAAI,uBAInC,eAACb,EAAA,EAAD,UACE,gBAACL,EAAA,EAAKsB,KAAN,WACE,eAACtB,EAAA,EAAKuB,MAAN,CAAYtB,MAAO,CAACgC,MAAOkI,EAAa3K,EAAI3B,GAAQ,OAAS,IAA7D,SAAmE2D,IACnE,iCACG2I,EAAa3K,EAAI3B,GAChB,yBAAQ0C,UAAU,iBAAiBgE,QAAS,WAC1C8F,EAAmB7K,EAAI3B,GACvBuP,GAAYD,IAFd,SAIE,eAACzI,GAAA,EAAD,CAAO9D,YAAa,SAAAC,GAAC,OAAIA,EAAEC,kBAAkBG,IAAK0D,GAAOC,OAAK,EAAC1D,IAAI,gBAAgBjB,MAAO,CAAC4E,MAAO,MAAOC,OAAQ,WAGnH,yBAAQvE,UAAU,eAAegE,QAAS,WACxC6F,EAAc5K,EAAI3B,EAAM6C,EAASK,EAAQS,EAtC4C,MAuCrF4L,GAAYD,IAFd,SAIE,eAACzI,GAAA,EAAD,CAAO9D,YAAa,SAAAC,GAAC,OAAIA,EAAEC,kBAAkBG,IAAKsI,GAAM3E,OAAK,EAAC1D,IAAI,aAAajB,MAAO,CAAC4E,MAAO,MAAOC,OAAQ,WAIjH,yBAAQvE,UAAU,eAAeN,MAAO,CAAC6O,MAAO,UAAWvK,QAAO,wBAAE,6BAAAqE,EAAA,sEACrCuG,EAAoB3P,EAAIuB,GADa,QAC5DqO,EAD4D,UAGhE9E,EAAkB8E,EAAgB,SAClChC,GAAYD,IAJoD,2CAApE,SAOE,eAACzI,GAAA,EAAD,CAAO9D,YAAa,SAAAC,GAAC,OAAIA,EAAEC,kBAAkBG,IAAK+N,GAAUpK,OAAK,EAAC1D,IAAI,2BAA2BjB,MAAO,CAAC4E,MAAO,MAAOC,OAAQ,WAGjI,yBAAQvE,UAAU,iBAAiBN,MAAO,CAAC6O,MAAO,UAAWvK,QAAO,wBAAE,6BAAAqE,EAAA,sEACvCuG,EAAoB3P,EAAIuB,GADe,QAC9DqO,EAD8D,UAGlE7E,EAAuB6E,EAAgB,SACvChC,GAAYD,IAJsD,2CAAtE,SAOE,eAACzI,GAAA,EAAD,CAAO9D,YAAa,SAAAC,GAAC,OAAIA,EAAEC,kBAAkBG,IAAKgO,GAAWrK,OAAK,EAAC1D,IAAI,8BAA8BjB,MAAO,CAAC4E,MAAO,MAAOC,OAAQ,8BA3DlIrF,WCuBpB8P,GA7DM,SAACvQ,GACpB,IAAQwQ,EAAmExQ,EAAnEwQ,SAAUvB,EAAyDjP,EAAzDiP,cAAejD,EAA0ChM,EAA1CgM,OAAQyE,EAAkCzQ,EAAlCyQ,YAAaC,EAAqB1Q,EAArB0Q,iBAC9C9R,EAA4BoN,EAA5BpN,OAAQK,EAAoB+M,EAApB/M,OAAQE,EAAY6M,EAAZ7M,QAExB,OACE,gBAAC,IAAMsH,SAAP,WACE,uBAAKlF,UAAU,iBAAf,WACIoN,KAAEC,QAAQhQ,EAAOG,QACjB,yBACEwC,UAAS,UACc,WAArBmP,EAAgC,aAAe,OAEjDnL,QAAS,kBAAMkL,EAAY,WAJ7B,oBASA9B,KAAEC,QAAQ3P,EAAOF,QACjB,yBACEwC,UAAS,UACc,WAArBmP,EAAgC,aAAe,OAEjDnL,QAAS,kBAAMkL,EAAY,WAJ7B,qBASA9B,KAAEC,QAAQzP,EAAQJ,QAClB,yBACEwC,UAAS,UACc,YAArBmP,EAAiC,aAAe,OAElDnL,QAAS,kBAAMkL,EAAY,YAJ7B,wBAWJ,sBAAKlP,UAAS,UAA0B,WAArBmP,EAAgC,GAAK,QAAxD,SACGzR,GAAU,eAAC,GAAD,CAAYL,OAAQA,MAEjC,sBAAK2C,UAAS,UAA0B,WAArBmP,EAAgC,GAAK,QAAxD,SACGzR,GAAU,eAAC,GAAD,CAAYA,OAAQA,EAAQgQ,cAAeA,MAExD,sBAAK1N,UAAS,UAA0B,YAArBmP,EAAiC,GAAK,QAAzD,SACGvR,GAAW,eAAC,GAAD,CAAaA,QAASA,EAAS8P,cAAeA,OAG1DN,KAAEC,QAAQ5C,EAAO0E,MACjB/B,KAAEC,QAAQ5C,EAAO0E,GAAkB5R,OACnC,sBAAKyC,UAAU,YAAf,SACE,eAACgF,GAAA,EAAD,CAAQC,QAAQ,OAAO3H,KAAK,SAAS0G,QAAS,kBAAMiL,EAASE,IAA7D,6BCvDJC,GAAW,cAKXC,GAAoB,SAACC,GACzB,IAAKF,GAASG,KAAKD,GAAK,CACtB,IAAMhS,SAAcgS,EACpB,MAAM,IAAIE,UAAJ,qEAEO,WAATlS,EAAoBgS,EAAKhS,EAFvB,eAOR,IAAMmS,EAAa,YAAIH,EAAGI,eAAe1I,KAAI,SAAA2I,GAAC,OAAIA,EAAEC,cAZvC,UAab,OAAOC,OAAOC,cAAP,MAAAD,OAAM,YAAkBJ,KA+ClBM,GA1CI,SAACtR,GAClB,MAAoCyD,mBAAS,IAA7C,oBAAO4I,EAAP,KAAmBkF,EAAnB,KACA,EAAgC9N,mBAAS,IAAzC,oBAAO+N,EAAP,KAAiBC,EAAjB,KACA,EAAwBhO,mBAA8C,OAArCgJ,eAAeC,QAAQ,UAAqBkE,GAAkBnE,eAAeC,QAAQ,WAAa,gBAAnI,oBAAOgF,EAAP,KAAaC,EAAb,KAmBA,OACE,+BACE,gBAACC,GAAA,EAAD,CAAMhL,SAdW,SAACiL,GACpBA,EAAM/P,iBACoB,KAAtBuK,EAAWyF,QACbL,EAAY,IACZE,EAAQf,GAAkBnE,eAAeC,QAAQ,YACjDD,eAAe8C,QAAQ,eAAgB9C,eAAeC,QAAQ,WAC9D1M,EAAM+R,aAAa1F,IAEnBoF,EAAY,gCAMZ,UACGD,GAAY,oBAAGjQ,UAAU,WAAb,SAAyBiQ,IACtC,gBAACQ,GAAA,EAAD,WACE,eAACJ,GAAA,EAAKK,QAAN,CACEpT,KAAK,SACLoO,KAAK,aACLpG,MAAOwF,EACPjC,YAAY,eACZtD,SA3BgB,SAAC+K,GACzB,IAAMxF,EAAawF,EAAMrQ,OAAOqF,MAChC0K,EAAclF,IA0BN6F,aAAa,QAEf,eAACF,GAAA,EAAWtP,KAAZ,CAAiBlC,GAAG,cAApB,SAAmCkR,aCrC9BS,GApBA,SAACnS,GACd,MAAeyD,mBAASyB,SAASkN,cAAc,QAAxCC,EAAP,qBACMC,EAASpN,SAASqN,cAAc,WAgBtC,OAdAtN,qBAAU,WACRqN,EAAOE,YAAYH,GAAMI,UAAUrF,IAAI,aACtC,CAACkF,EAAQD,IAEZpN,qBAAU,WACJjF,EAAMgG,MACRsM,EAAOG,UAAUC,OAAO,QACxBxN,SAASyN,KAAKF,UAAUrF,IAAI,iBAE5BkF,EAAOG,UAAUrF,IAAI,QACrBlI,SAASyN,KAAKF,UAAUC,OAAO,kBAEhC,CAACJ,EAAQtS,EAAMgG,OAEX4M,IAASC,aAAa7S,EAAM8S,SAAUT,IC8DhCU,gBARS,SAACrU,GACvB,MAAO,CACLE,OAAQF,EAAME,OACdK,OAAQP,EAAMO,OACdE,QAAST,EAAMS,WAIJ4T,EArEG,SAAC/S,GACjB,MAAkCyD,oBAAS,GAA3C,oBAAOuP,EAAP,KAAkBC,EAAlB,KACA,EAAgD,CAACjT,EAAM0Q,iBAAkB1Q,EAAMkT,gBAAxExC,EAAP,KAAyByC,EAAzB,KAEMpB,EAAY,yCAAG,WAAO1F,GAAP,UAAAzC,EAAA,sDACnBqJ,GAAa,GACbjT,EAAMuM,SAASH,GAAkBC,IAAa+G,MAAK,WACjDH,GAAa,MAHI,2CAAH,sDAOZzC,EAAQ,yCAAG,WAAO3R,GAAP,sBAAA+K,EAAA,sDACP2C,EAAsCvM,EAAtCuM,SAAU3N,EAA4BoB,EAA5BpB,OAAQK,EAAoBe,EAApBf,OAAQE,EAAYa,EAAZb,QAClC8T,GAAa,GAFE,KAGPpU,EAHO,OAIR,WAJQ,OAOR,WAPQ,OAUR,YAVQ,wCAKL0N,EAASkB,GAAuB7O,EAAOE,OALlC,2DAQLyN,EAASmB,GAAuBzO,EAAOH,OARlC,6DAWLyN,EAASoB,GAAwBxO,EAAQL,OAXpC,4CAefmU,GAAa,GAfE,4CAAH,sDAkBRhE,EAAa,yCAAG,WAAOzO,EAAIqN,EAAUC,GAArB,gBAAAlE,EAAA,6DACpBqJ,GAAa,GADO,SAEDrF,GAAiBpN,EAAIqN,EAAUC,GAF9B,cAEhB9B,EAFgB,OAGpBiH,GAAa,GAHO,kBAIbjH,GAJa,2CAAH,0DAUbA,EAAS,CAAEpN,OADmBoB,EAA5BpB,OACiBK,OADWe,EAApBf,OACiBE,QADGa,EAAZb,SAGxB,OACE,eAAC,IAAMsH,SAAP,UACE,iCACE,eAAC,GAAD,CAAYsL,aAAcA,IAC1B,gBAAC,GAAD,CAAQ/L,KAAMgN,EAAd,UACE,eAACK,GAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SAAStS,MAAO,CAACuS,YAAa,YADjE,gBAIA,eAAC,GAAD,CACExH,OAAQA,EACRwE,SAAUA,EACVvB,cAAeA,EACfwB,YAjBY,SAACgD,GAAeN,EAAoBM,IAkBhD/C,iBAAkBA,YChDbgD,G,kDAhBX,WAAY1T,GAAQ,IAAD,8BACjB,cAAMA,IAIRkT,eAAiB,SAACO,GAAD,OAAc,EAAK1J,SAAS,CAAE2G,iBAAkB+C,KAH/D,EAAK/U,MAAQ,CAAEgS,iBAAkB,UAFhB,E,0CAOnB,WACI,OACE,sBAAKnP,UAAU,iBAAf,SACE,eAAC,GAAD,CAA2CmP,iBAAkBpQ,KAAK5B,MAAMgS,iBAAkBwC,eAAgB5S,KAAK4S,gBAA/F5S,KAAKN,MAAM2T,sB,GAXXhR,IAAMC,WCiRnBgR,GAlRM,CAEjhCQ,SAAC7T,GACtB,MAA4ByD,mBAA8C,OAArCgJ,eAAeC,QAAQ,UAAqB,KAAOD,eAAeC,QAAQ,WAA/G,oBAAOoH,EAAP,KAAeC,EAAf,KACAtH,eAAe8C,QAAQ,SAAUuE,GAQjC,OACE,+BACE,eAACxM,GAAA,EAAD,CACEC,UAAW,OACXC,QAAS,eAACC,GAAA,EAAD,4BAFX,SAIE,eAACmK,GAAA,EAAKoC,OAAN,CACExT,GAAG,kBACH,aAAW,0BACX0F,KAAK,KACLW,MAAOiN,EACPhN,SAjBkB,SAAC+K,GACzB,IAAMiC,EAASjC,EAAMrQ,OAAOqF,MAC5B4F,eAAe8C,QAAQ,SAAUuE,GACjCC,EAAUD,IASN,SAOGF,GAAarL,KAAI,SAACsI,GACf,OAAQ,yBAAQtP,UAAU,yBAAmCsF,MAAOgK,EAA5D,SAAiEA,GAAhBA,aC5BxD,OAA0B,mCCA1B,OAA0B,qCCmBnC1P,GAAYrB,IAAOC,IAAV,kGAMT4E,GAAe,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WACvEsP,GAAgB,CAAC,OAAQ,MAAO,OAElCN,IAAiB,EACjBO,IAAiB,EACjBC,IAAgB,EAChBC,IAAe,EACfC,IAAqB,EACrBC,IAAiB,EACjBC,GAAiB,cACjBC,IAAoB,EACpBC,GAAoB,GACpB5K,IAAiB,EAEfR,G,4JACJ,WACE,MAAgF/I,KAAKN,MAA7E0J,EAAR,EAAQA,OAAQgL,EAAhB,EAAgBA,QAASjU,EAAzB,EAAyBA,MAAO+D,EAAhC,EAAgCA,aAAcE,EAA9C,EAA8CA,cAAemF,EAA7D,EAA6DA,eACvD9K,EAAQ2K,EAAOlE,QAAQ+C,KAAI,SAAAoM,GAAM,OAAID,EAAQC,MACnD,OAAO,eAAC,GAAD,CAA6BjL,OAAQA,EAAQ3K,MAAOA,EAAO0B,MAAOA,EAAO+D,aAAcA,EAAcE,cAAeA,EAAeC,aAAcA,GAAckF,eAAgBA,GAAlKqK,Q,GAJAvR,IAAMiS,eAQxBC,G,4MAEJnW,MAAgD,OAAxC+N,eAAeC,QAAQ,aAAwBgD,KAAKE,MAAMJ,KAASK,WAAWpD,eAAeC,QAAQ,eAAiB,EAAKoI,QAAQ9J,K,EAE3I+J,mBAAqB,kBAAMtI,eAAe8C,QAAQ,YAAaC,KAASC,SAASC,KAAKC,UAAU,EAAKjR,U,EAmFrGsW,eAAiB,SAAAnT,GACf,IAAMoT,EAAa,IAAIC,WACvBD,EAAWE,WAAWtT,EAAEL,OAAO4T,MAAM,GAAI,SACzCH,EAAWI,OAAS,SAAAxT,GAClB,IAAMyT,EAAW5F,KAAKE,MAAM/N,EAAEL,OAAOwK,QAErC,KAAK,gBAAiBsJ,GAAY,UAAWA,GAAY,YAAaA,GAAY,cAAeA,EAASrK,SACvG,OAAQqK,EAASrK,QAAQ,cAAqD,cAArCqK,EAASrK,QAAQ,aAAazK,IACvE,YAAa8U,EAASrK,QAAQ,cAAgBsK,MAAMC,QAAQF,EAASrK,QAAQ,aAAazF,UAI3F,OAHA8O,IAAiB,EACjBC,GAAiB,kCACjB,EAAKxK,SAAS,EAAKrL,OAKrB,IAAI+W,GAAkB,EAChBC,EAAqB,CAAC,KAAM,QAAS,QAAS,WAMpD,GALArH,OAAOC,KAAKgH,EAASrK,SAAS8B,SAAQ,SAASC,GAC7C,GAAIyI,GAA2B,cAARzI,EAAvB,CACA,IAAM2I,EAAatH,OAAOC,KAAKgH,EAASrK,QAAQ+B,IAChDyI,EAAkBE,EAAWlQ,SAAWiQ,EAAmBjQ,QAAUkQ,EAAWC,OAAM,SAAShO,EAAG0H,GAAK,OAAO1H,IAAM8N,EAAmBpG,WAErImG,EAIF,OAHAnB,IAAiB,EACjBC,GAAiB,oDACjB,EAAKxK,SAAS,EAAKrL,OAKrB,IAAMwM,EAAcoK,EAASpK,YACzB2K,EAAaxH,OAAOC,KAAKgH,EAASrK,SAEtC,GADA4K,EAAWC,OAAOD,EAAWE,QAAQ,aAAc,GAC9C7K,EAAYzF,SAAWoQ,EAAWpQ,SAAUyF,EAAY0K,OAAM,SAAAI,GAAE,OAAIH,EAAWI,SAASD,MAI3F,OAHA1B,IAAiB,EACjBC,GAAiB,iDACjB,EAAKxK,SAAS,EAAKrL,OAKrB,IAAIwX,GAAgB,EACdC,EAAmB,CAAC,KAAM,OAAQ,UAAW,SAAU,QAAS,YAMtE,GALA9H,OAAOC,KAAKgH,EAASvW,OAAOgO,SAAQ,SAASC,GAC3C,GAAIkJ,EAAJ,CACA,IAAME,EAAW/H,OAAOC,KAAKgH,EAASvW,MAAMiO,IAC5CkJ,EAAgBE,EAAS3Q,SAAW0Q,EAAiB1Q,QAAU2Q,EAASR,OAAM,SAAShO,EAAG0H,GAAK,OAAO1H,IAAMuO,EAAiB7G,WAE3H4G,EAIF,OAHA5B,IAAiB,EACjBC,GAAiB,kDACjB,EAAKxK,SAAS,EAAKrL,OAKrB,IAAMsP,EAAWK,OAAOC,KAAKgH,EAASvW,OAClCyG,EAAU,GAId,GAHA6I,OAAOC,KAAKgH,EAASrK,SAAS8B,SAAQ,SAASC,GAC7CxH,EAAUA,EAAQsG,OAAOwJ,EAASrK,QAAQ+B,GAAKxH,YAE5CA,EAAQC,SAAWuI,EAASvI,SAAUD,EAAQoQ,OAAM,SAAAI,GAAE,OAAIhI,EAASiI,SAASD,MAI/E,OAHA1B,IAAiB,EACjBC,GAAiB,2CACjB,EAAKxK,SAAS,EAAKrL,OAKrBmL,IAAiB,EACjBwK,GAAqBiB,EAASrK,QAAQ,aAAazF,QAAQC,OAAS,IAAM2O,GAC1ET,IAAkBA,GAClB,EAAK5J,SAASuL,K,EAIlBe,mBAAqB,WACnB9I,QAAQC,IAAIiH,K,EAiCd6B,WAAa,SAAC9V,EAAI+V,EAAQC,GACxB,IAAMC,EAAclB,MAAMmB,KAAKF,EAAKhR,SACpCiR,EAAYX,OAAOS,EAAO9V,MAAO,GACjC,IAAMkW,EAAO,2BACRH,GADQ,IAEXhR,QAASiR,IAGLG,EAAW,EAAKlY,MAAMK,MACtBkP,EAAWI,OAAOC,KAAKsI,GAAUC,QAAO,SAACC,EAAQ9J,GAIrD,OAHIA,IAAQxM,IACVsW,EAAO9J,GAAO4J,EAAS5J,IAElB8J,IACN,IAEGxB,EAAQ,2BACT,EAAK5W,OADI,IAEZK,MAAOkP,EACPhD,QAAQ,2BACH,EAAKvM,MAAMuM,SADT,kBAEJ0L,EAAQnW,GAAKmW,MAIlBhD,IAAkBA,GAClB,EAAK5J,SAASuL,I,EAGhByB,gBAAkB,SAACvW,EAAIwW,EAAUrN,GAC/B,IAAMsN,EAAY,EAAKvY,MAAMuM,QAAQzK,GAC/B0W,EAAS,2BACVD,GADU,IAEbzU,MAAOwU,EACP/T,MAAO0G,IAEH2L,EAAQ,2BACT,EAAK5W,OADI,IAEZuM,QAAQ,2BACH,EAAKvM,MAAMuM,SADT,kBAEJzK,EAAK0W,MAGV,EAAKnN,SAASuL,I,EAGhB6B,UAAY,SAAC1W,GACX,IAAM2W,EAAE,kBAAa,IAAIC,MAAOC,WAC5BC,EAAiB,EAAK7Y,MAAMwM,YAChCqM,EAAezB,OAAOrV,EAAO,EAAG2W,GAEhC,IAAM9B,EAAQ,2BACT,EAAK5W,OADI,IAEZwM,YAAaqM,IAEfjC,EAAQ,QAAY8B,GAAM,CACxB5W,GAAI4W,EACJ5U,MAAO,MACPS,MAAO,UACPuC,QAAS,IAEX,EAAKuE,SAASuL,I,EAGhBkC,UAAY,SAAChX,EAAIiX,GACf,IAAMb,EAAW,EAAKlY,MAAMK,MACtBkP,EAAWwJ,EAAYb,EAAWvI,OAAOC,KAAKsI,GAAUC,QAAO,SAACC,EAAQ9J,GAI5E,OAHI,EAAKtO,MAAMuM,QAAQzK,GAAIgF,QAAQyQ,SAASjJ,KAC1C8J,EAAO9J,GAAO4J,EAAS5J,IAElB8J,IACN,IAEGS,EAAiBhC,MAAMmB,KAAK,EAAKhY,MAAMwM,aAC7CqM,EAAezB,OAAOyB,EAAexB,QAAQvV,GAAK,GAElD,IAAMkX,EAAa,EAAKhZ,MAAMuM,QAC3BwM,IAAWC,EAAW,aAAalS,QAAUkS,EAAW,aAAalS,QAAQsG,OAAO4L,EAAWlX,GAAIgF,UACtG,IAAMmS,EAAatJ,OAAOC,KAAKoJ,GAAYb,QAAO,SAACC,EAAQ9J,GAIzD,OAHIA,IAAQxM,IACVsW,EAAO9J,GAAO0K,EAAW1K,IAEpB8J,IACN,IAEGxB,EAAQ,2BACT,EAAK5W,OADI,IAEZK,MAAOkP,EACPhD,QAAS0M,EACTzM,YAAaqM,IAGf5D,IAAkBA,GAClB,EAAK5J,SAASuL,I,EAGhBsC,cAAgB,WACd,IAAID,EAAa,EAAKjZ,MAAMuM,QAC5BoD,OAAOC,KAAKqJ,GAAY5K,SAAQ,SAASC,GAC5B,cAARA,IACH2K,EAAW,aAAanS,QAAUmS,EAAW,aAAanS,QAAQsG,OAAO6L,EAAW3K,GAAKxH,SACzFmS,EAAW3K,GAAKxH,QAAU,OAG5B,IAAM8P,EAAQ,2BACT,EAAK5W,OADI,IAEZuM,QAAS0M,IAGX9N,IAAiB,EACjBwK,IAAsBD,GACtBF,IAAkBA,GAClB,EAAKnK,SAASuL,I,EAGhBuC,eAAiB,WACf,EAAKD,gBACL,IAAMtC,EAAQ,2BACT,EAAK5W,OADI,IAEZuM,QAAQ,2BACH,EAAKvM,MAAMuM,SADT,IAEL,YAAa,CACXzK,GAAI,YACJgF,QAAS,MAGbzG,MAAO,KAGT8K,IAAiB,EACjB8J,IAAkBA,GAClB,EAAK5J,SAASuL,I,EAGhBwC,gBAAkB,WAChB,EAAKF,gBACL,IAAMtC,EAAQ,2BACT,EAAK5W,OADI,IAEZuM,QAAS,CACP,WAAY,CACVzK,GAAI,WACJgC,MAAO,IACPS,MAAO,UACPuC,QAAS,IAEX,WAAY,CACVhF,GAAI,WACJgC,MAAO,IACPS,MAAO,UACPuC,QAAS,IAEX,WAAY,CACVhF,GAAI,WACJgC,MAAO,IACPS,MAAO,UACPuC,QAAS,IAEX,WAAY,CACVhF,GAAI,WACJgC,MAAO,IACPS,MAAO,UACPuC,QAAS,IAEX,YAAY,eACP,EAAK9G,MAAMuM,QAAQ,eAG1BC,YAAa,CAAC,WAAY,WAAY,WAAW,cAGnDrB,IAAiB,EACjB,EAAKE,SAASuL,I,EAGhByC,cAAgB,WACd,EAAKH,gBACL,IAAMtC,EAAQ,2BACT,EAAK5W,OADI,IAEZuM,QAAS,CACP,WAAY,CACVzK,GAAI,WACJgC,MAAO,IACPS,MAAO,UACPuC,QAAS,IAEX,WAAY,CACVhF,GAAI,WACJgC,MAAO,IACPS,MAAO,UACPuC,QAAS,IAEX,WAAY,CACVhF,GAAI,WACJgC,MAAO,IACPS,MAAO,UACPuC,QAAS,IAEX,WAAY,CACVhF,GAAI,WACJgC,MAAO,IACPS,MAAO,UACPuC,QAAS,IAEX,YAAa,CACXhF,GAAI,YACJgF,QAAS,KAGbzG,MAAO,GACPmM,YAAa,CAAC,WAAY,WAAY,WAAW,cAGnDrB,IAAiB,EACjBwK,IAAqB,EACrBV,IAAkBA,GAClB,EAAK5J,SAASuL,I,EAGhB0C,WAAa,SAAChS,GACTA,GACDd,SAAS+S,eAAe,gBAAgBxF,UAAUrF,IAAI,eACtDlI,SAAS+S,eAAe,iBAAiBxF,UAAUrF,IAAI,iBAGvDlI,SAAS+S,eAAe,gBAAgBxF,UAAUC,OAAO,eACzDxN,SAAS+S,eAAe,iBAAiBxF,UAAUC,OAAO,gBAE5DyB,GAAgBnO,EAChB,EAAK+D,SAAS,EAAKrL,Q,EAGrBwZ,UAAY,SAAClS,GACRA,GACDd,SAAS+S,eAAe,gBAAgBxF,UAAUrF,IAAI,cACtDlI,SAAS+S,eAAe,mBAAmBxF,UAAUrF,IAAI,gBAGzDlI,SAAS+S,eAAe,gBAAgBxF,UAAUC,OAAO,cACzDxN,SAAS+S,eAAe,mBAAmBxF,UAAUC,OAAO,eAE9D0B,GAAepO,EACfqO,IAAqB,EACrB,EAAKtK,SAAS,EAAKrL,Q,EAGrByZ,UAAY,SAAAnM,GAAW,IAAD,EACZoM,EAA2CpM,EAA3CoM,YAAa7B,EAA8BvK,EAA9BuK,OAAQlW,EAAsB2L,EAAtB3L,YAAaxB,EAASmN,EAATnN,KAE1C,GAAKuZ,IACDA,EAAYpO,cAAgBuM,EAAOvM,aAAeoO,EAAY3X,QAAU8V,EAAO9V,OAEnF,GAAa,WAAT5B,EAAJ,CAaA,IAAM2X,EAAO,EAAK9X,MAAMuM,QAAQsL,EAAOvM,aACjCqO,EAAU,EAAK3Z,MAAMuM,QAAQmN,EAAYpO,aAE/C,GAAgC,cAA5BoO,EAAYpO,YAKhB,GAAIwM,IAAS6B,EAAb,CAuBA,IAAM5B,EAAclB,MAAMmB,KAAKF,EAAKhR,SACpCiR,EAAYX,OAAOS,EAAO9V,MAAO,GACjC,IAAMkW,EAAO,2BACRH,GADQ,IAEXhR,QAASiR,IAGL6B,EAAiB/C,MAAMmB,KAAK2B,EAAQ7S,SAC1C8S,EAAexC,OAAOsC,EAAY3X,MAAO,EAAGJ,GAC5C,IAAMkY,EAAU,2BACXF,GADW,IAEd7S,QAAS8S,IAGLhD,EAAQ,2BACT,EAAK5W,OADI,IAEZuM,QAAQ,2BACH,EAAKvM,MAAMuM,SADT,uBAEJ0L,EAAQnW,GAAKmW,GAFT,cAGJ4B,EAAW/X,GAAK+X,GAHZ,MAMT,EAAKxO,SAASuL,OA7Cd,CACE,IAAMkD,EAAajD,MAAMmB,KAAKF,EAAKhR,SACnCgT,EAAW1C,OAAOS,EAAO9V,MAAO,GAChC+X,EAAW1C,OAAOsC,EAAY3X,MAAO,EAAGJ,GAExC,IAAMsW,EAAO,2BACRH,GADQ,IAEXhR,QAASgT,IAGLlD,EAAQ,2BACT,EAAK5W,OADI,IAEZuM,QAAQ,2BACH,EAAKvM,MAAMuM,SADT,kBAEJ0L,EAAQnW,GAAKmW,MAIlB,EAAK5M,SAASuL,QAtBd,EAAKgB,WAAWjW,EAAakW,EAAQC,OAjBvC,CACE,IAAMe,EAAiBhC,MAAMmB,KAAK,EAAKhY,MAAMwM,aAC7CqM,EAAezB,OAAOS,EAAO9V,MAAO,GACpC8W,EAAezB,OAAOsC,EAAY3X,MAAO,EAAGJ,GAE5C,IAAMiV,EAAQ,2BACT,EAAK5W,OADI,IAEZwM,YAAaqM,IAEf,EAAKxN,SAASuL,K,0DApclB,WACEjW,OAAO+F,oBAAoB,eAAgB9E,KAAKyU,sB,+BAGlD,WAAqB,IAAD,OAClB1V,OAAO8F,iBAAiB,eAAgB7E,KAAKyU,oBAE7CzU,KAAKwU,QAAQ3J,aAAe,SAAC3K,EAAI3B,GAC/B,OAAG2B,KAAM,EAAK9B,MAAMK,OACX,EAAKL,MAAMK,MAAMyB,GAAjB,OAAiC3B,GAK5CyB,KAAKwU,QAAQ1J,cAAgB,SAAC5K,EAAI3B,EAAM6C,EAASK,EAAQS,EAAOC,GAC9D,IAAG,EAAKqS,QAAQ3J,aAAa3K,EAAI3B,GAAjC,CACA,IAAMoP,EAAQ,2BACT,EAAKvP,MAAMK,OADF,kBAEXyB,EAAK,CACJA,GAAIA,EACJ3B,KAAMA,EACN6C,QAASA,EACTK,OAAQA,EACRS,MAAOA,EACPC,SAAUA,KAGRgW,EAAalD,MAAMmB,KAAK,EAAKhY,MAAMuM,QAAQ,aAAazF,SAASsG,OAAOtL,GACxEkY,EAAW,2BACZ,EAAKha,MAAMuM,QAAQ,cADP,IAEfzF,QAASiT,IAELnD,EAAQ,2BACT,EAAK5W,OADI,IAEZK,MAAOkP,EACPhD,QAAQ,2BACH,EAAKvM,MAAMuM,SADT,IAEL,YAAayN,MAGjBrE,IAAsBD,GACtB,EAAKrK,SAASuL,KAGhBhV,KAAKwU,QAAQzJ,mBAAqB,SAAC7K,EAAI3B,GACrC,GAAI,EAAKiW,QAAQ3J,aAAa3K,EAAI3B,GAAlC,CACA,IAAIoP,EAAW,EAAKvP,MAAMK,aACnBkP,EAASzN,GAEhB,IAAImX,EAAa,EAAKjZ,MAAMuM,QAC5BoD,OAAOC,KAAKqJ,GAAY5K,SAAQ,SAASC,GACvC,IAAM2L,EAAWhB,EAAW3K,GAAKxH,QAAQuQ,QAAQvV,IAChC,IAAdmY,GAAiBhB,EAAW3K,GAAKxH,QAAQsQ,OAAO6C,EAAU,MAG/D,IAAMrD,EAAQ,2BACT,EAAK5W,OADI,IAEZK,MAAOkP,EACPhD,QAAS0M,IAEXzD,IAAkBA,GACoC,IAAnD,EAAKxV,MAAMuM,QAAQ,aAAazF,QAAQC,SAAc4O,IAAqB,GAC9E,EAAKtK,SAASuL,KAGhBhV,KAAKwU,QAAQxJ,kBAAoB,SAACvM,EAAOF,GACvC,IAAI,IAAIyQ,EAAI,EAAGA,EAAIvQ,EAAM0G,OAAQ6J,IAAK,CACpC,IAAI/O,EAAOxB,EAAMuQ,GACjB,EAAKwF,QAAQ1J,cAAc7K,EAAKC,GAAI3B,EAAM0B,EAAKmB,QAASnB,EAAKwB,OAAQxB,EAAKiC,MAAOjC,EAAKkC,YAI1FnC,KAAKwU,QAAQvJ,uBAAyB,SAACxM,EAAOF,GAC5C,IAAI,IAAIyQ,EAAI,EAAGA,EAAIvQ,EAAM0G,OAAQ6J,IAAK,CACpC,IAAI/O,EAAOxB,EAAMuQ,GACjB,EAAKwF,QAAQzJ,mBAAmB9K,EAAKC,GAAI3B,O,uBAuF/C,SAAW+Z,GAAW,IAAD,OACnB/O,IAAiB,EACjBvJ,KAAKyJ,SAASzJ,KAAK5B,OAAO,WACxB,IAAMma,EAAU,SAACC,GACf,IAAMC,EAAO7T,SAASkN,cAAc,KACpC2G,EAAKC,SAAW,YAAYlN,OAAO8M,GACnCG,EAAKtX,KAAOqX,EACZC,EAAKE,SAGHC,EAAWhU,SAAS+S,eAAe,kBACnCkB,EAAeD,EAASE,wBAAwBvT,MAChDwT,EAAYH,EAASI,YAAaC,EAAaL,EAASM,aACzDH,EAAYF,IAAcE,GAAa,GAE1B,SAAbT,GACDa,aAAOP,EAAU,CAAChW,gBAAiB,UAAWwW,WAAY,EAAG7T,MAAOwT,EAAWvT,OAAQyT,IACpFnG,KAAKyF,GAASc,OAAM,SAACC,GAAUtF,IAAiB,EAAMC,GAAiBqF,EAAK,EAAK7P,SAAS,EAAKrL,UAEpF,QAAbka,GACDiB,aAAMX,EAAU,CAAChW,gBAAiB,UAAWwW,WAAY,EAAG7T,MAAOwT,EAAWvT,OAAQyT,IACnFnG,KAAKyF,GAASc,OAAM,SAACC,GAAUtF,IAAiB,EAAMC,GAAiBqF,EAAK,EAAK7P,SAAS,EAAKrL,UAEpF,QAAbka,GACDkB,aAAMZ,EAAU,CAAChW,gBAAiB,UAAW2C,MAAOwT,EAAWvT,OAAQyT,IACpEnG,KAAKyF,GAASc,OAAM,SAACC,GAAUtF,IAAiB,EAAMC,GAAiBqF,EAAK,EAAK7P,SAAS,EAAKrL,e,oBAqUxG,WAAU,IAAD,OACP,OACE,uBAAK8B,GAAG,eAAeS,MAAO,CAACyF,QAAS,OAAQqT,cAAe,SAAUjU,OAAQ,SAAjF,UACE,gBAACC,GAAA,EAAD,CAAOvF,GAAG,eAAewF,KAAMsO,GAAgBrO,OAAQ,WAAOqO,IAAiB,EAAO,EAAKvK,SAAS,EAAKrL,QAAUwH,KAAK,KAAxH,UACE,eAACH,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAACC,aAAa,QAAvC,SACE,eAACN,GAAA,EAAMxD,MAAP,CAAatB,MAAO,CAACgC,MAAO,WAA5B,sBAEF,eAAC8C,GAAA,EAAMzD,KAAP,UACGiS,KAEH,eAACxO,GAAA,EAAMO,OAAP,UACE,eAACC,GAAA,EAAD,CAAQC,QAAQ,UAAUhG,GAAG,aAAa+E,QAAS,WAAO+O,IAAiB,EAAO,EAAKvK,SAAS,EAAKrL,QAArG,uBAGJ,gBAACqH,GAAA,EAAD,CAAOvF,GAAG,iBAAiBwF,KAAMwO,GAAmBvO,OAAQ,WAAOuO,IAAoB,EAAO,EAAKzK,SAAS,EAAKrL,OAAQ+V,GAAoB,IAA7I,UACE,eAAC1O,GAAA,EAAMI,OAAP,CAAcC,aAAW,EAACC,aAAa,QAAvC,SACE,eAACN,GAAA,EAAMxD,MAAP,CAAatB,MAAO,CAACgC,MAAO,WAA5B,oCAEF,eAAC8C,GAAA,EAAMzD,KAAP,CAAYrB,MAAO,CAAC4E,MAAO,QAASa,QAAS,OAAQC,WAAY,SAAUqT,eAAgB,UAA3F,SACE,eAACpI,GAAA,EAAD,CAAMhL,SAAU,SAACiL,GAAWA,EAAM/P,iBAAkB0S,IAAoB,EAAO,EAAKzK,SAAS,EAAKrL,OAAQ+V,GAAoB,GAAI,EAAK4B,sBAAvI,SACE,gBAACrE,GAAA,EAAD,CAAY/Q,MAAO,CAAC4E,MAAO,SAA3B,UACE,eAACmM,GAAA,EAAWtP,KAAZ,CAAiBlC,GAAG,cAAcS,MAAO,CAACgZ,SAAU,UAAWC,gBAAiB,QAASC,iBAAkB,OAAQlX,MAAO,OAAQmX,QAAS,kCAA3I,wCACA,eAACxI,GAAA,EAAKK,QAAN,CACEhR,MAAO,CAACgZ,SAAU,UAAWC,gBAAiB,OAAQC,iBAAkB,QAASC,QAAS,kCAC1Fvb,KAAK,SACLoO,KAAK,aACLpG,MAAO4N,GACPrK,YAAY,cACZtD,SAAU,SAAC+K,GAAY4C,GAAoB5C,EAAMrQ,OAAOqF,MAAO,EAAKkD,SAAS,EAAKrL,QAClFwT,aAAa,eAKrB,eAACnM,GAAA,EAAMO,OAAP,UACE,eAACC,GAAA,EAAD,CAAQC,QAAQ,UAAUhG,GAAG,aAAa+E,QAAS,WAAOiP,IAAoB,EAAO,EAAKzK,SAAS,EAAKrL,OAAQ+V,GAAoB,GAAI,EAAK4B,sBAA7I,yBAIJ,gBAAC,GAAD,CAAWpV,MAAO,CAACoZ,SAAU,OAAQnZ,OAAQ,sBAA7C,UACE,qBAAIK,UAAU,gBAAd,qCACA,uBAAKN,MAAO,CAACyF,QAAS,OAAQ2T,SAAU,OAAQ1T,WAAY,SAAUqT,eAAgB,SAAU9Y,OAAQ,YAAxG,UACE,eAACoG,GAAA,EAAD,CACEC,UAAW,MACXC,QAAS,eAACC,GAAA,EAAD,iCAFX,SAIE,eAAClB,GAAA,EAAD,CAAQ/F,GAAG,iBAAiBS,MAAO4I,GAAiB,CAAC5G,MAAO,SAAW,GAAIiD,KAAK,KAAKM,QAAQ,oBAAoBjB,QAAS,WAAQsE,IAAkBA,GAAgB,EAAKE,SAAS,EAAKrL,QAAvL,oBAGF,eAAC4I,GAAA,EAAD,CACEC,UAAW,MACXC,QAAS,eAACC,GAAA,EAAD,+BAFX,SAIE,gBAAC6S,GAAA,EAAD,CACE/Y,UAAU,mBACV2E,KAAK,KACLM,QAAQ,oBACR+T,YAAY,OACZ/X,MAAM,QACNgY,SAAS,mBANX,UAQE,eAACzT,GAAA,EAAS3G,KAAV,CAAe6G,GAAG,SAAS1B,QAASjF,KAAKsX,cAAzC,6BACA,eAAC7Q,GAAA,EAAS3G,KAAV,CAAe6G,GAAG,SAAS1B,QAASjF,KAAKuX,eAAzC,8BACA,eAAC9Q,GAAA,EAAS3G,KAAV,CAAe6G,GAAG,SAAS1B,QAASjF,KAAKwX,gBAAzC,+BACA,eAAC/Q,GAAA,EAAS3G,KAAV,CAAe6G,GAAG,SAAS1B,QAASjF,KAAKyX,cAAzC,kCAIJ,eAACzQ,GAAA,EAAD,CACEC,UAAW,MACXC,QAAS,eAACC,GAAA,EAAD,yBAFX,SAIE,eAAC6S,GAAA,EAAD,CACE/Y,UAAU,mBACV2E,KAAK,KACLM,QAAQ,oBACR+T,YAAY,OACZ/X,MAAM,OACNgY,SAAS,gBANX,SAQGvG,GAAc1L,KAAI,SAACqQ,GAAD,OACjB,gBAAC7R,GAAA,EAAS3G,KAAV,CAAe6G,GAAG,SAAwBpI,KAAK,SAAS0G,QAAS,kBAAM,EAAKkV,UAAU7B,IAAtF,sBAA2GA,IAA3EA,UAKtC,eAACtR,GAAA,EAAD,CACEC,UAAW,MACXC,QAAS,eAACC,GAAA,EAAD,iCAFX,SAIE,gBAAC6S,GAAA,EAAD,CACE/Y,UAAU,mBACV2E,KAAK,KACLM,QAAQ,oBACR+T,YAAY,OACZ/X,MAAM,OACNgY,SAAS,2BANX,UAQE,eAACzT,GAAA,EAAS3G,KAAV,CAAe6G,GAAG,SAAShG,MAAO,CAACyZ,cAAe,OAAQnV,QAAS,WAAQiP,IAAoB,EAAM,EAAKzK,SAAS,EAAKrL,QAAxH,kCACA,eAACqI,GAAA,EAAS3G,KAAV,CACEqB,KAAI,uCAAkCsK,mBAAmB2D,KAAKC,UAAUrP,KAAK5B,SAC7Esa,SAAS,gBACTxY,GAAG,cACHma,SAAU,WAAQ9Q,IAAiB,EAAO,EAAKE,SAAS,EAAKrL,QAC7DkD,YAAa,SAAAC,GAAC,OAAIA,EAAEC,kBALtB,4BASA,gBAACiF,GAAA,EAAS6T,SAAV,CAAmBpa,GAAG,cAAtB,UACE,wBAAOS,MAAO,CAAC4E,MAAO,OAAQC,OAAQ,QAAS+U,QAAQ,kBAAvD,8BACA,wBACA,wBAAO5Z,MAAO,CAACyF,QAAS,QAAQ7H,KAAK,OAAO2B,GAAG,kBAAkByM,KAAK,kBAAkB6N,OAAO,QAAQhU,SAAUxG,KAAK0U,+BAOhI,gBAAC,IAAD,CAAiBmD,UAAW7X,KAAK6X,UAAjC,UACE,sBAAK3X,GAAG,iBAAR,SACE,sBAAKA,GAAG,kBAAR,SACE,eAAC,IAAD,CAAWwJ,YAAY,QAAQ+Q,UAAU,aAAalc,KAAK,SAA3D,SACG,SAAA6B,GAAQ,OACP,yDACMA,EAASwJ,gBADf,IAEEpJ,IAAKJ,EAASK,SACdiM,IAAKkH,GACL1T,GAAG,mBAEF,EAAK9B,MAAMwM,YAAY3C,KAAI,SAACyS,EAAUva,GACrC,IAAMiJ,EAAS,EAAKhL,MAAMuM,QAAQ+P,GAClC,OACE,uBAAiB/Z,MAAO,CAACyF,QAAS,OAAQqT,cAAe,OAAzD,UACGlQ,IACC,eAAC,GAAD,CAEEpJ,MAAOA,EACP6J,WAAY,EAAK6M,WAHnB,kBACkB1W,IAKpB,eAAC,GAAD,CAEEiJ,OAAQA,EACRgL,QAAS,EAAKhW,MAAMK,MACpB0B,MAAOA,EACP+D,aAAc,EAAKuS,gBACnBrS,cAAe,EAAK8S,UACpB3N,eAAgBA,IANXH,EAAOlJ,MATNC,MAoBboJ,IACC,eAAC,GAAD,CAEEpJ,MAAO,EAAK/B,MAAMwM,YAAYzF,OAC9B6E,WAAY,EAAK6M,WAHnB,kBACkB,EAAKzY,MAAMwM,YAAYzF,SAK1C/E,EAAS0J,oBAOpB,eAAC9C,GAAA,EAAD,CACEC,UAAW,QACXC,QAAS,gBAACC,GAAA,EAAD,WAAU2M,GAAe,OAAS,OAAlC,YAFX,SAIE,gBAAC7N,GAAA,EAAD,CAAQ/F,GAAG,kBAAkB3B,KAAK,SAAS0G,QAAS,kBAAM,EAAK2S,WAAW9D,KAA1E,UACGC,IAAuB,sBAAK7T,GAAG,qBAChC,eAACkF,GAAA,EAAD,CAAO9D,YAAa,SAAAC,GAAC,OAAIA,EAAEC,kBAAkBG,IAAKgZ,GAAWrV,OAAK,EAAC1D,IAAI,qBAAqBjB,MAAO,CAAC4E,MAAO,OAAQC,OAAQ,OAAQgF,OAAQsJ,GAAe,eAAiB,WAG/K,gBAAC8G,GAAA,EAAD,CAAW1a,GAAG,mBAAmBwF,KAAMoO,GAAcnO,OAAQ,kBAAM,EAAKiS,WAAU,IAAQ3Q,UAAW,QAAS4T,QAAM,EAACC,UAAU,EAA/H,UACE,eAACF,GAAA,EAAU/U,OAAX,CAAkBlF,MAAO,CAAC+Y,eAAgB,SAAUI,QAAS,sBAA7D,SACE,eAACc,GAAA,EAAU3Y,MAAX,UAAiB,eAAC,GAAD,QAEnB,gBAAC2Y,GAAA,EAAU5Y,KAAX,CAAgBrB,MAAO,CAACmZ,QAAS,GAAjC,UACE,qBAAI7Y,UAAU,eAAd,mBACA,eAAC,GAAD,CAAUxC,MAASuB,KAAK5B,MAAMuM,QAAQ,aAAazF,QAAQ+C,KAAI,SAAAoM,GAAM,OAAI,EAAKjW,MAAMK,MAAM4V,iBAKhG,eAACrN,GAAA,EAAD,CACEC,UAAW,OACXC,QAAS,gBAACC,GAAA,EAAD,WAAU0M,GAAgB,OAAS,OAAnC,aAFX,SAIE,eAAC5N,GAAA,EAAD,CAAQ/F,GAAG,gBAAgB3B,KAAK,SAAS0G,QAAS,kBAAM,EAAKyS,YAAY7D,KAAzE,SACE,eAACzO,GAAA,EAAD,CAAO9D,YAAa,SAAAC,GAAC,OAAIA,EAAEC,kBAAkBG,IAAKoZ,GAAYzV,OAAK,EAAC1D,IAAI,oBAAoBjB,MAAO,CAAC4E,MAAO,OAAQC,OAAQ,OAAQgF,OAAQqJ,GAAgB,eAAiB,UAGhL,gBAAC+G,GAAA,EAAD,CAAW1a,GAAG,kBAAkBwF,KAAMmO,GAAelO,OAAQ,kBAAM,EAAK+R,YAAW,IAAQzQ,UAAW,MAAO4T,QAAM,EAACC,UAAU,EAA9H,UACE,gBAACF,GAAA,EAAU/U,OAAX,CAAkBlF,MAAO,CAAC+Y,eAAgB,SAAUsB,cAAe,UAAnE,UACE,eAACJ,GAAA,EAAU3Y,MAAX,UAAiB,qBAAIhB,UAAU,eAAd,sBACjB,eAAC,GAAD,CAAgBoS,eAAgBA,QAElC,eAACuH,GAAA,EAAU5Y,KAAX,CAAgBrB,MAAO,CAACmZ,QAAS,eAAgBmB,UAAW,UAA5D,SACE,eAAC,GAAD,CAAe5H,eAAgBA,iB,GA9sBpBhR,IAAMC,WAAvBiS,GACG2G,YAAchQ,GAqtBRqJ,U,cC5vBfjC,IAAS6I,OACP,eAACjQ,GAAgBkQ,SAAjB,CAA0B7U,MAASkE,GAAnC,SACE,eAAC,IAAD,CAAUvL,MAAOA,EAAjB,SACE,eAAC,GAAD,QAGJ0F,SAAS+S,eAAe,U","file":"static/js/main.e6e72374.chunk.js","sourcesContent":["import {\r\n  SET_ALBUMS,\r\n  ADD_ALBUMS,\r\n  SET_ARTISTS,\r\n  ADD_ARTISTS,\r\n  SET_TRACKS,\r\n  ADD_TRACKS\r\n} from '../utils/constants';\r\nimport { get } from '../utils/api';\r\n\r\nexport const setTracks = (tracks) => ({\r\n  type: SET_TRACKS,\r\n  tracks\r\n});\r\nexport const addTracks = (tracks) => ({\r\n  type: ADD_TRACKS,\r\n  tracks\r\n});\r\n\r\nexport const setAlbums = (albums) => ({\r\n  type: SET_ALBUMS,\r\n  albums\r\n});\r\nexport const addAlbums = (albums) => ({\r\n  type: ADD_ALBUMS,\r\n  albums\r\n});\r\n\r\nexport const setArtists = (artists) => ({\r\n  type: SET_ARTISTS,\r\n  artists\r\n});\r\nexport const addArtists = (artists) => ({\r\n  type: ADD_ARTISTS,\r\n  artists\r\n});\r\n\r\nlet searchTracks, searchAlbums;\r\nconst resetSearchSets = () => {\r\n  searchTracks = new Set();\r\n  searchAlbums = new Set();\r\n}\r\n\r\nexport const initiateGetResult = (searchTerm) => {\r\n  resetSearchSets();\r\n  return async (dispatch) => {\r\n    try {\r\n      let API_URL = `https://api.spotify.com/v1/search?query=${encodeURIComponent(\r\n        searchTerm\r\n      )}&type=track,album,artist&limit=24`;\r\n      API_URL += `&market=${sessionStorage.getItem('regionLocked')}`;\r\n      const result = await get(API_URL);\r\n      const { tracks, albums, artists } = result;\r\n      let newTracks = tracks, newAlbums = albums;\r\n      let trackItems = [], albumItems = [];\r\n\r\n      newTracks.items.forEach(function(item) {\r\n        let key = item.name;\r\n        item.artists.forEach(function(artist){\r\n          key += \"\" + artist.id;\r\n        });\r\n        if(!searchTracks.has(key)) {\r\n          searchTracks.add(key);\r\n          trackItems.push(item);\r\n        }\r\n      });\r\n      newTracks.items = trackItems;\r\n      dispatch(setTracks(newTracks));\r\n\r\n      newAlbums.items.forEach(function(item) {\r\n        let key = item.name;\r\n        item.artists.forEach(function(artist){\r\n          key += \"\" + artist.id;\r\n        });\r\n        if(!searchAlbums.has(key) && item.total_tracks > 1) {\r\n          searchAlbums.add(key);\r\n          albumItems.push(item);\r\n        }\r\n      });\r\n      newAlbums.items = albumItems;\r\n      dispatch(setAlbums(newAlbums));\r\n\r\n      return dispatch(setArtists(artists));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateGetPlaylist = (playlistID) => {\r\n  return async (dispatch) => {\r\n\r\n  };\r\n};\r\n\r\nexport const initiateLoadMoreTracks = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const result = await get(url);\r\n      let newTracks = result.tracks;\r\n      let trackItems = [];\r\n\r\n      newTracks.items.forEach(function(item) {\r\n        let key = item.name;\r\n        item.artists.forEach(function(artist){\r\n          key += \"\" + artist.id;\r\n        });\r\n        if(!searchTracks.has(key)) {\r\n          searchTracks.add(key);\r\n          trackItems.push(item);\r\n        }\r\n      });\r\n      newTracks.items = trackItems;\r\n\r\n      return dispatch(addTracks(newTracks));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateLoadMoreAlbums = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const result = await get(url);\r\n      let newAlbums = result.albums;\r\n      let albumItems = [];\r\n\r\n      newAlbums.items.forEach(function(item) {\r\n        let key = item.name;\r\n        item.artists.forEach(function(artist){\r\n          key += \"\" + artist.id;\r\n        });\r\n        if(!searchAlbums.has(key) && item.total_tracks > 1) {\r\n          searchAlbums.add(key);\r\n          albumItems.push(item);\r\n        }\r\n      });\r\n      newAlbums.items = albumItems;\r\n\r\n      return dispatch(addAlbums(newAlbums));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateLoadMoreArtists = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const result = await get(url);\r\n      return dispatch(addArtists(result.artists));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const getMultipleItems = async (id, typeFrom, itemType) => {\r\n  let albumSet = new Set();\r\n  try {\r\n    let allItems = [];\r\n    let API_URL = `https://api.spotify.com/v1/${typeFrom}s/${encodeURIComponent(id)}/${itemType}s?limit=50`;\r\n    if(typeFrom === 'artist') API_URL += `&include_groups=album,single`;\r\n    API_URL += `&market=${sessionStorage.getItem('regionLocked')}`;\r\n    console.log(sessionStorage.getItem('regionLocked'));\r\n    do {\r\n      const result = await get(API_URL);\r\n      const { items, next } = result;\r\n      if(typeFrom === 'artist') {\r\n        let newItems = [];\r\n        items.forEach(function(item) {\r\n          if(!albumSet.has(item.name) && item.total_tracks > 1) {\r\n            albumSet.add(item.name);\r\n            newItems.push(item);\r\n          }\r\n        });\r\n        allItems = allItems.concat(newItems);\r\n      }\r\n      else allItems = allItems.concat(items);\r\n      API_URL = next;\r\n    } while (API_URL);\r\n    return allItems;\r\n  } catch (error) {\r\n    console.log('error', error);\r\n  }\r\n};","export const SET_TRACKS = 'SET_TRACKS';\r\nexport const ADD_TRACKS = 'ADD_TRACKS';\r\nexport const SET_ALBUMS = 'SET_ALBUMS';\r\nexport const ADD_ALBUMS = 'ADD_ALBUMS';\r\nexport const SET_ARTISTS = 'SET_ARTISTS';\r\nexport const ADD_ARTISTS = 'ADD_ARTISTS';","import { SET_TRACKS, ADD_TRACKS } from '../utils/constants';\r\n\r\nconst tracksReducer = (state = {}, action) => {\r\n  const { tracks } = action;\r\n  switch (action.type) {\r\n    case SET_TRACKS:\r\n      return tracks;\r\n    case ADD_TRACKS:\r\n      return {\r\n        ...state,\r\n        next: tracks.next,\r\n        items: [...state.items, ...tracks.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tracksReducer;","import { SET_ALBUMS, ADD_ALBUMS } from '../utils/constants';\r\n\r\nconst albumsReducer = (state = {}, action) => {\r\n  const { albums } = action;\r\n  switch (action.type) {\r\n    case SET_ALBUMS:\r\n      return albums;\r\n    case ADD_ALBUMS:\r\n      return {\r\n        ...state,\r\n        next: albums.next,\r\n        items: [...state.items, ...albums.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default albumsReducer;","import { SET_ARTISTS, ADD_ARTISTS } from '../utils/constants';\r\n\r\nconst artistsReducer = (state = {}, action) => {\r\n  const { artists } = action;\r\n  switch (action.type) {\r\n    case SET_ARTISTS:\r\n      return artists;\r\n    case ADD_ARTISTS:\r\n      return {\r\n        ...state,\r\n        next: artists.next,\r\n        items: [...state.items, ...artists.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default artistsReducer;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport tracksReducer from '../sidebar/reducers/tracks';\r\nimport albumsReducer from '../sidebar/reducers/albums';\r\nimport artistsReducer from '../sidebar/reducers/artists';\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    tracks: tracksReducer,\r\n    albums: albumsReducer,\r\n    artists: artistsReducer\r\n  }),\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","export default __webpack_public_path__ + \"static/media/notrack.885fbb75.svg\";","export default __webpack_public_path__ + \"static/media/noalbum.317b8fb7.svg\";","export default __webpack_public_path__ + \"static/media/noartist.e7aab9ee.svg\";","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { Card, Container, Row, Col } from 'react-bootstrap';\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport notrack from '../../sidebar/images/notrack.svg';\r\nimport noalbum from '../../sidebar/images/noalbum.svg';\r\nimport noartist from '../../sidebar/images/noartist.svg';\r\n\r\nconst ItemContent = styled.div`\r\n  background-color: ${props => (props.isDragging ? '#535353' : 'none')};\r\n  border-radius: 4px;\r\n  width: 17.25rem;\r\n  max-width: 17.25rem;\r\n`;\r\n\r\nconst ItemSmall = styled.small`\r\n  color: ${props => (props.isDragging ? 'white !important' : '#A4A4A4')};\r\n`;\r\n\r\nexport default class Item extends React.Component {\r\n    render() {\r\n      return (\r\n        <Draggable draggableId={this.props.item.id} index={this.props.index}>\r\n          {(provided, snapshot) => (\r\n            <ItemContent\r\n              {...provided.draggableProps}\r\n              {...provided.dragHandleProps}\r\n              ref={provided.innerRef}\r\n              isDragging={snapshot.isDragging}\r\n            >\r\n              <Card style={{ margin: 0 }}>\r\n                <Container>\r\n                  <Row>\r\n                    <Col xs=\"auto\">\r\n                      <a\r\n                        className=\"card-img-link\"\r\n                        target=\"_blank\"\r\n                        href={this.props.item.songURL}\r\n                        rel=\"noopener noreferrer\"\r\n                        onDragStart={e => e.preventDefault()}\r\n                      >\r\n                        {this.props.item.imgURL ? (\r\n                          <Card.Img src={this.props.item.imgURL} alt=\"\" />\r\n                        ) : (\r\n                          <Card.Img src={this.props.item.type === \"track\" ? notrack : this.props.item.type === \"album\" ? noalbum : noartist } alt=\"\" />\r\n                        )}\r\n                      </a>\r\n                    </Col>\r\n                    <Col>\r\n                      <Card.Body>\r\n                        <Card.Title>{this.props.item.title}</Card.Title>\r\n                        {this.props.item.subtitle &&\r\n                          <Card.Text>\r\n                            <ItemSmall isDragging={snapshot.isDragging}>\r\n                              {this.props.item.subtitle}\r\n                            </ItemSmall>\r\n                          </Card.Text>\r\n                        }\r\n                      </Card.Body>\r\n                    </Col>\r\n                  </Row>\r\n                </Container>\r\n              </Card>\r\n            </ItemContent>\r\n          )}\r\n        </Draggable>\r\n      );\r\n    }\r\n  }","export default __webpack_public_path__ + \"static/media/cog-black.a361acd8.svg\";","export default __webpack_public_path__ + \"static/media/palette-black.d38e1bfc.svg\";","export default __webpack_public_path__ + \"static/media/cog-white.07854ec9.svg\";","export default __webpack_public_path__ + \"static/media/palette-white.3218a162.svg\";","export default __webpack_public_path__ + \"static/media/cross.86d4de87.svg\";","import React, { useState, useRef, useEffect } from 'react';\r\nimport { Image, Dropdown, Button, ButtonGroup, OverlayTrigger, Tooltip, ToggleButton, Modal } from 'react-bootstrap';\r\nimport { ColorPicker, useColor, toColor } from \"react-color-palette\";\r\nimport styled from 'styled-components';\r\nimport settings_black from '../imgs/cog-black.svg'\r\nimport palette_black from '../imgs/palette-black.svg'\r\nimport settings_white from '../imgs/cog-white.svg'\r\nimport palette_white from '../imgs/palette-white.svg'\r\nimport cross from '../imgs/cross.svg'\r\nimport \"react-color-palette/lib/css/styles.css\";\r\nimport '../tierlist-styles.css'\r\n\r\nconst TitleStyle = styled.h3.attrs(props => ({\r\n  style: {\r\n    borderBottom: `4px solid ${props.color}`,\r\n    backgroundColor: props.color\r\n  },\r\n  }))`padding: 6px 8px;\r\n  margin-bottom: 0;\r\n  display: flex;\r\n  max-width: 18.25rem;\r\n  user-select: none;\r\n  font-size: 2rem;\r\n`;\r\n\r\nconst InputStyle = styled.textarea`\r\n    flex-grow: 1;\r\n    overflow: hidden;\r\n    word-break: break-all;\r\n    min-height: 40px;\r\n    max-width: 14.25rem;\r\n    height: 40px;\r\n    resize: both;\r\n`;\r\n\r\nconst ButtonStyle = styled.button`\r\n    width: 40px;\r\n    min-width: 40px;\r\n    height: 40px;\r\n    margin-left: 8px;\r\n    outline: none;\r\n    background: transparent;\r\n    border: none;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst Title = props => {\r\n  const inputRef = useRef(null);\r\n  const [id, setID] = useState(props.colData.id);\r\n  const [title, setTitle] = useState(props.colData.title);\r\n  const [color, setColor] = useState(props.colData.color);\r\n  const [color_p, setColor_P] = useColor(\"hex\", props.colData.color);\r\n  const [inputVisible, setInputVisible] = useState(false);\r\n  const [colorPickerVisible, setcolorPickerVisible] = useState(false);\r\n  const [deleteModalShow, setdeleteModalShow] = useState(false);\r\n  const update = props.updateHeader;\r\n  const deleteCol = props.deleteHandler;\r\n  const presetColors = props.presetColors;\r\n\r\n\r\n  function onClickOutSide(e) {\r\n    if (inputRef.current && !inputRef.current.contains(e.target)) {\r\n      setInputVisible(false);\r\n      if(colorPickerVisible) {\r\n        setcolorPickerVisible(false);\r\n        update(id, title, color_p.hex); \r\n      }\r\n      props.setEditing(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (inputVisible) document.addEventListener(\"mousedown\", onClickOutSide);\r\n    return () => { document.removeEventListener(\"mousedown\", onClickOutSide); };\r\n  });\r\n\r\n  useEffect(() => {\r\n    setID(props.colData.id);\r\n    setTitle(props.colData.title);\r\n    setColor(props.colData.color);\r\n  }, [props.colData]);\r\n\r\n  return (\r\n    <div>\r\n      {props.showDeleteButton && (\r\n          <div style={{position: \"relative\"}}>\r\n            <button className=\"column-remove-button\" onClick={() => props.colData.itemIds.length > 0 ? setdeleteModalShow(true) : deleteCol(id, false)}>\r\n              <Image onDragStart={e => e.preventDefault()} src={cross} fluid alt='delete column' style={{width: \"75%\", height: \"75%\"}}/>\r\n            </button>\r\n          </div>\r\n      )}\r\n      <Modal id=\"delete-modal\" show={deleteModalShow} onHide={() => setdeleteModalShow(false)} size=\"sm\">\r\n        <Modal.Header closeButton closeVariant=\"white\">\r\n          <Modal.Title>Confirm Delete</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Do you want to keep or delete the column contents?\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"success\" id=\"keep-items\" onClick={() => {setdeleteModalShow(false); deleteCol(id, true);}}>Keep</Button>\r\n          <Button variant=\"danger\" id=\"delete-items\" onClick={() => {setdeleteModalShow(false); deleteCol(id, false);}}>Delete</Button>\r\n          <Button variant=\"secondary\" id=\"cancel-delete-btn\" onClick={() => {setdeleteModalShow(false);}}>Cancel</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <TitleStyle color={color_p.hex}>\r\n        <React.Fragment>\r\n          {inputVisible ? (\r\n            <form style={{width: \"100%\", display: \"flex\", alignItems: \"center\"}} onSubmit={() => { setInputVisible(false); props.setEditing(false); }} ref={inputRef}>\r\n              <InputStyle\r\n                value={title}\r\n                onChange={e => {\r\n                  setTitle(e.target.value);\r\n                  update(id, e.target.value, color);\r\n                }}\r\n              />\r\n              <Dropdown autoClose=\"inside\" as={ButtonGroup} drop=\"right\"\r\n                onToggle={(isOpen) => {\r\n                  setcolorPickerVisible(isOpen);\r\n                  if(!isOpen) update(id, title, color_p.hex);\r\n                }}\r\n              >\r\n                <OverlayTrigger\r\n                  placement={'top'}\r\n                  overlay={<Tooltip>Edit Color</Tooltip>}\r\n                >\r\n                  <Dropdown.Toggle id='color-toggle' variant=\"secondary\">\r\n                    <Image onDragStart={e => e.preventDefault()} src={color_p.hsv.v < 50 ? palette_white : palette_black} fluid alt='colors' style={{width: \"100%\", height: \"100%\"}}/>\r\n                  </Dropdown.Toggle>\r\n                </OverlayTrigger>\r\n                <Dropdown.Menu id='color-dropdown' variant=\"dark\">\r\n                  <ColorPicker height={160} width={240} color={color_p} onChange={e => {\r\n                    if(e.hsv.h >= 360) {\r\n                      let newHSV = e.hsv;\r\n                      newHSV.h = 360;\r\n                      e = toColor(\"hsv\", newHSV);\r\n                    }\r\n                    setColor_P(e);\r\n                    props.setBorderColor(e.hex);\r\n                  }} hideRGB hideHSV dark />\r\n\r\n                  <div id=\"preset-colors\">\r\n                    {presetColors.map((color, idx) => (\r\n                      <ToggleButton\r\n                        key={idx}\r\n                        className = \"preset-color-button\"\r\n                        id={`color-${idx}`}\r\n                        type=\"radio\"\r\n                        variant=\"light\"\r\n                        style={{backgroundColor: color}}\r\n                        onChange={() => {setColor_P(toColor(\"hex\", color)); props.setBorderColor(color);}}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </form>\r\n          ) : (\r\n            <div style={{width: \"100%\", display: \"flex\", alignItems: \"center\"}}>\r\n              <div style={{color: \"white\", textShadow: \"0 0 4px black\", wordBreak: \"break-all\", flexGrow: \"1\"}}>{title}</div>\r\n                <OverlayTrigger\r\n                  placement={'top'}\r\n                  overlay={<Tooltip>Edit Column</Tooltip>}\r\n                >\r\n                <ButtonStyle onClick={() => { setInputVisible(true); props.setEditing(true); }}>\r\n                  <Image onDragStart={e => e.preventDefault()} src={color_p.hsv.v < 50 ? settings_white : settings_black} fluid alt='settings' style={{width: \"100%\", height: \"100%\"}}/>\r\n                </ButtonStyle> \r\n              </OverlayTrigger>\r\n            </div>\r\n          )}\r\n        </React.Fragment>\r\n      </TitleStyle>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Title; ","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { toColor } from \"react-color-palette\";\r\nimport Item from './Item';\r\nimport Title from './Title'\r\n\r\nconst Container = styled.div`\r\n  border: 4px solid ${props => props.isDragDisabled ? props.bdColorDark : props.bdColor};\r\n  margin: 8px;\r\n  background-color: none;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ItemList = styled.div`\r\n  padding: 8px;\r\n  background-color: ${props => props.isDraggingOver || props.isDragging ? props.bgColor : 'none'};\r\n  transition: background-color 0.2s ease;\r\n  flex-grow: 1;\r\n  min-width: 18.25rem;\r\n  min-height: 20rem;\r\n`;\r\n\r\nclass InnerList extends React.Component {\r\n  shouldComponentUpdate(nextProps) {\r\n    if (nextProps.items === this.props.items) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  render() {\r\n    return this.props.items.map((item, index) => (\r\n      <Item key={item.id} item={item} index={index} />\r\n    ));\r\n  }\r\n}\r\n\r\nexport default class Column extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEditing: false,\r\n      borderColor: this.props.column.color\r\n    }\r\n  }\r\n\r\n  getDarkBorderColor(color) {\r\n    let newColor = toColor(\"hex\", color).hsv;\r\n    newColor.a = 0.77;\r\n    return toColor(\"hsv\", newColor).hex;\r\n  }\r\n\r\n  getBodyColor(color) {\r\n    let newColor = toColor(\"hex\", color).hsv;\r\n    newColor.v = newColor.v / 2;\r\n    newColor.a = 0.64;\r\n    return toColor(\"hsv\", newColor).hex;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Draggable draggableId={this.props.column.id} index={this.props.index} isDragDisabled={this.state.isEditing || this.props.toggleEditMode}>\r\n        {(provided, snapshot) => (\r\n          <Container\r\n            {...provided.draggableProps}\r\n            ref={provided.innerRef}\r\n            isDragDisabled={this.props.toggleEditMode}\r\n            bdColor={this.state.borderColor}\r\n            bdColorDark={this.getDarkBorderColor(this.state.borderColor)}\r\n          >\r\n            <div {...provided.dragHandleProps}>\r\n              <Title\r\n                colData={this.props.column}\r\n                updateHeader={this.props.updateHeader}\r\n                deleteHandler={this.props.deleteHandler}\r\n                showDeleteButton={this.props.toggleEditMode}\r\n                presetColors={this.props.presetColors}\r\n                setEditing={(e) => this.setState({ isEditing: e })}\r\n                setBorderColor={(color) => this.setState({ borderColor: color })}\r\n              />\r\n            </div>\r\n            <Droppable droppableId={this.props.column.id} type=\"item\">\r\n              {(provided, snapshot2) => (\r\n                <ItemList\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  isDragging={snapshot.isDragging}\r\n                  isDraggingOver={snapshot2.isDraggingOver}\r\n                  bgColor={this.getBodyColor(this.props.column.color)}\r\n                >\r\n                  <InnerList items={this.props.items} />\r\n                  {provided.placeholder}\r\n                </ItemList>\r\n              )}\r\n            </Droppable>\r\n          </Container>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/plus.399e19eb.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport { Image } from 'react-bootstrap';\r\nimport plus from '../../tierlist/imgs/plus.svg'\r\n\r\nconst Container = styled.div`\r\n  background-color: none;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 22rem;\r\n`;\r\n\r\nexport default class AddColumnButton extends React.Component {\r\n  render() {\r\n    return (\r\n      <Draggable draggableId={`add-btn-${this.props.index}`} index={this.props.index} isDragDisabled={true}> \r\n        {(provided) => (\r\n          <Container\r\n            {...provided.draggableProps}\r\n            ref={provided.innerRef}\r\n          >\r\n            <button className=\"column-add-button\" onClick={() => this.props.addHandler(this.props.index)}>\r\n              <Image onDragStart={e => e.preventDefault()} src={plus} fluid alt='add column' style={{width: \"62.5%\", height: \"62.5%\"}}/>\r\n            </button>\r\n          </Container>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport Item from './Item';\r\n\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  border: 1px solid #1DB954;\r\n  background-color: none;\r\n  border-radius: 2px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 19.43rem;\r\n  height: calc(100vh - 11.375rem);\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst ItemList = styled.div`\r\n  padding: 8px;\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${props => props.isDraggingOver ? '#282828' : 'none'};\r\n  flex-grow: 1;\r\n`;\r\n\r\nclass InnerList extends React.Component {\r\n  shouldComponentUpdate(nextProps) {\r\n    if (nextProps.items === this.props.items) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  render() {\r\n    return this.props.items.map((item, index) => (\r\n      <Item key={item.id} item={item} index={index} />\r\n    ));\r\n  }\r\n}\r\n\r\nexport default class ItemPool extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Droppable droppableId=\"item-pool\" type=\"item\">\r\n          {(provided, snapshot) => (\r\n            <ItemList\r\n              ref={provided.innerRef}\r\n              {...provided.droppableProps}\r\n              isDraggingOver={snapshot.isDraggingOver}\r\n            >\r\n              <InnerList items={this.props.items} />\r\n              {provided.placeholder}\r\n            </ItemList>\r\n          )}\r\n        </Droppable>\r\n      </Container>\r\n    );\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/trash-can.26a1eb4d.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport { Image } from 'react-bootstrap';\r\nimport trash from '../imgs/trash-can.svg'\r\n\r\nconst Container = styled.div`\r\n  margin: 0.5rem auto;\r\n  border: 1px solid ${props => props.isDraggingOver ? 'red' : 'darkred'};\r\n  transition: border 0.2s ease;\r\n  background-color: none;\r\n  border-radius: 2px;\r\n  width: 19.43rem;\r\n  height: 4.75rem;\r\n  max-height: 4.75rem;\r\n  overflow-y: hidden;\r\n`;\r\n\r\nconst ItemList = styled.div`\r\n  padding: 8px;\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${props => props.isDraggingOver ? '#530000' : 'none'};\r\n  height: 100%;\r\n`;\r\n\r\nconst TrashHeading = styled.h1`\r\n  color: ${props => props.isDraggingOver ? 'red' : '#BB0000'};\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst defaultTrashColor = \"invert(8%) sepia(98%) saturate(5962%) hue-rotate(2deg) brightness(93%) contrast(110%)\";\r\nconst highlightTrashColor = \"invert(11%) sepia(77%) saturate(7498%) hue-rotate(6deg) brightness(105%) contrast(118%)\";\r\n\r\nexport default class TrashCan extends React.Component {\r\n  render() {\r\n    return (\r\n      <Droppable droppableId=\"trash-can\" type=\"item\">\r\n        {(provided, snapshot) => (\r\n          <div style={{position: \"relative\"}}>\r\n            <TrashHeading className=\"main-heading\" isDraggingOver={snapshot.isDraggingOver}>\r\n             <Image src={trash} fluid alt='trash can' style={{width: \"4rem\", transition: \"filter 0.2s ease\", filter: snapshot.isDraggingOver ? highlightTrashColor : defaultTrashColor}}/>\r\n            </TrashHeading>\r\n            <Container isDraggingOver={snapshot.isDraggingOver}>\r\n              <ItemList\r\n                ref={provided.innerRef}\r\n                {...provided.droppableProps}\r\n                isDraggingOver={snapshot.isDraggingOver}\r\n              >\r\n                {provided.placeholder}\r\n              </ItemList>\r\n            </Container>\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nexport const initialData = {\r\n  data: {\r\n    items: {},\r\n    columns: {\r\n      'column-1': {\r\n        id: 'column-1',\r\n        title: 'S',\r\n        color: '#DC3CA0',\r\n        itemIds: [],\r\n      },\r\n      'column-2': {\r\n        id: 'column-2',\r\n        title: 'A',\r\n        color: '#F63E02',\r\n        itemIds: [],\r\n      },\r\n      'column-3': {\r\n        id: 'column-3',\r\n        title: 'B',\r\n        color: '#F5B700',\r\n        itemIds: [],\r\n      },\r\n      'column-4': {\r\n        id: 'column-4',\r\n        title: 'C',\r\n        color: '#1DB954',\r\n        itemIds: [],\r\n      },\r\n      'item-pool': {\r\n        id: 'item-pool',\r\n        itemIds: [],\r\n      }\r\n    },\r\n    columnOrder: ['column-1', 'column-2', 'column-3','column-4']\r\n  },\r\n  containsItem: (id) => {},\r\n  addToItemPool: (id, type, songURL, imgURL, title, subtitle) => {},\r\n  deleteFromItemPool: (id, type) => {},\r\n  addManyToItemPool: (items) => {},\r\n  deleteManyFromItemPool: (items) => {}\r\n}\r\n\r\nexport const TierListContext = React.createContext(initialData);","import axios from 'axios';\r\n\r\nexport const get = async (url) => {\r\n  const gateway = process.env.REACT_APP_GATEWAY;\r\n  const result = await axios.get(gateway.concat(encodeURIComponent(url)));\r\n  return result.data;\r\n};","import React, { useState } from 'react';\r\nimport { Card, Container, Row, Col, Image } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport notrack from '../images/notrack.svg';\r\nimport cross from '../../tierlist/imgs/cross.svg'\r\nimport plus from '../../tierlist/imgs/plus.svg'\r\nimport { TierListContext } from '../../tierlist/TierListContext';\r\n\r\nconst TracksList = ({ tracks }) => {\r\n  const [updater, setUpdater] = useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(tracks).length > 0 && (\r\n        <div className=\"tracks\">\r\n          {tracks.items.map((track, index) => {\r\n            let id = track.id, type = 'track', songURL = track.external_urls.spotify, title = track.name, subtitle = track.artists.map((artist) => artist.name).join(', ');\r\n            let imgURL = !_.isEmpty(track.album.images) ? track.album.images[0].url : null;\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <TierListContext.Consumer>\r\n                  {({containsItem, addToItemPool, deleteFromItemPool}) => (\r\n                    <Card className=\"search-card\" style={{margin: \"0.25rem 0\", backgroundColor: containsItem(id, type) ? \"black\" : \"\"}}>\r\n                      <Container>\r\n                        <Row>\r\n                          <Col xs=\"auto\">\r\n                            <a\r\n                              className=\"card-img-link\"\r\n                              target=\"_blank\"\r\n                              href={songURL}\r\n                              rel=\"noopener noreferrer\"\r\n                              style={{filter: containsItem(id, type) ? \"brightness(50%)\" : \"brightness(100%)\"}}\r\n                              onDragStart={e => e.preventDefault()}\r\n                            >\r\n                              {imgURL !== null ? (\r\n                                <Card.Img src={imgURL} alt=\"track album cover\" />\r\n                              ) : (\r\n                                <Card.Img src={notrack} alt=\"default album cover\" />\r\n                              )}\r\n                            </a>\r\n                          </Col>\r\n                          <Col>\r\n                            <Card.Body>\r\n                              <Card.Title style={{color: containsItem(id, type) ? \"#555\" : \"\"}}>{title}</Card.Title>\r\n                              <Card.Text>\r\n                                <small style={{color: containsItem(id, type) ?  \"#555\" : \"\"}}>{subtitle}</small>\r\n                              </Card.Text>\r\n                              <div>\r\n                                {containsItem(id, type) ? (\r\n                                  <button className=\"remove-buttons\" onClick={() => {\r\n                                    deleteFromItemPool(id, type);\r\n                                    setUpdater(!updater);\r\n                                  }}>\r\n                                    <Image onDragStart={e => e.preventDefault()} src={cross} fluid alt='remove track' style={{width: \"75%\", height: \"75%\"}}/>\r\n                                  </button>\r\n                                ) : (\r\n                                  <button className=\"item-buttons\" onClick={() => {\r\n                                    addToItemPool(id, type, songURL, imgURL, title, subtitle);\r\n                                    setUpdater(!updater);\r\n                                  }}>\r\n                                    <Image onDragStart={e => e.preventDefault()} src={plus} fluid alt='add track' style={{width: \"65%\", height: \"65%\"}}/>\r\n                                  </button>\r\n                                )}\r\n                              </div>\r\n                            </Card.Body>\r\n                          </Col>\r\n                        </Row>\r\n                      </Container>\r\n                    </Card>\r\n                  )}\r\n                </TierListContext.Consumer>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TracksList;","export default __webpack_public_path__ + \"static/media/cross-all.65a55dfa.svg\";","export default __webpack_public_path__ + \"static/media/plus-all.776547ee.svg\";","import React, { useState } from 'react';\r\nimport { Card, Container, Row, Col, Image } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport noalbum from '../images/noalbum.svg';\r\nimport cross from '../../tierlist/imgs/cross.svg'\r\nimport plus from '../../tierlist/imgs/plus.svg'\r\nimport cross_all from '../../tierlist/imgs/cross-all.svg'\r\nimport plus_all from '../../tierlist/imgs/plus-all.svg'\r\nimport { TierListContext } from '../../tierlist/TierListContext';\r\nimport LZString from 'lz-string';\r\n\r\nconst AlbumsList = ({ albums, getInnerItems }) => {\r\n  const [updater, setUpdater] = useState(false);\r\n\r\n  const getTracksFromAlbum = async (id, imgURL) => {\r\n    let cacheKey = `album_${id}`;\r\n    if(sessionStorage.getItem(cacheKey) === null) {\r\n      let albumContents = [];\r\n      let result = await getInnerItems(id, 'album', 'track');\r\n      if(result === undefined || result[0] === undefined) return null;\r\n      for(let i = 0; i < result.length; i++) {\r\n        let item = result[i];\r\n        albumContents.push({\r\n          id: item.id,\r\n          type: 'track',\r\n          songURL: item.external_urls.spotify,\r\n          imgURL: imgURL,\r\n          title: item.name,\r\n          subtitle: item.artists.map((artist) => artist.name).join(', ')\r\n        })\r\n      }\r\n      sessionStorage.setItem(cacheKey, LZString.compress(JSON.stringify(albumContents)));\r\n    }\r\n    return JSON.parse(LZString.decompress(sessionStorage.getItem(cacheKey)));\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(albums).length > 0 && (\r\n        <div className=\"albums\">\r\n          {albums.items.map((album, index) => {\r\n            let id = album.id, type = 'album', songURL = album.external_urls.spotify, title = album.name, subtitle = album.artists.map((artist) => artist.name).join(', ');\r\n            let imgURL = !_.isEmpty(album.images) ? album.images[0].url : null;\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <TierListContext.Consumer>\r\n                  {({containsItem, addToItemPool, deleteFromItemPool, addManyToItemPool, deleteManyFromItemPool}) => (\r\n                    <Card className=\"search-card\" style={{margin: \"0.25rem 0\", backgroundColor: containsItem(id, type) ? \"black\" : \"\"}}>\r\n                      <Container>\r\n                        <Row>\r\n                          <Col xs=\"auto\">\r\n                            <a\r\n                              className=\"card-img-link\"\r\n                              target=\"_blank\"\r\n                              href={songURL}\r\n                              rel=\"noopener noreferrer\"\r\n                              style={{filter: containsItem(id, type) ? \"brightness(50%)\" : \"brightness(100%)\"}}\r\n                              onDragStart={e => e.preventDefault()}\r\n                            >\r\n                              {imgURL !== null ? (\r\n                                <Card.Img src={album.images[0].url} alt=\"album cover\" />\r\n                              ) : (\r\n                                <Card.Img src={noalbum} alt=\"default album cover\" />\r\n                              )}\r\n                            </a>\r\n                          </Col>\r\n                          <Col>\r\n                            <Card.Body>\r\n                              <Card.Title style={{color: containsItem(id, type) ? \"#555\" : \"\"}}>{title}</Card.Title>\r\n                              <Card.Text>\r\n                                <small style={{color: containsItem(id, type) ?  \"#555\" : \"\"}}>{subtitle}</small>\r\n                              </Card.Text>\r\n                              <div>\r\n                                {containsItem(id, type) ? (\r\n                                  <button className=\"remove-buttons\" onClick={() => {\r\n                                    deleteFromItemPool(id, type);\r\n                                    setUpdater(!updater);\r\n                                  }}>\r\n                                    <Image onDragStart={e => e.preventDefault()} src={cross} fluid alt='remove album' style={{width: \"75%\", height: \"75%\"}}/>\r\n                                  </button>\r\n                                ) : (\r\n                                  <button className=\"item-buttons\" onClick={() => {\r\n                                    addToItemPool(id, type, songURL, imgURL, title, subtitle);\r\n                                    setUpdater(!updater);\r\n                                  }}>\r\n                                    <Image onDragStart={e => e.preventDefault()} src={plus} fluid alt='add album' style={{width: \"65%\", height: \"65%\"}}/>\r\n                                  </button>\r\n                                )}\r\n\r\n                                <button className=\"item-buttons\" style={{right: \"2.5rem\", transitionDelay: \"0.025s\"}} onClick={async () => {\r\n                                  const albumContents = await getTracksFromAlbum(id, imgURL);\r\n                                  if(albumContents) {\r\n                                    addManyToItemPool(albumContents, 'track');\r\n                                    setUpdater(!updater);\r\n                                  }\r\n                                }}>\r\n                                  <Image onDragStart={e => e.preventDefault()} src={plus_all} fluid alt='add all tracks in album' style={{width: \"60%\", height: \"60%\"}}/>\r\n                                </button>\r\n\r\n                                <button className=\"remove-buttons\" style={{right: \"4.5rem\", transitionDelay: \"0.050s\"}} onClick={async () => {\r\n                                  const albumContents = await getTracksFromAlbum(id, imgURL);\r\n                                  if(albumContents) {\r\n                                    deleteManyFromItemPool(albumContents, 'track');\r\n                                    setUpdater(!updater);\r\n                                  }\r\n                                }}>\r\n                                  <Image onDragStart={e => e.preventDefault()} src={cross_all} fluid alt='remove all tracks in album' style={{width: \"60%\", height: \"60%\"}}/>\r\n                                </button>\r\n                              </div>\r\n                            </Card.Body>\r\n                          </Col>\r\n                          <Col xs=\"auto\">\r\n                          </Col>\r\n                        </Row>\r\n                      </Container>\r\n                    </Card>\r\n                  )}\r\n                </TierListContext.Consumer>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AlbumsList;","import React, { useState } from 'react';\r\nimport { Card, Container, Row, Col, Image } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport noartist from '../images/noartist.svg';\r\nimport cross from '../../tierlist/imgs/cross.svg'\r\nimport plus from '../../tierlist/imgs/plus.svg'\r\nimport cross_all from '../../tierlist/imgs/cross-all.svg'\r\nimport plus_all from '../../tierlist/imgs/plus-all.svg'\r\nimport { TierListContext } from '../../tierlist/TierListContext';\r\nimport LZString from 'lz-string';\r\n\r\nconst ArtistsList = ({ artists, getInnerItems }) => {\r\n  const [updater, setUpdater] = useState(false);\r\n\r\n  const getAlbumsFromArtist = async (id) => {\r\n    let cacheKey = `artist_${id}_${sessionStorage.getItem('regionLocked')}`;\r\n    if(sessionStorage.getItem(cacheKey) === null) {\r\n      let artistContents = [];\r\n      let result = await getInnerItems(id, 'artist', 'album');\r\n      if(result === undefined || result[0] === undefined) return null;\r\n      for(let i = 0; i < result.length; i++) {\r\n        let item = result[i];\r\n        artistContents.push({\r\n          id: item.id,\r\n          type: 'album',\r\n          songURL: item.external_urls.spotify,\r\n          imgURL: !_.isEmpty(item.images) ? item.images[0].url : null,\r\n          title: item.name,\r\n          subtitle: item.artists.map((artist) => artist.name).join(', ')\r\n        })\r\n        console.log(item.id, item.name, item.release_date, item.total_tracks, item.available_markets);\r\n      }\r\n      sessionStorage.setItem(cacheKey, LZString.compress(JSON.stringify(artistContents)));\r\n    }\r\n    return JSON.parse(LZString.decompress(sessionStorage.getItem(cacheKey)));\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(artists).length > 0 && (\r\n        <div className=\"artists\">\r\n          {artists.items.map((artist, index) => {\r\n            let id = artist.id, type = 'artist', songURL = artist.external_urls.spotify, title = artist.name, subtitle = null;\r\n            let imgURL = !_.isEmpty(artist.images) ? artist.images[0].url : null;\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <TierListContext.Consumer>\r\n                  {({containsItem, addToItemPool, deleteFromItemPool, addManyToItemPool, deleteManyFromItemPool}) => (\r\n                    <Card className=\"search-card\" style={{margin: \"0.25rem 0\", backgroundColor: containsItem(id, type) ? \"black\" : \"\"}}>\r\n                      <Container>\r\n                        <Row>\r\n                          <Col xs=\"auto\">\r\n                            <a\r\n                              className=\"card-img-link\"\r\n                              target=\"_blank\"\r\n                              href={songURL}\r\n                              rel=\"noopener noreferrer\"\r\n                              style={{filter: containsItem(id, type) ? \"brightness(50%)\" : \"brightness(100%)\"}}\r\n                              onDragStart={e => e.preventDefault()}\r\n                            >\r\n                              {imgURL !== null ? (\r\n                                <Card.Img src={artist.images[0].url} alt=\"artist\" />\r\n                              ) : (\r\n                                <Card.Img src={noartist} alt=\"default artist\" />\r\n                              )}\r\n                            </a>\r\n                          </Col>\r\n                          <Col>\r\n                            <Card.Body>\r\n                              <Card.Title style={{color: containsItem(id, type) ? \"#555\" : \"\"}}>{title}</Card.Title>\r\n                              <div>\r\n                                {containsItem(id, type) ? (\r\n                                  <button className=\"remove-buttons\" onClick={() => {\r\n                                    deleteFromItemPool(id, type);\r\n                                    setUpdater(!updater);\r\n                                  }}>\r\n                                    <Image onDragStart={e => e.preventDefault()} src={cross} fluid alt='remove artist' style={{width: \"75%\", height: \"75%\"}}/>\r\n                                  </button>\r\n                                ) : (\r\n                                  <button className=\"item-buttons\" onClick={() => {\r\n                                    addToItemPool(id, type, songURL, imgURL, title, subtitle);\r\n                                    setUpdater(!updater);\r\n                                  }}>\r\n                                    <Image onDragStart={e => e.preventDefault()} src={plus} fluid alt='add artist' style={{width: \"65%\", height: \"65%\"}}/>\r\n                                  </button>\r\n                                )}\r\n\r\n                                <button className=\"item-buttons\" style={{right: \"2.5rem\"}} onClick={async () => {\r\n                                  const artistContents = await getAlbumsFromArtist(id, imgURL);\r\n                                  if(artistContents) {\r\n                                    addManyToItemPool(artistContents, 'album');\r\n                                    setUpdater(!updater);\r\n                                  }\r\n                                }}>\r\n                                  <Image onDragStart={e => e.preventDefault()} src={plus_all} fluid alt='add all albums in artist' style={{width: \"60%\", height: \"60%\"}}/>\r\n                                </button>\r\n\r\n                                <button className=\"remove-buttons\" style={{right: \"4.5rem\"}} onClick={async () => {\r\n                                  const artistContents = await getAlbumsFromArtist(id, imgURL);\r\n                                  if(artistContents) {\r\n                                    deleteManyFromItemPool(artistContents, 'album');\r\n                                    setUpdater(!updater);\r\n                                  }\r\n                                }}>\r\n                                  <Image onDragStart={e => e.preventDefault()} src={cross_all} fluid alt='remove all albums in artist' style={{width: \"60%\", height: \"60%\"}}/>\r\n                                </button>\r\n                              </div>\r\n                            </Card.Body>\r\n                          </Col>\r\n                        </Row>\r\n                      </Container>\r\n                    </Card>\r\n                  )}\r\n                </TierListContext.Consumer>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ArtistsList;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport TracksList from './TracksList';\r\nimport AlbumsList from './AlbumsList';\r\nimport ArtistsList from './ArtistsList';\r\n\r\nconst SearchResult = (props) => {\r\n  const { loadMore, getInnerItems, result, setCategory, selectedCategory } = props;\r\n  const { tracks, albums, artists } = result;\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"search-buttons\">\r\n        {!_.isEmpty(tracks.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'tracks' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('tracks')}\r\n          >\r\n            Songs\r\n          </button>\r\n        )}\r\n        {!_.isEmpty(albums.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'albums' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('albums')}\r\n          >\r\n            Albums\r\n          </button>\r\n        )}\r\n        {!_.isEmpty(artists.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'artists' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('artists')}\r\n          >\r\n            Artists\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <div className={`${selectedCategory === 'tracks' ? '' : 'hide'}`}>\r\n        {albums && <TracksList tracks={tracks} />}\r\n      </div>\r\n      <div className={`${selectedCategory === 'albums' ? '' : 'hide'}`}>\r\n        {albums && <AlbumsList albums={albums} getInnerItems={getInnerItems} />}\r\n      </div>\r\n      <div className={`${selectedCategory === 'artists' ? '' : 'hide'}`}>\r\n        {artists && <ArtistsList artists={artists} getInnerItems={getInnerItems} />}\r\n      </div>\r\n\r\n      {!_.isEmpty(result[selectedCategory]) &&\r\n       !_.isEmpty(result[selectedCategory].next) && (\r\n        <div className=\"load-more\">\r\n          <Button variant=\"info\" type=\"button\" onClick={() => loadMore(selectedCategory)}>\r\n            Load More\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SearchResult;","import React, { useState } from 'react';\r\nimport { InputGroup, Form } from 'react-bootstrap';\r\n\r\n// country code regex\r\nconst CC_REGEX = /^[a-z]{2}$/i;\r\n\r\n// offset between uppercase ascii and regional indicator symbols\r\nconst OFFSET = 127397;\r\n\r\nconst countryCodetoFlag = (cc) => {\r\n  if (!CC_REGEX.test(cc)) {\r\n    const type = typeof cc;\r\n    throw new TypeError(\r\n      `cc argument must be an ISO 3166-1 alpha-2 string, but got '${\r\n        type === 'string' ? cc : type\r\n      }' instead.`,\r\n    );\r\n  }\r\n\r\n  const codePoints = [...cc.toUpperCase()].map(c => c.codePointAt() + OFFSET);\r\n  return String.fromCodePoint(...codePoints);\r\n}\r\n\r\n// the code above is derived from https://github.com/thekelvinliu/country-code-emoji/blob/main/src/index.js\r\n\r\nconst SearchForm = (props) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n  const [flag, setFlag] = useState(sessionStorage.getItem('region') !== null ? countryCodetoFlag(sessionStorage.getItem('region')) : '🌐');\r\n\r\n  const handleInputChange = (event) => {\r\n    const searchTerm = event.target.value;\r\n    setSearchTerm(searchTerm);\r\n  };\r\n\r\n  const handleSearch = (event) => {\r\n    event.preventDefault();\r\n    if (searchTerm.trim() !== '') {\r\n      setErrorMsg('');\r\n      setFlag(countryCodetoFlag(sessionStorage.getItem('region')));\r\n      sessionStorage.setItem('regionLocked', sessionStorage.getItem('region'));\r\n      props.handleSearch(searchTerm);\r\n    } else {\r\n      setErrorMsg('Please enter a search term.');\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleSearch}>\r\n        {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"search\"\r\n            name=\"searchTerm\"\r\n            value={searchTerm}\r\n            placeholder=\"Search here!\"\r\n            onChange={handleInputChange}\r\n            autoComplete=\"off\"\r\n          />\r\n          <InputGroup.Text id=\"search-flag\">{flag}</InputGroup.Text>\r\n        </InputGroup>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchForm;","import { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst Loader = (props) => {\r\n  const [node] = useState(document.createElement('div'));\r\n  const loader = document.querySelector('#loader');\r\n\r\n  useEffect(() => {\r\n    loader.appendChild(node).classList.add('message');\r\n  }, [loader, node]);\r\n\r\n  useEffect(() => {\r\n    if (props.show) {\r\n      loader.classList.remove('hide');\r\n      document.body.classList.add('loader-open');\r\n    } else {\r\n      loader.classList.add('hide');\r\n      document.body.classList.remove('loader-open');\r\n    }\r\n  }, [loader, props.show]);\r\n\r\n  return ReactDOM.createPortal(props.children, node);\r\n};\r\nexport default Loader;","import React, { useState } from 'react';\r\nimport {\r\n  initiateGetResult,\r\n  initiateLoadMoreTracks,\r\n  initiateLoadMoreAlbums,\r\n  initiateLoadMoreArtists,\r\n  getMultipleItems\r\n} from '../actions/result';\r\nimport { connect } from 'react-redux';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport SearchResult from './SearchResult';\r\nimport SearchForm from './SearchForm';\r\nimport Loader from './Loader';\r\n\r\nconst Dashboard = (props) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedCategory, setSelectedCategory] = [props.selectedCategory, props.updateCategory];\r\n\r\n  const handleSearch = async (searchTerm) => {\r\n    setIsLoading(true);\r\n    props.dispatch(initiateGetResult(searchTerm)).then(() => {\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n\r\n  const loadMore = async (type) => {\r\n    const { dispatch, tracks, albums, artists } = props;\r\n    setIsLoading(true);\r\n    switch (type) {\r\n      case 'tracks':\r\n        await dispatch(initiateLoadMoreTracks(tracks.next));\r\n        break;\r\n      case 'albums':\r\n        await dispatch(initiateLoadMoreAlbums(albums.next));\r\n        break;\r\n      case 'artists':\r\n        await dispatch(initiateLoadMoreArtists(artists.next));\r\n        break;\r\n      default:\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const getInnerItems = async (id, typeFrom, itemType) => {\r\n    setIsLoading(true);\r\n    let result = await getMultipleItems(id, typeFrom, itemType);\r\n    setIsLoading(false);\r\n    return result;\r\n  }\r\n\r\n  const setCategory = (category) => { setSelectedCategory(category); };\r\n\r\n  const { tracks, albums, artists } = props;\r\n  const result = { tracks, albums, artists };\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <SearchForm handleSearch={handleSearch} />\r\n        <Loader show={isLoading}>\r\n          <Spinner animation=\"border\" role=\"status\" style={{marginRight: '0.5rem'}}/>\r\n          Loading...\r\n        </Loader>\r\n        <SearchResult\r\n          result={result}\r\n          loadMore={loadMore}\r\n          getInnerItems={getInnerItems}\r\n          setCategory={setCategory}\r\n          selectedCategory={selectedCategory}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tracks: state.tracks,\r\n    albums: state.albums,\r\n    artists: state.artists\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Dashboard);","import React from 'react';\r\nimport Dashboard from './components/Dashboard';\r\n\r\nclass SidebarSearch extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { selectedCategory: 'tracks' };\r\n    }\r\n\r\n    updateCategory = (category) => this.setState({ selectedCategory: category });\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"sidebar-search\">\r\n            <Dashboard key={this.props.refreshSidebar} selectedCategory={this.state.selectedCategory} updateCategory={this.updateCategory} />\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SidebarSearch;","// List derived from https://gist.github.com/frankkienl/a594807bf0dcd23fdb1b\r\n\r\nconst CountryCodes = [\r\n    //A\r\n    \"AD\",\r\n    \"AE\",\r\n    \"AF\",\r\n    \"AG\",\r\n    \"AI\",\r\n    \"AL\",\r\n    \"AM\",\r\n    \"AO\",\r\n    \"AQ\",\r\n    \"AR\",\r\n    \"AS\",\r\n    \"AT\",\r\n    \"AU\",\r\n    \"AW\",\r\n    \"AX\",\r\n    \"AZ\",\r\n    //B\r\n    \"BA\",\r\n    \"BB\",\r\n    \"BD\",\r\n    \"BE\",\r\n    \"BF\",\r\n    \"BG\",\r\n    \"BH\",\r\n    \"BI\",\r\n    \"BJ\",\r\n    \"BL\",\r\n    \"BM\",\r\n    \"BN\",\r\n    \"BO\",\r\n    \"BQ\",\r\n    \"BR\",\r\n    \"BS\",\r\n    \"BT\",\r\n    \"BV\",\r\n    \"BW\",\r\n    \"BY\",\r\n    \"BZ\",\r\n    //C\r\n    \"CA\",\r\n    \"CC\",\r\n    \"CD\",\r\n    \"CF\",\r\n    \"CG\",\r\n    \"CH\",\r\n    \"CI\",\r\n    \"CK\",\r\n    \"CL\",\r\n    \"CM\",\r\n    \"CN\",\r\n    \"CO\",\r\n    \"CR\",\r\n    \"CU\",\r\n    \"CV\",\r\n    \"CW\",\r\n    \"CX\",\r\n    \"CY\",\r\n    \"CZ\",\r\n    //D\r\n    \"DE\",\r\n    \"DJ\",\r\n    \"DK\",\r\n    \"DM\",\r\n    \"DO\",\r\n    \"DZ\",\r\n    //E\r\n    \"EC\",\r\n    \"EE\",\r\n    \"EG\",\r\n    \"EH\",\r\n    \"ER\",\r\n    \"ES\",\r\n    \"ET\",\r\n    //F\r\n    \"FI\",\r\n    \"FJ\",\r\n    \"FK\",\r\n    \"FM\",\r\n    \"FO\",\r\n    \"FR\",\r\n    //G\r\n    \"GA\",\r\n    \"GB\",\r\n    \"GD\",\r\n    \"GE\",\r\n    \"GF\",\r\n    \"GG\",\r\n    \"GH\",\r\n    \"GI\",\r\n    \"GL\",\r\n    \"GM\",\r\n    \"GN\",\r\n    \"GP\",\r\n    \"GQ\",\r\n    \"GR\",\r\n    \"GS\",\r\n    \"GT\",\r\n    \"GU\",\r\n    \"GW\",\r\n    \"GY\",\r\n    //H\r\n    \"HK\",\r\n    \"HM\",\r\n    \"HN\",\r\n    \"HR\",\r\n    \"HT\",\r\n    \"HU\",\r\n    //I\r\n    \"ID\",\r\n    \"IE\",\r\n    \"IL\",\r\n    \"IM\",\r\n    \"IN\",\r\n    \"IO\",\r\n    \"IQ\",\r\n    \"IR\",\r\n    \"IS\",\r\n    \"IT\",\r\n    //J\r\n    \"JE\",\r\n    \"JM\",\r\n    \"JO\",\r\n    \"JP\",\r\n    //K\r\n    \"KE\",\r\n    \"KG\",\r\n    \"KH\",\r\n    \"KI\",\r\n    \"KM\",\r\n    \"KN\",\r\n    \"KP\",\r\n    \"KR\",\r\n    \"KW\",\r\n    \"KY\",\r\n    \"KZ\",\r\n    //L\r\n    \"LA\",\r\n    \"LB\",\r\n    \"LC\",\r\n    \"LI\",\r\n    \"LK\",\r\n    \"LR\",\r\n    \"LS\",\r\n    \"LT\",\r\n    \"LU\",\r\n    \"LV\",\r\n    //M\r\n    \"MA\",\r\n    \"MC\",\r\n    \"MD\",\r\n    \"ME\",\r\n    \"MF\",\r\n    \"MG\",\r\n    \"MH\",\r\n    \"MK\",\r\n    \"ML\",\r\n    \"MM\",\r\n    \"MN\",\r\n    \"MO\",\r\n    \"MP\",\r\n    \"MQ\",\r\n    \"MR\",\r\n    \"MS\",\r\n    \"MT\",\r\n    \"MU\",\r\n    \"MV\",\r\n    \"MW\",\r\n    \"MX\",\r\n    \"MY\",\r\n    \"MZ\",\r\n    //N\r\n    \"NA\",\r\n    \"NC\",\r\n    \"NE\",\r\n    \"NF\",\r\n    \"NG\",\r\n    \"NI\",\r\n    \"NL\",\r\n    \"NO\",\r\n    \"NP\",\r\n    \"NR\",\r\n    \"NU\",\r\n    \"NZ\",\r\n    //O\r\n    \"OM\",\r\n    //P\r\n    \"PA\",\r\n    \"PE\",\r\n    \"PF\",\r\n    \"PG\",\r\n    \"PH\",\r\n    \"PK\",\r\n    \"PL\",\r\n    \"PM\",\r\n    \"PN\",\r\n    \"PR\",\r\n    \"PS\",\r\n    \"PT\",\r\n    \"PW\",\r\n    \"PY\",\r\n    //Q\r\n    \"QA\",\r\n    //R\r\n    \"RE\",\r\n    \"RO\",\r\n    \"RS\",\r\n    \"RU\",\r\n    \"RW\",\r\n    //S\r\n    \"SA\",\r\n    \"SB\",\r\n    \"SC\",\r\n    \"SD\",\r\n    \"SE\",\r\n    \"SG\",\r\n    \"SH\",\r\n    \"SI\",\r\n    \"SJ\",\r\n    \"SK\",\r\n    \"SL\",\r\n    \"SM\",\r\n    \"SN\",\r\n    \"SO\",\r\n    \"SR\",\r\n    \"SS\",\r\n    \"ST\",\r\n    \"SV\",\r\n    \"SX\",\r\n    \"SY\",\r\n    \"SZ\",\r\n    //T\r\n    \"TC\",\r\n    \"TD\",\r\n    \"TF\",\r\n    \"TG\",\r\n    \"TH\",\r\n    \"TJ\",\r\n    \"TK\",\r\n    \"TL\",\r\n    \"TM\",\r\n    \"TN\",\r\n    \"TO\",\r\n    \"TR\",\r\n    \"TT\",\r\n    \"TW\",\r\n    \"TZ\",\r\n    //U\r\n    \"UA\",\r\n    \"UG\",\r\n    \"US\",\r\n    \"UY\",\r\n    \"UZ\",\r\n    //V\r\n    \"VA\",\r\n    \"VC\",\r\n    \"VE\",\r\n    \"VG\",\r\n    \"VI\",\r\n    \"VN\",\r\n    \"VU\",\r\n    //W\r\n    \"WF\",\r\n    \"WS\",\r\n    //Y\r\n    \"YE\",\r\n    \"YT\",\r\n    //Z\r\n    \"ZA\",\r\n    \"ZM\",\r\n    \"ZW\"\r\n];\r\n\r\nexport default CountryCodes;","import React, { useState } from 'react';\r\nimport { Form, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport CountryCodes from './CountryCodes';\r\n\r\nconst RegionSelector = (props) => {\r\n  const [region, setRegion] = useState(sessionStorage.getItem('region') === null ? \"US\" : sessionStorage.getItem('region'));\r\n  sessionStorage.setItem('region', region);\r\n\r\n  const handleInputChange = (event) => {\r\n    const region = event.target.value;\r\n    sessionStorage.setItem('region', region);\r\n    setRegion(region);\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <OverlayTrigger\r\n        placement={'left'}\r\n        overlay={<Tooltip>Select Region</Tooltip>}\r\n      >\r\n        <Form.Select\r\n          id=\"region-selector\"\r\n          aria-label=\"Spotify Region Selector\"\r\n          size=\"sm\"\r\n          value={region}\r\n          onChange={handleInputChange}\r\n        >\r\n          {CountryCodes.map((cc) => {\r\n              return (<option className=\"region-selector-option\" key ={cc} value={cc}>{cc}</option>);\r\n          })}\r\n        </Form.Select>\r\n      </OverlayTrigger>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegionSelector;","export default __webpack_public_path__ + \"static/media/search.75a0c657.svg\";","export default __webpack_public_path__ + \"static/media/playlist.52cda70d.svg\";","import React from 'react';\r\nimport '@atlaskit/css-reset';\r\nimport styled from 'styled-components';\r\nimport Column from './components/Column';\r\nimport AddColumnButton from './components/AddColumnButton';\r\nimport ItemPool from './components/ItemPool';\r\nimport TrashCan from './components/TrashCan';\r\nimport { TierListContext } from './TierListContext';\r\nimport { initiateGetPlaylist } from '../sidebar/actions/result';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport { Button, Offcanvas, Dropdown, DropdownButton, OverlayTrigger, Tooltip, Image, Modal, Form, InputGroup} from 'react-bootstrap';\r\nimport { toJpeg, toPng, toSvg } from 'html-to-image';\r\nimport LZString from 'lz-string';\r\nimport SidebarSearch from '../sidebar/SidebarSearch'\r\nimport RegionSelector from '../sidebar/components/RegionSelector'\r\nimport search_img from './imgs/search.svg'\r\nimport items_img from './imgs/playlist.svg'\r\nimport './tierlist-styles.css';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst presetColors = [\"#F63E02\", \"#F5B700\", \"#1DB954\", \"#4D9DE0\", \"#360568\", \"#DC3CA0\"];\r\nconst saveFileTypes = [\"jpeg\", \"png\", \"svg\"];\r\n\r\nlet refreshSidebar = false;\r\nlet refreshColumns = false;\r\nlet showSearchbar = false;\r\nlet showItemPool = false;\r\nlet showItemNotifBadge = false;\r\nlet showErrorModal = false;\r\nlet errorModalText = \"bottom text\";\r\nlet showPlaylistModal = false;\r\nlet playlistModalText = \"\";\r\nlet toggleEditMode = false;\r\n\r\nclass InnerList extends React.PureComponent {\r\n  render() {\r\n    const { column, itemMap, index, updateHeader, deleteHandler, toggleEditMode } = this.props;\r\n    const items = column.itemIds.map(itemId => itemMap[itemId]);\r\n    return <Column key={refreshColumns} column={column} items={items} index={index} updateHeader={updateHeader} deleteHandler={deleteHandler} presetColors={presetColors} toggleEditMode={toggleEditMode}/>;\r\n  }\r\n}\r\n\r\nclass TierList extends React.Component {\r\n  static contextType = TierListContext;\r\n  state = sessionStorage.getItem('saveState') !== null ? JSON.parse(LZString.decompress(sessionStorage.getItem('saveState'))) : this.context.data;\r\n\r\n  saveStateToStorage = () => sessionStorage.setItem('saveState', LZString.compress(JSON.stringify(this.state)));\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"beforeunload\", this.saveStateToStorage);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"beforeunload\", this.saveStateToStorage);\r\n\r\n    this.context.containsItem = (id, type) => {\r\n      if(id in this.state.items) {\r\n        return this.state.items[id]['type'] === type;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    this.context.addToItemPool = (id, type, songURL, imgURL, title, subtitle) => {\r\n      if(this.context.containsItem(id, type)) return; // do nothing\r\n      const newItems = {\r\n        ...this.state.items,\r\n        [id]: {\r\n          id: id,\r\n          type: type,\r\n          songURL: songURL,\r\n          imgURL: imgURL,\r\n          title: title,\r\n          subtitle: subtitle\r\n        }\r\n      }\r\n      const newItemIds = Array.from(this.state.columns['item-pool'].itemIds).concat(id);\r\n      const newItemPool = {\r\n        ...this.state.columns['item-pool'],\r\n        itemIds: newItemIds\r\n      }\r\n      const newState = {\r\n        ...this.state,\r\n        items: newItems,\r\n        columns: {\r\n          ...this.state.columns,\r\n          'item-pool': newItemPool\r\n        }\r\n      };\r\n      showItemNotifBadge = !showItemPool;\r\n      this.setState(newState);\r\n    };\r\n    \r\n    this.context.deleteFromItemPool = (id, type) => {\r\n      if(!this.context.containsItem(id, type)) return; // do nothing\r\n      let newItems = this.state.items;\r\n      delete newItems[id];\r\n\r\n      let newColumns = this.state.columns;\r\n      Object.keys(newColumns).forEach(function(key) {\r\n        const delIndex = newColumns[key].itemIds.indexOf(id);\r\n        if(delIndex !== -1) newColumns[key].itemIds.splice(delIndex, 1);\r\n      });\r\n\r\n      const newState = {\r\n        ...this.state,\r\n        items: newItems,\r\n        columns: newColumns\r\n      }\r\n      refreshColumns = !refreshColumns;\r\n      if(this.state.columns['item-pool'].itemIds.length === 0) showItemNotifBadge = false;\r\n      this.setState(newState);\r\n    }\r\n\r\n    this.context.addManyToItemPool = (items, type) => {\r\n      for(let i = 0; i < items.length; i++) {\r\n        let item = items[i];\r\n        this.context.addToItemPool(item.id, type, item.songURL, item.imgURL, item.title, item.subtitle);\r\n      }\r\n    }\r\n\r\n    this.context.deleteManyFromItemPool = (items, type) => {\r\n      for(let i = 0; i < items.length; i++) {\r\n        let item = items[i];\r\n        this.context.deleteFromItemPool(item.id, type);\r\n      }\r\n    }\r\n  }\r\n\r\n  // absolutely cursed\r\n  importFromJson = e => {\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\r\n    fileReader.onload = e => {\r\n      const newState = JSON.parse(e.target.result);\r\n      // check if the required keys exist and the item-pool exists in column and has the correct format\r\n      if(!('columnOrder' in newState && 'items' in newState && 'columns' in newState && 'item-pool' in newState.columns\r\n      && 'id' in newState.columns['item-pool'] && newState.columns['item-pool'].id === 'item-pool'\r\n      && 'itemIds' in newState.columns['item-pool'] && Array.isArray(newState.columns['item-pool'].itemIds))) {\r\n        showErrorModal = true;\r\n        errorModalText = \"File is missing item-pool!\"\r\n        this.setState(this.state);\r\n        return;\r\n      }\r\n\r\n      // check if every column has the correct format\r\n      let hasValidColumns = true;\r\n      const requiredColumnKeys = ['id', 'title', 'color', 'itemIds'];\r\n      Object.keys(newState.columns).forEach(function(key) {\r\n        if(!hasValidColumns || key === 'item-pool') return;\r\n        const columnKeys = Object.keys(newState.columns[key]);\r\n        hasValidColumns = columnKeys.length === requiredColumnKeys.length && columnKeys.every(function(v, i) { return v === requiredColumnKeys[i]});\r\n      });\r\n      if(!hasValidColumns) {\r\n        showErrorModal = true;\r\n        errorModalText = \"File is missing required column information!\"\r\n        this.setState(this.state);\r\n        return;\r\n      }\r\n\r\n      // check if every column in columnOrder exists in column (and no extra besides item-pool)\r\n      const columnOrder = newState.columnOrder;\r\n      let allColumns = Object.keys(newState.columns);\r\n      allColumns.splice(allColumns.indexOf('item-pool'), 1);\r\n      if(!(columnOrder.length === allColumns.length && columnOrder.every(el => allColumns.includes(el)))) {\r\n        showErrorModal = true;\r\n        errorModalText = \"File columnOrder and columns don't match!\"\r\n        this.setState(this.state);\r\n        return;\r\n      }\r\n\r\n      // check if every item in items has the correct format\r\n      let hasValidItems = true;\r\n      const requiredItemKeys = ['id', 'type', 'songURL', 'imgURL', 'title', 'subtitle'];\r\n      Object.keys(newState.items).forEach(function(key) {\r\n        if(!hasValidItems) return;\r\n        const itemKeys = Object.keys(newState.items[key]);\r\n        hasValidItems = itemKeys.length === requiredItemKeys.length && itemKeys.every(function(v, i) { return v === requiredItemKeys[i]});\r\n      });\r\n      if(!hasValidItems) {\r\n        showErrorModal = true;\r\n        errorModalText = \"File is missing required item information!\"\r\n        this.setState(this.state);\r\n        return;\r\n      }\r\n\r\n      // check if every itemIDs exists in items (and no extra)\r\n      const allItems = Object.keys(newState.items);\r\n      let itemIds = [];\r\n      Object.keys(newState.columns).forEach(function(key) {\r\n        itemIds = itemIds.concat(newState.columns[key].itemIds);\r\n      });\r\n      if(!(itemIds.length === allItems.length && itemIds.every(el => allItems.includes(el)))) {\r\n        showErrorModal = true;\r\n        errorModalText = \"File items and itemIds don't match!\"\r\n        this.setState(this.state);\r\n        return;\r\n      }\r\n\r\n      // success\r\n      toggleEditMode = false;\r\n      showItemNotifBadge = newState.columns['item-pool'].itemIds.length > 0 && !showItemPool;\r\n      refreshSidebar = !refreshSidebar;\r\n      this.setState(newState);\r\n    };\r\n  }\r\n\r\n  importFromPlaylist = () => {  // TODO\r\n    console.log(playlistModalText);\r\n  }\r\n\r\n  saveAsIMG (fileType) {\r\n    toggleEditMode = false;\r\n    this.setState(this.state, () => {\r\n      const saveIMG = (dataUrl) => {\r\n        const link = document.createElement('a');\r\n        link.download = 'tierlist.'.concat(fileType);\r\n        link.href = dataUrl;\r\n        link.click();\r\n      }\r\n  \r\n      let tierlist = document.getElementById('tierlist-inner');\r\n      let displayWidth = tierlist.getBoundingClientRect().width;\r\n      let fullWidth = tierlist.scrollWidth, fullHeight = tierlist.scrollHeight;\r\n      if(fullWidth > displayWidth) fullWidth += 8;\r\n      \r\n      if(fileType === \"jpeg\") {\r\n        toJpeg(tierlist, {backgroundColor: '#121212', pixelRatio: 2, width: fullWidth, height: fullHeight})\r\n          .then(saveIMG).catch((err) => { showErrorModal = true; errorModalText = err; this.setState(this.state); });\r\n      }\r\n      if(fileType === \"png\") {\r\n        toPng(tierlist, {backgroundColor: '#121212', pixelRatio: 2, width: fullWidth, height: fullHeight})\r\n          .then(saveIMG).catch((err) => { showErrorModal = true; errorModalText = err; this.setState(this.state); });\r\n      }\r\n      if(fileType === \"svg\") {\r\n        toSvg(tierlist, {backgroundColor: '#121212', width: fullWidth, height: fullHeight})\r\n          .then(saveIMG).catch((err) => { showErrorModal = true; errorModalText = err; this.setState(this.state); });\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteItem = (id, source, home) => {\r\n    const homeitemIds = Array.from(home.itemIds);\r\n    homeitemIds.splice(source.index, 1);\r\n    const newHome = {\r\n      ...home,\r\n      itemIds: homeitemIds,\r\n    };\r\n\r\n    const oldItems = this.state.items;\r\n    const newItems = Object.keys(oldItems).reduce((object, key) => {\r\n      if (key !== id) {\r\n        object[key] = oldItems[key];\r\n      }\r\n      return object;\r\n    }, {});\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      items: newItems,\r\n      columns: {\r\n        ...this.state.columns,\r\n        [newHome.id]: newHome,\r\n      },\r\n    };\r\n\r\n    refreshSidebar = !refreshSidebar;\r\n    this.setState(newState);\r\n  }\r\n\r\n  updateColHeader = (id, newTitle, newColor) => {\r\n    const oldHeader = this.state.columns[id];\r\n    const newHeader = {\r\n      ...oldHeader,\r\n      title: newTitle,\r\n      color: newColor\r\n    };\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        [id]: newHeader\r\n      }\r\n    };\r\n    this.setState(newState);\r\n  }\r\n\r\n  addNewCol = (index) => {\r\n    const ID = `column-${new Date().getTime()}`;\r\n    let newColumnOrder = this.state.columnOrder;\r\n    newColumnOrder.splice(index, 0, ID);\r\n    \r\n    const newState = {\r\n      ...this.state,\r\n      columnOrder: newColumnOrder\r\n    };\r\n    newState['columns'][ID] = {\r\n      id: ID,\r\n      title: 'NEW',\r\n      color: '#535353',\r\n      itemIds: [],\r\n    };\r\n    this.setState(newState);\r\n  }\r\n\r\n  removeCol = (id, keepItems) => {\r\n    const oldItems = this.state.items;\r\n    const newItems = keepItems ? oldItems : Object.keys(oldItems).reduce((object, key) => {\r\n      if(!this.state.columns[id].itemIds.includes(key)) {\r\n        object[key] = oldItems[key];\r\n      }\r\n      return object;\r\n    }, {});\r\n\r\n    const newColumnOrder = Array.from(this.state.columnOrder);\r\n    newColumnOrder.splice(newColumnOrder.indexOf(id), 1);\r\n\r\n    const oldColumns = this.state.columns;\r\n    if(keepItems) oldColumns['item-pool'].itemIds = oldColumns['item-pool'].itemIds.concat(oldColumns[id].itemIds);\r\n    const newColumns = Object.keys(oldColumns).reduce((object, key) => {\r\n      if (key !== id) {\r\n        object[key] = oldColumns[key];\r\n      }\r\n      return object;\r\n    }, {});\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      items: newItems,\r\n      columns: newColumns,\r\n      columnOrder: newColumnOrder,\r\n    };\r\n\r\n    refreshSidebar = !refreshSidebar;\r\n    this.setState(newState);\r\n  }\r\n\r\n  resetAllItems = () => {\r\n    let newColumns = this.state.columns;\r\n    Object.keys(newColumns).forEach(function(key) {\r\n      if(key === 'item-pool') return;\r\n      newColumns['item-pool'].itemIds = newColumns['item-pool'].itemIds.concat(newColumns[key].itemIds);\r\n      newColumns[key].itemIds = [];\r\n    });\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      columns: newColumns\r\n    };\r\n    \r\n    toggleEditMode = false;\r\n    showItemNotifBadge = !showItemPool;\r\n    refreshColumns = !refreshColumns;\r\n    this.setState(newState);\r\n  }\r\n\r\n  removeAllItems = () => {\r\n    this.resetAllItems();\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        'item-pool': {\r\n          id: 'item-pool',\r\n          itemIds: [],\r\n        }\r\n      },\r\n      items: {},\r\n    };\r\n\r\n    toggleEditMode = false;\r\n    refreshSidebar = !refreshSidebar;\r\n    this.setState(newState);\r\n  }\r\n\r\n  resetAllColumns = () => {\r\n    this.resetAllItems();\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        'column-1': {\r\n          id: 'column-1',\r\n          title: 'S',\r\n          color: '#DC3CA0',\r\n          itemIds: [],\r\n        },\r\n        'column-2': {\r\n          id: 'column-2',\r\n          title: 'A',\r\n          color: '#F63E02',\r\n          itemIds: [],\r\n        },\r\n        'column-3': {\r\n          id: 'column-3',\r\n          title: 'B',\r\n          color: '#F5B700',\r\n          itemIds: [],\r\n        },\r\n        'column-4': {\r\n          id: 'column-4',\r\n          title: 'C',\r\n          color: '#1DB954',\r\n          itemIds: [],\r\n        },\r\n        'item-pool': {\r\n          ...this.state.columns['item-pool']\r\n        }\r\n      },\r\n      columnOrder: ['column-1', 'column-2', 'column-3','column-4']\r\n    }\r\n\r\n    toggleEditMode = false;\r\n    this.setState(newState);\r\n  }\r\n\r\n  resetTierList = () => {\r\n    this.resetAllItems();\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        'column-1': {\r\n          id: 'column-1',\r\n          title: 'S',\r\n          color: '#DC3CA0',\r\n          itemIds: [],\r\n        },\r\n        'column-2': {\r\n          id: 'column-2',\r\n          title: 'A',\r\n          color: '#F63E02',\r\n          itemIds: [],\r\n        },\r\n        'column-3': {\r\n          id: 'column-3',\r\n          title: 'B',\r\n          color: '#F5B700',\r\n          itemIds: [],\r\n        },\r\n        'column-4': {\r\n          id: 'column-4',\r\n          title: 'C',\r\n          color: '#1DB954',\r\n          itemIds: [],\r\n        },\r\n        'item-pool': {\r\n          id: 'item-pool',\r\n          itemIds: [],\r\n        }\r\n      },\r\n      items: {},\r\n      columnOrder: ['column-1', 'column-2', 'column-3','column-4']\r\n    };\r\n    \r\n    toggleEditMode = false;\r\n    showItemNotifBadge = false;\r\n    refreshSidebar = !refreshSidebar;\r\n    this.setState(newState);\r\n  }\r\n\r\n  showSearch = (show) => {\r\n    if(show) {\r\n      document.getElementById(\"tierlist-all\").classList.add(\"show-search\");\r\n      document.getElementById(\"search-toggle\").classList.add(\"show-search\");\r\n    }\r\n    else {\r\n      document.getElementById(\"tierlist-all\").classList.remove(\"show-search\");\r\n      document.getElementById(\"search-toggle\").classList.remove(\"show-search\");\r\n    }\r\n    showSearchbar = show;\r\n    this.setState(this.state);\r\n  }\r\n\r\n  showItems = (show) => {\r\n    if(show) {\r\n      document.getElementById(\"tierlist-all\").classList.add(\"show-items\");\r\n      document.getElementById(\"itempool-toggle\").classList.add(\"show-items\");\r\n    }\r\n    else {\r\n      document.getElementById(\"tierlist-all\").classList.remove(\"show-items\");\r\n      document.getElementById(\"itempool-toggle\").classList.remove(\"show-items\");\r\n    }\r\n    showItemPool = show;\r\n    showItemNotifBadge = false;\r\n    this.setState(this.state);\r\n  }\r\n\r\n  onDragEnd = result => {\r\n    const { destination, source, draggableId, type } = result;\r\n\r\n    if (!destination) return;\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) return;\r\n\r\n    if (type === 'column') {\r\n      const newColumnOrder = Array.from(this.state.columnOrder);\r\n      newColumnOrder.splice(source.index, 1);\r\n      newColumnOrder.splice(destination.index, 0, draggableId);\r\n\r\n      const newState = {\r\n        ...this.state,\r\n        columnOrder: newColumnOrder\r\n      };\r\n      this.setState(newState);\r\n      return;\r\n    }\r\n\r\n    const home = this.state.columns[source.droppableId];\r\n    const foreign = this.state.columns[destination.droppableId];\r\n\r\n    if (destination.droppableId === 'trash-can') {\r\n      this.deleteItem(draggableId, source, home);\r\n      return;\r\n    }\r\n\r\n    if (home === foreign) {\r\n      const newitemIds = Array.from(home.itemIds);\r\n      newitemIds.splice(source.index, 1);\r\n      newitemIds.splice(destination.index, 0, draggableId);\r\n\r\n      const newHome = {\r\n        ...home,\r\n        itemIds: newitemIds\r\n      };\r\n\r\n      const newState = {\r\n        ...this.state,\r\n        columns: {\r\n          ...this.state.columns,\r\n          [newHome.id]: newHome\r\n        }\r\n      };\r\n\r\n      this.setState(newState);\r\n      return;\r\n    }\r\n\r\n    // moving from one list to another\r\n    const homeitemIds = Array.from(home.itemIds);\r\n    homeitemIds.splice(source.index, 1);\r\n    const newHome = {\r\n      ...home,\r\n      itemIds: homeitemIds,\r\n    };\r\n\r\n    const foreignitemIds = Array.from(foreign.itemIds);\r\n    foreignitemIds.splice(destination.index, 0, draggableId);\r\n    const newForeign = {\r\n      ...foreign,\r\n      itemIds: foreignitemIds,\r\n    };\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        [newHome.id]: newHome,\r\n        [newForeign.id]: newForeign,\r\n      },\r\n    };\r\n    this.setState(newState);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"tierlist-all\" style={{display: 'flex', flexDirection: 'column', height: '100vh'}}>\r\n        <Modal id=\"delete-modal\" show={showErrorModal} onHide={() => {showErrorModal = false; this.setState(this.state);}} size=\"sm\">\r\n          <Modal.Header closeButton closeVariant=\"white\">\r\n            <Modal.Title style={{color: '#D30000'}}>Error!</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            {errorModalText}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"success\" id=\"keep-items\" onClick={() => {showErrorModal = false; this.setState(this.state);}}>Okay</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Modal id=\"playlist-modal\" show={showPlaylistModal} onHide={() => {showPlaylistModal = false; this.setState(this.state); playlistModalText = \"\"; }}>\r\n          <Modal.Header closeButton closeVariant=\"white\">\r\n            <Modal.Title style={{color: '#D30000'}}>Import from Playlist</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body style={{width: '27rem', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\r\n            <Form onSubmit={(event) => {event.preventDefault(); showPlaylistModal = false; this.setState(this.state); playlistModalText = \"\"; this.importFromPlaylist(); }}>\r\n              <InputGroup style={{width: '24rem'}}>\r\n                <InputGroup.Text id=\"search-flag\" style={{fontSize: '0.75rem', borderLeftStyle: 'solid', borderRightStyle: 'none', color: '#777', padding: '0.25rem 0.25rem 0.25rem 0.5rem'}}>open.spotify.com/playlist/</InputGroup.Text>\r\n                <Form.Control\r\n                  style={{fontSize: '0.75rem', borderLeftStyle: 'none', borderRightStyle: 'solid', padding: '0.25rem 0.5rem 0.25rem 0.25rem'}}\r\n                  type=\"search\"\r\n                  name=\"searchTerm\"\r\n                  value={playlistModalText}\r\n                  placeholder=\"playlist id\"\r\n                  onChange={(event) => { playlistModalText = event.target.value; this.setState(this.state); }}\r\n                  autoComplete=\"off\"\r\n                />\r\n              </InputGroup>\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"success\" id=\"keep-items\" onClick={() => {showPlaylistModal = false; this.setState(this.state); playlistModalText = \"\"; this.importFromPlaylist();}}>Import</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Container style={{flexWrap: 'wrap', margin: '1.5rem 3rem 0 3rem'}}>\r\n          <h1 className=\"title-heading\">Spotify Tier List Maker</h1>\r\n          <div style={{display: 'flex', flexWrap: 'wrap', alignItems: 'center', justifyContent: 'center', margin: '0 1.5rem'}}>\r\n            <OverlayTrigger\r\n              placement={'top'}\r\n              overlay={<Tooltip>Add/Delete Columns</Tooltip>}\r\n            >\r\n              <Button id=\"toolbar-button\" style={toggleEditMode ? {color: \"white\"} : {}} size=\"lg\" variant=\"outline-secondary\" onClick={() => { toggleEditMode = !toggleEditMode; this.setState(this.state); }}>Edit</Button>\r\n            </OverlayTrigger>\r\n            \r\n            <OverlayTrigger\r\n              placement={'top'}\r\n              overlay={<Tooltip>Reset Placements</Tooltip>}\r\n            >\r\n              <DropdownButton\r\n                className=\"toolbar-dropdown\"\r\n                size=\"lg\"\r\n                variant=\"outline-secondary\"\r\n                menuVariant=\"dark\"\r\n                title=\"Reset\"\r\n                menuRole=\"Reset placements\"\r\n              >\r\n                <Dropdown.Item as=\"button\" onClick={this.resetAllItems}>Reset All Items</Dropdown.Item>\r\n                <Dropdown.Item as=\"button\" onClick={this.removeAllItems}>Delete All Items</Dropdown.Item>\r\n                <Dropdown.Item as=\"button\" onClick={this.resetAllColumns}>Reset All Columns</Dropdown.Item>\r\n                <Dropdown.Item as=\"button\" onClick={this.resetTierList}>Reset Tier List</Dropdown.Item>\r\n              </DropdownButton>\r\n            </OverlayTrigger>\r\n\r\n            <OverlayTrigger\r\n              placement={'top'}\r\n              overlay={<Tooltip>Save Image</Tooltip>}\r\n            >\r\n              <DropdownButton\r\n                className=\"toolbar-dropdown\"\r\n                size=\"lg\"\r\n                variant=\"outline-secondary\"\r\n                menuVariant=\"dark\"\r\n                title=\"Save\"\r\n                menuRole=\"Save as image\"\r\n              >\r\n                {saveFileTypes.map((fileType) => (\r\n                  <Dropdown.Item as=\"button\" key={fileType} type=\"button\" onClick={() => this.saveAsIMG(fileType)}>Save as .{fileType}</Dropdown.Item>\r\n                ))}\r\n              </DropdownButton>\r\n            </OverlayTrigger>\r\n\r\n            <OverlayTrigger\r\n              placement={'top'}\r\n              overlay={<Tooltip>Import/Export Data</Tooltip>}\r\n            >\r\n              <DropdownButton\r\n                className=\"toolbar-dropdown\"\r\n                size=\"lg\"\r\n                variant=\"outline-secondary\"\r\n                menuVariant=\"dark\"\r\n                title=\"Data\"\r\n                menuRole=\"Import/export .json data\"\r\n              >\r\n                <Dropdown.Item as=\"button\" style={{letterSpacing: '1px'}} onClick={() => { showPlaylistModal = true; this.setState(this.state); }}>Import from Playlist</Dropdown.Item>\r\n                <Dropdown.Item\r\n                  href={`data:text/json;charset=utf-8,${encodeURIComponent(JSON.stringify(this.state))}`}\r\n                  download=\"tierlist.json\"\r\n                  id=\"export-data\"\r\n                  onSelect={() => { toggleEditMode = false; this.setState(this.state); }}\r\n                  onDragStart={e => e.preventDefault()}\r\n                >\r\n                  Export as Json\r\n                </Dropdown.Item>\r\n                <Dropdown.ItemText id=\"import-data\">\r\n                  <label style={{width: '100%', height: '100%'}} htmlFor=\"import_tierlist\">Import from Json</label>\r\n                  <br/>\r\n                  <input style={{display: 'none'}}type=\"file\" id=\"import_tierlist\" name=\"import_tierlist\" accept=\".json\" onChange={this.importFromJson}/>\r\n                </Dropdown.ItemText>\r\n              </DropdownButton>\r\n            </OverlayTrigger>\r\n          </div>\r\n        </Container>\r\n\r\n        <DragDropContext onDragEnd={this.onDragEnd}>\r\n          <div id=\"tierlist-outer\">\r\n            <div id=\"tierlist-holder\">\r\n              <Droppable droppableId=\"tiers\" direction=\"horizontal\" type=\"column\">\r\n                {provided => (\r\n                  <div\r\n                    {...provided.droppableProps}\r\n                    ref={provided.innerRef}\r\n                    key={refreshColumns}\r\n                    id=\"tierlist-inner\"\r\n                  >\r\n                    {this.state.columnOrder.map((columnId, index) => {\r\n                      const column = this.state.columns[columnId];\r\n                      return (\r\n                        <div key={index} style={{display: 'flex', flexDirection: 'row'}}>\r\n                          {toggleEditMode && (\r\n                            <AddColumnButton\r\n                              key={`add-btn-${index}`}\r\n                              index={index}\r\n                              addHandler={this.addNewCol}\r\n                            />\r\n                          )}\r\n                          <InnerList\r\n                            key={column.id}\r\n                            column={column}\r\n                            itemMap={this.state.items}\r\n                            index={index}\r\n                            updateHeader={this.updateColHeader}\r\n                            deleteHandler={this.removeCol}\r\n                            toggleEditMode={toggleEditMode}\r\n                          />\r\n                        </div>\r\n                      );\r\n                    })}\r\n                    {toggleEditMode && (\r\n                      <AddColumnButton\r\n                        key={`add-btn-${this.state.columnOrder.length}`}\r\n                        index={this.state.columnOrder.length}\r\n                        addHandler={this.addNewCol}\r\n                      />\r\n                    )}\r\n                    {provided.placeholder}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </div>\r\n          </div>\r\n\r\n          <OverlayTrigger\r\n            placement={'right'}\r\n            overlay={<Tooltip>{showItemPool ? 'Hide' : 'Show'} Items</Tooltip>}\r\n          >\r\n            <Button id=\"itempool-toggle\" type=\"button\" onClick={() => this.showItems(!showItemPool)}>\r\n              {showItemNotifBadge && (<div id=\"item-notif-badge\"/>)}\r\n              <Image onDragStart={e => e.preventDefault()} src={items_img} fluid alt='toggle music items' style={{width: \"100%\", height: \"100%\", filter: showItemPool ? \"invert(100%)\" : \"\"}}/>\r\n            </Button>\r\n          </OverlayTrigger>\r\n          <Offcanvas id=\"itempool-overlay\" show={showItemPool} onHide={() => this.showItems(false)} placement={'start'} scroll backdrop={false}>\r\n            <Offcanvas.Header style={{justifyContent: \"center\", padding: \"0.5rem 1rem 0 1rem\"}}>\r\n              <Offcanvas.Title><TrashCan /></Offcanvas.Title>\r\n            </Offcanvas.Header>\r\n            <Offcanvas.Body style={{padding: 0}}>\r\n              <h1 className=\"main-heading\">Items</h1>\r\n              <ItemPool items = {this.state.columns['item-pool'].itemIds.map(itemId => this.state.items[itemId])} />\r\n            </Offcanvas.Body>\r\n          </Offcanvas>\r\n        </DragDropContext>\r\n\r\n        <OverlayTrigger\r\n          placement={'left'}\r\n          overlay={<Tooltip>{showSearchbar ? 'Hide' : 'Show'} Search</Tooltip>}\r\n        >\r\n          <Button id=\"search-toggle\" type=\"button\" onClick={() => this.showSearch(!showSearchbar)}>\r\n            <Image onDragStart={e => e.preventDefault()} src={search_img} fluid alt='toggle search bar' style={{width: \"100%\", height: \"100%\", filter: showSearchbar ? \"invert(100%)\" : \"\"}}/>\r\n          </Button>\r\n        </OverlayTrigger>\r\n        <Offcanvas id=\"sidebar-overlay\" show={showSearchbar} onHide={() => this.showSearch(false)} placement={'end'} scroll backdrop={false}>\r\n          <Offcanvas.Header style={{justifyContent: \"center\", paddingBottom: \"0.5rem\"}}>\r\n            <Offcanvas.Title><h1 className=\"main-heading\">Search</h1></Offcanvas.Title>\r\n            <RegionSelector refreshSidebar={refreshSidebar}/>\r\n          </Offcanvas.Header>\r\n          <Offcanvas.Body style={{padding: \"0.5rem 0 0 0\", overflowY: 'scroll'}}>\r\n            <SidebarSearch refreshSidebar={refreshSidebar}/>\r\n          </Offcanvas.Body>\r\n        </Offcanvas>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TierList","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/store';\r\nimport TierList from './tierlist/TierList';\r\nimport { TierListContext, initialData } from './tierlist/TierListContext';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './sidebar-styles.css';\r\n\r\nReactDOM.render(\r\n  <TierListContext.Provider value = {initialData}>\r\n    <Provider store={store}>\r\n      <TierList/>\r\n    </Provider>\r\n  </TierListContext.Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}