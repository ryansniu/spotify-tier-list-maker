{"version":3,"sources":["utils/constants.js","reducers/tracks.js","reducers/albums.js","reducers/artists.js","reducers/playlist.js","store/store.js","utils/functions.js","utils/api.js","actions/result.js","images/music.jpeg","components/TracksList.js","components/AlbumsList.js","components/ArtistsList.js","components/PlayList.js","components/SearchResult.js","components/SearchForm.js","components/Header.js","components/Loader.js","components/Dashboard.js","components/Main.js","index.js"],"names":["SET_TRACKS","ADD_TRACKS","SET_ALBUMS","ADD_ALBUMS","SET_ARTISTS","ADD_ARTISTS","SET_PLAYLIST","ADD_PLAYLIST","tracksReducer","state","action","tracks","type","next","items","albumsReducer","albums","artistsReducer","artists","playlistReducer","playlists","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","playlist","applyMiddleware","thunk","setAuthHeader","params","JSON","parse","localStorage","getItem","axios","defaults","headers","common","error","console","log","get","url","a","result","data","getAuthToken","process","Accept","auth","username","password","grant_type","post","qs","stringify","response","setTracks","setAlbums","setArtists","setPlayList","initiateGetResult","searchTerm","dispatch","API_URL","encodeURIComponent","initiateLoadMoreTracks","initiateLoadMoreAlbums","initiateLoadMoreArtists","initiateLoadMorePlaylist","TracksList","Fragment","Object","keys","length","className","map","track","index","Card","target","href","external_urls","spotify","rel","_","isEmpty","album","images","src","music","alt","Img","variant","Body","Title","name","Text","artist","join","AlbumsList","ArtistsList","PlayList","item","owner","display_name","SearchResult","props","loadMore","setCategory","selectedCategory","onClick","Button","SearchForm","useState","setSearchTerm","errorMsg","setErrorMsg","Form","onSubmit","event","preventDefault","trim","handleSearch","Group","controlId","Control","value","placeholder","onChange","autoComplete","Header","Loader","document","createElement","node","loader","querySelector","useEffect","appendChild","classList","add","show","remove","body","ReactDOM","createPortal","children","connect","isLoading","setIsLoading","setSelectedCategory","isValidSession","refreshSession","then","category","Main","access_token","expires_in","setItem","Date","getTime","loaded","setState","expiryTime","currentTime","this","React","Component","render","getElementById"],"mappings":"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","file":"static/js/main.db22f1d2.chunk.js","sourcesContent":["export const SET_TRACKS = 'SET_TRACKS';\r\nexport const ADD_TRACKS = 'ADD_TRACKS';\r\nexport const SET_ALBUMS = 'SET_ALBUMS';\r\nexport const ADD_ALBUMS = 'ADD_ALBUMS';\r\nexport const SET_ARTISTS = 'SET_ARTISTS';\r\nexport const ADD_ARTISTS = 'ADD_ARTISTS';\r\nexport const SET_PLAYLIST = 'SET_PLAYLIST';\r\nexport const ADD_PLAYLIST = 'ADD_PLAYLIST';","import { SET_TRACKS, ADD_TRACKS } from '../utils/constants';\r\n\r\nconst tracksReducer = (state = {}, action) => {\r\n  const { tracks } = action;\r\n  switch (action.type) {\r\n    case SET_TRACKS:\r\n      return tracks;\r\n    case ADD_TRACKS:\r\n      return {\r\n        ...state,\r\n        next: tracks.next,\r\n        items: [...state.items, ...tracks.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tracksReducer;","import { SET_ALBUMS, ADD_ALBUMS } from '../utils/constants';\r\n\r\nconst albumsReducer = (state = {}, action) => {\r\n  const { albums } = action;\r\n  switch (action.type) {\r\n    case SET_ALBUMS:\r\n      return albums;\r\n    case ADD_ALBUMS:\r\n      return {\r\n        ...state,\r\n        next: albums.next,\r\n        items: [...state.items, ...albums.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default albumsReducer;","import { SET_ARTISTS, ADD_ARTISTS } from '../utils/constants';\r\n\r\nconst artistsReducer = (state = {}, action) => {\r\n  const { artists } = action;\r\n  switch (action.type) {\r\n    case SET_ARTISTS:\r\n      return artists;\r\n    case ADD_ARTISTS:\r\n      return {\r\n        ...state,\r\n        next: artists.next,\r\n        items: [...state.items, ...artists.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default artistsReducer;","import { SET_PLAYLIST, ADD_PLAYLIST } from '../utils/constants';\r\n\r\nconst playlistReducer = (state = {}, action) => {\r\n  const { playlists } = action;\r\n  switch (action.type) {\r\n    case SET_PLAYLIST:\r\n      return playlists;\r\n    case ADD_PLAYLIST:\r\n      return {\r\n        ...state,\r\n        next: playlists.next,\r\n        items: [...state.items, ...playlists.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default playlistReducer;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport tracksReducer from '../reducers/tracks';\r\nimport albumsReducer from '../reducers/albums';\r\nimport artistsReducer from '../reducers/artists';\r\nimport playlistReducer from '../reducers/playlist';\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    tracks: tracksReducer,\r\n    albums: albumsReducer,\r\n    artists: artistsReducer,\r\n    playlist: playlistReducer\r\n  }),\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import axios from 'axios';\r\n\r\nexport const getParamValues = (url) => {\r\n  return url\r\n    .slice(1)\r\n    .split('&')\r\n    .reduce((prev, curr) => {\r\n      const [title, value] = curr.split('=');\r\n      prev[title] = value;\r\n      return prev;\r\n    }, {});\r\n};\r\n\r\nexport const setAuthHeader = () => {\r\n  try {\r\n    const params = JSON.parse(localStorage.getItem('params'));\r\n    if (params) {\r\n      axios.defaults.headers.common[\r\n        'Authorization'\r\n      ] = `Bearer ${params}`;\r\n    }\r\n  } catch (error) {\r\n    console.log('Error setting auth', error);\r\n  }\r\n};\r\n","import axios from 'axios';\r\nimport qs from 'qs';\r\nimport { setAuthHeader } from './functions';\r\n\r\nexport const get = async (url, params) => {\r\n  setAuthHeader();\r\n  const result = await axios.get(url, params);\r\n  return result.data;\r\n};\r\n\r\nexport const post = async (url, params) => {\r\n  setAuthHeader();\r\n  const result = await axios.post(url, params);\r\n  return result.data;\r\n};\r\n\r\nexport const getAuthToken = async () => {\r\n  const clientId = process.env.REACT_APP_CLIENT_ID;\r\n  const clientSecret = process.env.REACT_APP_CLIENT_SECRET;\r\n  \r\n  const headers = {\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    auth: {\r\n      username: clientId,\r\n      password: clientSecret,\r\n    },\r\n  };\r\n  const data = {\r\n    grant_type: 'client_credentials',\r\n  };\r\n\r\n  try {\r\n    const response = await axios.post(\r\n      'https://accounts.spotify.com/api/token',\r\n      qs.stringify(data),\r\n      headers\r\n    );\r\n    return response.data;\r\n  } catch (error) { console.log(error); }\r\n};","import {\r\n  SET_ALBUMS,\r\n  ADD_ALBUMS,\r\n  SET_ARTISTS,\r\n  ADD_ARTISTS,\r\n  SET_PLAYLIST,\r\n  ADD_PLAYLIST,\r\n  SET_TRACKS,\r\n  ADD_TRACKS\r\n} from '../utils/constants';\r\nimport { get } from '../utils/api';\r\n\r\nexport const setTracks = (tracks) => ({\r\n  type: SET_TRACKS,\r\n  tracks\r\n});\r\nexport const addTracks = (tracks) => ({\r\n  type: ADD_TRACKS,\r\n  tracks\r\n});\r\n\r\nexport const setAlbums = (albums) => ({\r\n  type: SET_ALBUMS,\r\n  albums\r\n});\r\nexport const addAlbums = (albums) => ({\r\n  type: ADD_ALBUMS,\r\n  albums\r\n});\r\n\r\nexport const setArtists = (artists) => ({\r\n  type: SET_ARTISTS,\r\n  artists\r\n});\r\nexport const addArtists = (artists) => ({\r\n  type: ADD_ARTISTS,\r\n  artists\r\n});\r\n\r\nexport const setPlayList = (playlists) => ({\r\n  type: SET_PLAYLIST,\r\n  playlists\r\n});\r\nexport const addPlaylist = (playlists) => ({\r\n  type: ADD_PLAYLIST,\r\n  playlists\r\n});\r\n\r\nexport const initiateGetResult = (searchTerm) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const API_URL = `https://api.spotify.com/v1/search?query=${encodeURIComponent(\r\n        searchTerm\r\n      )}&type=track,album,artist,playlist`;\r\n      const result = await get(API_URL);\r\n      console.log(result);\r\n      const { tracks, albums, artists, playlists } = result;\r\n      dispatch(setTracks(tracks));\r\n      dispatch(setAlbums(albums));\r\n      dispatch(setArtists(artists));\r\n      return dispatch(setPlayList(playlists));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateLoadMoreTracks = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log('url', url);\r\n      const result = await get(url);\r\n      console.log('categoriess', result);\r\n      return dispatch(addTracks(result.tracks));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateLoadMoreAlbums = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log('url', url);\r\n      const result = await get(url);\r\n      console.log('categoriess', result);\r\n      return dispatch(addAlbums(result.albums));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateLoadMoreArtists = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log('url', url);\r\n      const result = await get(url);\r\n      console.log('categoriess', result);\r\n      return dispatch(addArtists(result.artists));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateLoadMorePlaylist = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log('url', url);\r\n      const result = await get(url);\r\n      console.log('categoriess', result);\r\n      return dispatch(addPlaylist(result.playlists));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\n","export default __webpack_public_path__ + \"static/media/music.b2fe7d4d.jpeg\";","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport music from '../images/music.jpeg';\r\n\r\nconst TracksList = ({ tracks }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(tracks).length > 0 && (\r\n        <div className=\"tracks\">\r\n          {tracks.items.map((track, index) => {\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <Card>\r\n                  <a\r\n                    target=\"_blank\"\r\n                    href={track.external_urls.spotify}\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"card-image-link\"\r\n                  >\r\n                    {!_.isEmpty(track.album.images) ? (\r\n                      <Card.Img\r\n                        variant=\"bottom\"\r\n                        src={track.album.images[0].url}\r\n                        alt=\"\"\r\n                      />\r\n                    ) : (\r\n                      <img src={music} alt=\"\" />\r\n                    )}\r\n                  </a>\r\n                  <Card.Body>\r\n                    <Card.Title>{track.name}</Card.Title>\r\n                    <Card.Text>\r\n                      <small>\r\n                        {track.artists.map((artist) => artist.name).join(', ')}\r\n                      </small>\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TracksList;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport music from '../images/music.jpeg';\r\n\r\nconst AlbumsList = ({ albums }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(albums).length > 0 && (\r\n        <div className=\"albums\">\r\n          {albums.items.map((album, index) => {\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <Card>\r\n                  <a\r\n                    target=\"_blank\"\r\n                    href={album.external_urls.spotify}\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"card-image-link\"\r\n                  >\r\n                    {!_.isEmpty(album.images) ? (\r\n                      <Card.Img\r\n                        variant=\"top\"\r\n                        src={album.images[0].url}\r\n                        alt=\"\"\r\n                      />\r\n                    ) : (\r\n                      <img src={music} alt=\"\" />\r\n                    )}\r\n                  </a>\r\n                  <Card.Body>\r\n                    <Card.Title>{album.name}</Card.Title>\r\n                    <Card.Text>\r\n                      <small>\r\n                        {album.artists.map((artist) => artist.name).join(', ')}\r\n                      </small>\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AlbumsList;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport music from '../images/music.jpeg';\r\n\r\nconst ArtistsList = ({ artists }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(artists).length > 0 && (\r\n        <div className=\"artists\">\r\n          {artists.items.map((artist, index) => {\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <Card>\r\n                  <a\r\n                    target=\"_blank\"\r\n                    href={artist.external_urls.spotify}\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"card-image-link\"\r\n                  >\r\n                    {!_.isEmpty(artist.images) ? (\r\n                      <Card.Img\r\n                        variant=\"top\"\r\n                        src={artist.images[0].url}\r\n                        alt=\"\"\r\n                      />\r\n                    ) : (\r\n                      <img src={music} alt=\"\" />\r\n                    )}\r\n                  </a>\r\n                  <Card.Body>\r\n                    <Card.Title>{artist.name}</Card.Title>\r\n                  </Card.Body>\r\n                </Card>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ArtistsList;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport music from '../images/music.jpeg';\r\n\r\nconst PlayList = ({ playlist }) => {\r\n  return (\r\n    <div>\r\n      {Object.keys(playlist).length > 0 && (\r\n        <div className=\"playlist\">\r\n          {playlist.items.map((item, index) => {\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <Card>\r\n                  <a\r\n                    target=\"_blank\"\r\n                    href={item.external_urls.spotify}\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"card-image-link\"\r\n                  >\r\n                    {!_.isEmpty(item.images) ? (\r\n                      <Card.Img variant=\"top\" src={item.images[0].url} alt=\"\" />\r\n                    ) : (\r\n                      <img src={music} alt=\"\" />\r\n                    )}\r\n                  </a>\r\n                  <Card.Body>\r\n                    <Card.Title>{item.name}</Card.Title>\r\n                    <Card.Text>\r\n                      <small>By {item.owner.display_name}</small>\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayList;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport TracksList from './TracksList';\r\nimport AlbumsList from './AlbumsList';\r\nimport ArtistsList from './ArtistsList';\r\nimport PlayList from './PlayList';\r\n\r\nconst SearchResult = (props) => {\r\n  const { loadMore, result, setCategory, selectedCategory } = props;\r\n  const { tracks, albums, artists, playlist } = result;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"search-buttons\">\r\n        {!_.isEmpty(tracks.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'tracks' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('tracks')}\r\n          >\r\n            Songs\r\n          </button>\r\n        )}\r\n        {!_.isEmpty(albums.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'albums' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('albums')}\r\n          >\r\n            Albums\r\n          </button>\r\n        )}\r\n        {!_.isEmpty(artists.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'artists' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('artists')}\r\n          >\r\n            Artists\r\n          </button>\r\n        )}\r\n        {!_.isEmpty(playlist.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'playlist' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('playlist')}\r\n          >\r\n            PlayLists\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <div className={`${selectedCategory === 'tracks' ? '' : 'hide'}`}>\r\n        {albums && <TracksList tracks={tracks} />}\r\n      </div>\r\n      <div className={`${selectedCategory === 'albums' ? '' : 'hide'}`}>\r\n        {albums && <AlbumsList albums={albums} />}\r\n      </div>\r\n      <div className={`${selectedCategory === 'artists' ? '' : 'hide'}`}>\r\n        {artists && <ArtistsList artists={artists} />}\r\n      </div>\r\n      <div className={`${selectedCategory === 'playlist' ? '' : 'hide'}`}>\r\n        {playlist && <PlayList playlist={playlist} />}\r\n      </div>\r\n\r\n      {!_.isEmpty(result[selectedCategory]) &&\r\n       !_.isEmpty(result[selectedCategory].next) && (\r\n        <div className=\"load-more\" onClick={() => loadMore(selectedCategory)}>\r\n          <Button variant=\"info\" type=\"button\">\r\n            Load More\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SearchResult;","import React, { useState } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst SearchForm = (props) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n\r\n  const handleInputChange = (event) => {\r\n    const searchTerm = event.target.value;\r\n    setSearchTerm(searchTerm);\r\n  };\r\n\r\n  const handleSearch = (event) => {\r\n    event.preventDefault();\r\n    if (searchTerm.trim() !== '') {\r\n      setErrorMsg('');\r\n      props.handleSearch(searchTerm);\r\n    } else {\r\n      setErrorMsg('Please enter a search term.');\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleSearch}>\r\n        {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Control\r\n            type=\"search\"\r\n            name=\"searchTerm\"\r\n            value={searchTerm}\r\n            placeholder=\"Search here!\"\r\n            onChange={handleInputChange}\r\n            autoComplete=\"off\"\r\n          />\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchForm;","import React from 'react';\r\n\r\nconst Header = () => {\r\n  return <h1 className=\"main-heading\">Spotify Tier List (under construction)</h1>;\r\n};\r\n\r\nexport default Header;\r\n","import { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst Loader = (props) => {\r\n  const [node] = useState(document.createElement('div'));\r\n  const loader = document.querySelector('#loader');\r\n\r\n  useEffect(() => {\r\n    loader.appendChild(node).classList.add('message');\r\n  }, [loader, node]);\r\n\r\n  useEffect(() => {\r\n    if (props.show) {\r\n      loader.classList.remove('hide');\r\n      document.body.classList.add('loader-open');\r\n    } else {\r\n      loader.classList.add('hide');\r\n      document.body.classList.remove('loader-open');\r\n    }\r\n  }, [loader, props.show]);\r\n\r\n  return ReactDOM.createPortal(props.children, node);\r\n};\r\nexport default Loader;","import React, { useState } from 'react';\r\nimport {\r\n  initiateGetResult,\r\n  initiateLoadMoreTracks,\r\n  initiateLoadMoreAlbums,\r\n  initiateLoadMorePlaylist,\r\n  initiateLoadMoreArtists\r\n} from '../actions/result';\r\nimport { connect } from 'react-redux';\r\nimport SearchResult from './SearchResult';\r\nimport SearchForm from './SearchForm';\r\nimport Header from './Header';\r\nimport Loader from './Loader';\r\n\r\nconst Dashboard = (props) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedCategory, setSelectedCategory] = useState('tracks');\r\n  const { isValidSession, refreshSession } = props;\r\n\r\n  const handleSearch = async (searchTerm) => {\r\n    setIsLoading(true);\r\n    if (!isValidSession()) {\r\n      try { await refreshSession(); } \r\n      catch(error) { console.log(error); }\r\n    }\r\n    props.dispatch(initiateGetResult(searchTerm)).then(() => {\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n\r\n  const loadMore = async (type) => {\r\n    const { dispatch, tracks, albums, artists, playlist } = props;\r\n    setIsLoading(true);\r\n    if (!isValidSession()) {\r\n      try { await refreshSession(); }\r\n      catch(error) { console.log(error); }\r\n    }\r\n    switch (type) {\r\n      case 'tracks':\r\n        await dispatch(initiateLoadMoreTracks(tracks.next));\r\n        break;\r\n      case 'albums':\r\n        await dispatch(initiateLoadMoreAlbums(albums.next));\r\n        break;\r\n      case 'artists':\r\n        await dispatch(initiateLoadMoreArtists(artists.next));\r\n        break;\r\n      case 'playlist':\r\n        await dispatch(initiateLoadMorePlaylist(playlist.next));\r\n        break;\r\n      default:\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const setCategory = (category) => { setSelectedCategory(category); };\r\n\r\n  const { tracks, albums, artists, playlist } = props;\r\n  const result = { tracks, albums, artists, playlist };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <Header />\r\n        <SearchForm handleSearch={handleSearch} />\r\n        <Loader show={isLoading}>Loading...</Loader>\r\n        <SearchResult\r\n          result={result}\r\n          loadMore={loadMore}\r\n          setCategory={setCategory}\r\n          selectedCategory={selectedCategory}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tracks: state.tracks,\r\n    albums: state.albums,\r\n    artists: state.artists,\r\n    playlist: state.playlist\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Dashboard);","import React from 'react';\r\nimport Dashboard from './Dashboard';\r\nimport { getAuthToken } from '../utils/api';\r\n\r\nclass Main extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { loaded: false };\r\n    }\r\n    \r\n    refreshSession = async () => {\r\n        let result;\r\n        try{ result = await getAuthToken(); } \r\n        catch(error) { console.log(error); }\r\n        if(result) {\r\n          const {\r\n              access_token,\r\n              expires_in\r\n          } = result;\r\n          localStorage.setItem('params', JSON.stringify(access_token));\r\n          localStorage.setItem('expiry_time', new Date().getTime() + expires_in * 1000);\r\n          if(!this.loaded) this.setState({ loaded: true });\r\n        }\r\n    }\r\n    \r\n    isValidSession = () => {\r\n        let expiryTime;\r\n        try { expiryTime = JSON.parse(localStorage.getItem('expiry_time')); } \r\n        catch(error) { expiryTime = '0'; }\r\n        const currentTime = new Date().getTime();\r\n        if(currentTime >= expiryTime && this.loaded) this.setState({ loaded: false });\r\n        return currentTime < expiryTime;\r\n    };\r\n\r\n    render() {\r\n        if(!this.isValidSession()) {\r\n          this.refreshSession();\r\n          return (\r\n            <div className=\"main\">\r\n              Loading...\r\n            </div>\r\n          );\r\n        }\r\n        return (\r\n          <div className=\"main\">\r\n            <Dashboard isValidSession={this.isValidSession} refreshSession={this.refreshSession} />\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport Main from './components/Main';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Main />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}