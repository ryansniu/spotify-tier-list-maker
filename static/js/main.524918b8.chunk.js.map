{"version":3,"sources":["sidebar/utils/constants.js","sidebar/reducers/tracks.js","sidebar/reducers/albums.js","sidebar/reducers/artists.js","store/store.js","sidebar/images/music.jpeg","tierlist/components/Item.jsx","tierlist/imgs/tool.svg","tierlist/imgs/palette.svg","tierlist/components/Title.jsx","tierlist/components/Column.jsx","tierlist/components/ItemPool.jsx","tierlist/components/TrashCan.jsx","tierlist/TierListContext.js","sidebar/utils/functions.js","sidebar/utils/api.js","sidebar/actions/result.js","sidebar/components/TracksList.js","sidebar/components/AlbumsList.js","sidebar/components/ArtistsList.js","sidebar/components/SearchResult.js","sidebar/components/SearchForm.js","sidebar/components/Loader.js","sidebar/components/Dashboard.js","sidebar/SidebarSearch.js","tierlist/TierList.js","index.js"],"names":["SET_TRACKS","ADD_TRACKS","SET_ALBUMS","ADD_ALBUMS","SET_ARTISTS","ADD_ARTISTS","tracksReducer","state","action","tracks","type","next","items","albumsReducer","albums","artistsReducer","artists","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunk","ItemContent","styled","div","props","isDragging","ItemSmall","small","Item","draggableId","this","item","id","index","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","Card","style","margin","Container","Row","Col","xs","target","href","songURL","rel","imgURL","Img","src","alt","music","Body","Title","title","subtitle","Text","React","Component","TitleStyle","h3","attrs","backgroundColor","color","InputStyle","textarea","ButtonStyle","button","inputRef","useRef","useState","colData","setID","setTitle","setColor","useColor","color_p","setColor_P","inputVisible","setInputVisible","colorPickerVisible","setcolorPickerVisible","deleteModalShow","setdeleteModalShow","update","updateHeader","deleteCol","deleteHandler","presetColors","onClickOutSide","e","current","contains","hex","setEditing","useEffect","document","addEventListener","removeEventListener","showDeleteButton","position","className","onClick","Modal","show","onHide","size","Header","closeButton","closeVariant","Footer","Fragment","width","display","alignItems","onSubmit","value","onChange","Dropdown","autoClose","as","ButtonGroup","drop","onToggle","isOpen","OverlayTrigger","placement","overlay","Tooltip","Toggle","variant","Image","palette","fluid","height","Menu","hsv","h","newHSV","toColor","hideRGB","hideHSV","dark","map","idx","ToggleButton","textShadow","wordBreak","flexGrow","overflow","tool","bgColor","ItemList","isDraggingOver","InnerList","nextProps","Column","isEditing","newColor","v","a","column","isDragDisabled","getBorderColor","setState","droppableId","droppableProps","getBodyColor","placeholder","ItemPool","TrashHeading","h1","TrashCan","initialData","data","columns","itemIds","columnOrder","containsItem","addToItemPool","deleteFromItemPool","TierListContext","createContext","setAuthHeader","params","JSON","parse","localStorage","getItem","axios","defaults","headers","common","error","console","log","get","url","result","getAuthToken","process","Accept","auth","username","password","grant_type","post","qs","stringify","response","setTracks","setAlbums","setArtists","initiateGetResult","searchTerm","dispatch","API_URL","encodeURIComponent","initiateLoadMoreTracks","initiateLoadMoreAlbums","initiateLoadMoreArtists","TracksList","updater","setUpdater","Object","keys","length","track","external_urls","spotify","name","artist","join","_","isEmpty","album","images","Consumer","filter","AlbumsList","ArtistsList","SearchResult","loadMore","setCategory","selectedCategory","Button","SearchForm","setSearchTerm","errorMsg","setErrorMsg","Form","event","preventDefault","trim","handleSearch","Group","controlId","Control","autoComplete","Loader","createElement","node","loader","querySelector","appendChild","classList","add","remove","body","ReactDOM","createPortal","children","connect","isLoading","setIsLoading","updateCategory","setSelectedCategory","isValidSession","refreshSession","then","Spinner","animation","role","marginRight","category","SidebarSearch","newState","access_token","expires_in","setItem","Date","getTime","loaded","expiryTime","currentTime","refreshSidebar","saveFileTypes","itemMap","itemId","PureComponent","refreshColumns","showSearchbar","showItemPool","TierList","sessionStorage","LZString","decompress","context","saveStateToStorage","compress","importFromJson","fileReader","FileReader","readAsText","files","onload","Array","isArray","hasValidColumns","requiredColumnKeys","forEach","key","columnKeys","every","i","allColumns","splice","indexOf","el","includes","hasValidItems","requiredItemKeys","itemKeys","allItems","concat","deleteItem","source","home","homeitemIds","from","newHome","oldItems","newItems","reduce","object","updateColHeader","newTitle","oldHeader","newHeader","addNewGroup","ID","newColumnOrder","removeCol","keepItems","oldColumns","newColumns","resetAllItems","removeAllItems","resetAllColumns","resetTierList","showSearch","showItems","onDragEnd","destination","foreign","foreignitemIds","newForeign","newitemIds","newItemIds","newItemPool","delIndex","fileType","saveIMG","dataUrl","link","download","click","tierlist","getElementById","displayWidth","getBoundingClientRect","fullWidth","scrollWidth","fullHeight","scrollHeight","toJpeg","pixelRatio","catch","err","toPng","toSvg","flexDirection","DropdownButton","menuVariant","menuRole","saveAsIMG","onSelect","ItemText","htmlFor","accept","direction","columnId","Offcanvas","scroll","backdrop","paddingBottom","padding","overflowY","contextType","render","Provider"],"mappings":"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","file":"static/js/main.524918b8.chunk.js","sourcesContent":["export const SET_TRACKS = 'SET_TRACKS';\r\nexport const ADD_TRACKS = 'ADD_TRACKS';\r\nexport const SET_ALBUMS = 'SET_ALBUMS';\r\nexport const ADD_ALBUMS = 'ADD_ALBUMS';\r\nexport const SET_ARTISTS = 'SET_ARTISTS';\r\nexport const ADD_ARTISTS = 'ADD_ARTISTS';","import { SET_TRACKS, ADD_TRACKS } from '../utils/constants';\r\n\r\nconst tracksReducer = (state = {}, action) => {\r\n  const { tracks } = action;\r\n  switch (action.type) {\r\n    case SET_TRACKS:\r\n      return tracks;\r\n    case ADD_TRACKS:\r\n      return {\r\n        ...state,\r\n        next: tracks.next,\r\n        items: [...state.items, ...tracks.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tracksReducer;","import { SET_ALBUMS, ADD_ALBUMS } from '../utils/constants';\r\n\r\nconst albumsReducer = (state = {}, action) => {\r\n  const { albums } = action;\r\n  switch (action.type) {\r\n    case SET_ALBUMS:\r\n      return albums;\r\n    case ADD_ALBUMS:\r\n      return {\r\n        ...state,\r\n        next: albums.next,\r\n        items: [...state.items, ...albums.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default albumsReducer;","import { SET_ARTISTS, ADD_ARTISTS } from '../utils/constants';\r\n\r\nconst artistsReducer = (state = {}, action) => {\r\n  const { artists } = action;\r\n  switch (action.type) {\r\n    case SET_ARTISTS:\r\n      return artists;\r\n    case ADD_ARTISTS:\r\n      return {\r\n        ...state,\r\n        next: artists.next,\r\n        items: [...state.items, ...artists.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default artistsReducer;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport tracksReducer from '../sidebar/reducers/tracks';\r\nimport albumsReducer from '../sidebar/reducers/albums';\r\nimport artistsReducer from '../sidebar/reducers/artists';\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    tracks: tracksReducer,\r\n    albums: albumsReducer,\r\n    artists: artistsReducer\r\n  }),\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","export default __webpack_public_path__ + \"static/media/music.b2fe7d4d.jpeg\";","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { Card, Container, Row, Col } from 'react-bootstrap';\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport music from '../../sidebar/images/music.jpeg';\r\n\r\nconst ItemContent = styled.div`\r\n  background-color: ${props => (props.isDragging ? '#535353' : 'none')};\r\n  border-radius: 4px;\r\n`;\r\n\r\nconst ItemSmall = styled.small`\r\n  color: ${props => (props.isDragging ? 'white !important' : '#A4A4A4')};\r\n`;\r\n\r\nexport default class Item extends React.Component {\r\n    render() {\r\n      return (\r\n        <Draggable draggableId={this.props.item.id} index={this.props.index}>\r\n          {(provided, snapshot) => (\r\n            <ItemContent\r\n              {...provided.draggableProps}\r\n              {...provided.dragHandleProps}\r\n              ref={provided.innerRef}\r\n              isDragging={snapshot.isDragging}\r\n            >\r\n              <Card style={{ margin: 0 }}>\r\n                <Container>\r\n                  <Row>\r\n                    <Col xs=\"auto\">\r\n                      <a\r\n                        target=\"_blank\"\r\n                        href={this.props.item.songURL}\r\n                        rel=\"noopener noreferrer\"\r\n                      >\r\n                        {this.props.item.imgURL ? (\r\n                          <Card.Img src={this.props.item.imgURL} alt=\"\" />\r\n                        ) : (\r\n                          <img src={music} alt=\"\" />\r\n                        )}\r\n                      </a>\r\n                    </Col>\r\n                    <Col>\r\n                      <Card.Body>\r\n                        <Card.Title>{this.props.item.title}</Card.Title>\r\n                        {this.props.item.subtitle &&\r\n                          <Card.Text>\r\n                            <ItemSmall isDragging={snapshot.isDragging}>\r\n                              {this.props.item.subtitle}\r\n                            </ItemSmall>\r\n                          </Card.Text>\r\n                        }\r\n                      </Card.Body>\r\n                    </Col>\r\n                  </Row>\r\n                </Container>\r\n              </Card>\r\n            </ItemContent>\r\n          )}\r\n        </Draggable>\r\n      );\r\n    }\r\n  }","export default __webpack_public_path__ + \"static/media/tool.f60e7b86.svg\";","export default __webpack_public_path__ + \"static/media/palette.c614a1c8.svg\";","import React, { useState, useRef, useEffect } from 'react';\r\nimport { Image, Dropdown, ButtonGroup, OverlayTrigger, Tooltip, ToggleButton, Modal } from 'react-bootstrap';\r\nimport { ColorPicker, useColor, toColor } from \"react-color-palette\";\r\nimport styled from 'styled-components';\r\nimport tool from '../imgs/tool.svg'\r\nimport palette from '../imgs/palette.svg'\r\nimport \"react-color-palette/lib/css/styles.css\";\r\nimport '../tierlist-styles.css'\r\n\r\nconst TitleStyle = styled.h3.attrs(props => ({\r\n  style: {\r\n    backgroundColor: props.color,\r\n  },\r\n  }))`padding: 8px;\r\n  margin-bottom: 0;\r\n  display: flex;\r\n  max-width: 21rem;\r\n  user-select: none;\r\n`;\r\n\r\n// how tf do i make this full height when editing\r\nconst InputStyle = styled.textarea`\r\n    flex-grow: 1;\r\n    overflow: hidden;\r\n    word-break: break-all;\r\n    min-height: 40px;\r\n    max-width: 14.25rem;\r\n    height: 40px;\r\n    resize: both;\r\n`;\r\n\r\nconst ButtonStyle = styled.button`\r\n    width: 40px;\r\n    min-width: 40px;\r\n    height: 40px;\r\n    float: right;\r\n    margin-left: 8px;\r\n    outline: none;\r\n    background: transparent no-repeat;\r\n    border: none;\r\n    border-radius: 50%;\r\n`;\r\n\r\nconst Title = props => {\r\n  const inputRef = useRef(null);\r\n  const [id, setID] = useState(props.colData.id);\r\n  const [title, setTitle] = useState(props.colData.title);\r\n  const [color, setColor] = useState(props.colData.color);\r\n  const [color_p, setColor_P] = useColor(\"hex\", props.colData.color);\r\n  const [inputVisible, setInputVisible] = useState(false);\r\n  const [colorPickerVisible, setcolorPickerVisible] = useState(false);\r\n  const [deleteModalShow, setdeleteModalShow] = useState(false);\r\n  const update = props.updateHeader;\r\n  const deleteCol = props.deleteHandler;\r\n  const presetColors = props.presetColors;\r\n\r\n\r\n  function onClickOutSide(e) {\r\n    if (inputRef.current && !inputRef.current.contains(e.target)) {\r\n      setInputVisible(false);\r\n      if(colorPickerVisible) {\r\n        setcolorPickerVisible(false);\r\n        update(id, title, color_p.hex); \r\n      }\r\n      props.setEditing(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (inputVisible) document.addEventListener(\"mousedown\", onClickOutSide);\r\n    return () => { document.removeEventListener(\"mousedown\", onClickOutSide); };\r\n  });\r\n\r\n  useEffect(() => {\r\n    setID(props.colData.id);\r\n    setTitle(props.colData.title);\r\n    setColor(props.colData.color);\r\n  }, [props.colData]);\r\n\r\n  return (\r\n    <div>\r\n      {props.showDeleteButton && (\r\n          <div style={{position: \"relative\"}}>\r\n            <button className=\"column-remove-button\" onClick={() => setdeleteModalShow(true)}>×</button>\r\n          </div>\r\n      )}\r\n      <Modal id=\"delete-modal\" show={deleteModalShow} onHide={() => setdeleteModalShow(false)} size=\"sm\">\r\n        <Modal.Header closeButton closeVariant=\"white\">\r\n          <Modal.Title>Confirm Delete</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Do you want to keep or delete the column contents?\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button id=\"keep-items\" onClick={() => {setdeleteModalShow(false); deleteCol(id, true);}}>\r\n            Keep\r\n          </button>\r\n          <button id=\"delete-items\" onClick={() => {setdeleteModalShow(false); deleteCol(id, false);}}>\r\n            Delete\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <TitleStyle color={color_p.hex}>\r\n        <React.Fragment>\r\n          {inputVisible ? (\r\n            <form style={{width: \"100%\", display: \"flex\", alignItems: \"center\"}} onSubmit={() => { setInputVisible(false); props.setEditing(false); }} ref={inputRef}>\r\n              <InputStyle\r\n                value={title}\r\n                onChange={e => {\r\n                  setTitle(e.target.value);\r\n                  update(id, e.target.value, color);\r\n                }}\r\n              />\r\n              <Dropdown autoClose=\"inside\" as={ButtonGroup} drop=\"right\"\r\n                onToggle={(isOpen) => {\r\n                  setcolorPickerVisible(isOpen);\r\n                  if(!isOpen) update(id, title, color_p.hex);\r\n                }}\r\n              >\r\n                <OverlayTrigger\r\n                  placement={'top'}\r\n                  overlay={<Tooltip>Edit Color</Tooltip>}\r\n                >\r\n                  <Dropdown.Toggle id='color-toggle' variant=\"secondary\">\r\n                    <Image src={palette} fluid alt='colors' style={{width: \"100%\", height: \"100%\"}}/>\r\n                  </Dropdown.Toggle>\r\n                </OverlayTrigger>\r\n                <Dropdown.Menu id='color-dropdown' variant=\"dark\">\r\n                  <ColorPicker height={160} width={240} color={color_p} onChange={e => {\r\n                    if(e.hsv.h >= 360) {\r\n                      let newHSV = e.hsv;\r\n                      newHSV.h = 360;\r\n                      e = toColor(\"hsv\", newHSV);\r\n                    }\r\n                    setColor_P(e);\r\n                  }} hideRGB hideHSV dark />\r\n\r\n                  <div id=\"preset-colors\">\r\n                    {presetColors.map((color, idx) => (\r\n                      <ToggleButton\r\n                        key={idx}\r\n                        className = \"preset-color-button\"\r\n                        id={`color-${idx}`}\r\n                        type=\"radio\"\r\n                        variant=\"light\"\r\n                        style={{backgroundColor: color}}\r\n                        onChange={(e) => setColor_P(toColor(\"hex\", color))}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </form>\r\n          ) : (\r\n            <div style={{width: \"100%\", display: \"flex\", alignItems: \"center\"}}>\r\n              <div style={{color: \"white\", textShadow: \"0 0 4px black\", wordBreak: \"break-all\", flexGrow: \"1\", overflow: \"hidden\"}}>{title}</div>\r\n                <OverlayTrigger\r\n                  placement={'top'}\r\n                  overlay={<Tooltip>Edit Column</Tooltip>}\r\n                >\r\n                <ButtonStyle onClick={() => { setInputVisible(true); props.setEditing(true); }}>\r\n                  <Image src={tool} fluid alt='settings' style={{width: \"100%\", height: \"100%\"}}/>\r\n                </ButtonStyle> \r\n              </OverlayTrigger>\r\n            </div>\r\n          )}\r\n        </React.Fragment>\r\n      </TitleStyle>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Title; ","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { toColor } from \"react-color-palette\";\r\nimport Item from './Item';\r\nimport Title from './Title'\r\n\r\nconst Container = styled.div`\r\n  border: 4px solid ${props => props.isDragging ? props.bgColor : 'black'};\r\n  transition: border 0.2s ease;\r\n  margin: 8px;\r\n  background-color: none;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ItemList = styled.div`\r\n  padding: 8px;\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${props => props.isDraggingOver ? props.bgColor : 'none'};\r\n  flex-grow: 1;\r\n  min-width: 18.25rem;\r\n  min-height: 20rem;\r\n`;\r\n\r\nclass InnerList extends React.Component {\r\n  shouldComponentUpdate(nextProps) {\r\n    if (nextProps.items === this.props.items) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  render() {\r\n    return this.props.items.map((item, index) => (\r\n      <Item key={item.id} item={item} index={index} />\r\n    ));\r\n  }\r\n}\r\n\r\nexport default class Column extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEditing: false\r\n    }\r\n  }\r\n\r\n  getBorderColor(color) {\r\n    let newColor = toColor(\"hex\", color).hsv;\r\n    newColor.v = 75;\r\n    newColor.a = 0.75;\r\n    return toColor(\"hsv\", newColor).hex;\r\n  }\r\n\r\n  getBodyColor(color) {\r\n    let newColor = toColor(\"hex\", color).hsv;\r\n    newColor.v = newColor.v / 2;\r\n    newColor.a = 0.5;\r\n    return toColor(\"hsv\", newColor).hex;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Draggable draggableId={this.props.column.id} index={this.props.index} isDragDisabled={this.state.isEditing}>\r\n        {(provided, snapshot) => (\r\n          <Container\r\n            {...provided.draggableProps}\r\n            ref={provided.innerRef}\r\n            isDragging={snapshot.isDragging}\r\n            bgColor={this.getBorderColor(this.props.column.color)}\r\n          >\r\n            <div {...provided.dragHandleProps}>\r\n              <Title\r\n                colData={this.props.column}\r\n                updateHeader={this.props.updateHeader}\r\n                deleteHandler={this.props.deleteHandler}\r\n                showDeleteButton={this.props.showDeleteButton}\r\n                presetColors={this.props.presetColors}\r\n                setEditing={(e) => this.setState({ isEditing: e })}\r\n              />\r\n            </div>\r\n            <Droppable droppableId={this.props.column.id} type=\"item\">\r\n              {(provided, snapshot) => (\r\n                <ItemList\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  isDraggingOver={snapshot.isDraggingOver}\r\n                  bgColor={this.getBodyColor(this.props.column.color)}\r\n                >\r\n                  <InnerList items={this.props.items} />\r\n                  {provided.placeholder}\r\n                </ItemList>\r\n              )}\r\n            </Droppable>\r\n          </Container>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport Item from './Item';\r\n\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  border: 1px solid #1DB954;\r\n  background-color: none;\r\n  border-radius: 2px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 19.43rem;\r\n  height: calc(100vh - 11.5rem);\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst ItemList = styled.div`\r\n  padding: 8px;\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${props => props.isDraggingOver ? '#282828' : 'none'};\r\n  flex-grow: 1;\r\n`;\r\n\r\nclass InnerList extends React.Component {\r\n  shouldComponentUpdate(nextProps) {\r\n    if (nextProps.items === this.props.items) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  render() {\r\n    return this.props.items.map((item, index) => (\r\n      <Item key={item.id} item={item} index={index} />\r\n    ));\r\n  }\r\n}\r\n\r\nexport default class ItemPool extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <Droppable droppableId=\"item-pool\" type=\"item\">\r\n            {(provided, snapshot) => (\r\n              <ItemList\r\n                ref={provided.innerRef}\r\n                {...provided.droppableProps}\r\n                isDraggingOver={snapshot.isDraggingOver}\r\n              >\r\n                <InnerList items={this.props.items} />\r\n                {provided.placeholder}\r\n              </ItemList>\r\n            )}\r\n          </Droppable>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\n\r\nconst Container = styled.div`\r\n  margin: 0.5rem auto;\r\n  border: 1px solid ${props => props.isDraggingOver ? 'red' : 'darkred'};\r\n  background-color: none;\r\n  border-radius: 2px;\r\n  width: 19.43rem;\r\n  height: 4.75rem;\r\n  max-height: 4.75rem;\r\n  overflow-y: hidden;\r\n`;\r\n\r\nconst ItemList = styled.div`\r\n  padding: 8px;\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${props => props.isDraggingOver ? '#530000' : 'none'};\r\n  height: 100%;\r\n`;\r\n\r\nconst TrashHeading = styled.h1`\r\n  color: ${props => props.isDraggingOver ? 'red' : '#BB0000'};\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  top: 12.5%;\r\n`;\r\n\r\nexport default class TrashCan extends React.Component {\r\n  render() {\r\n    return (\r\n      <Droppable droppableId=\"trash-can\" type=\"item\">\r\n        {(provided, snapshot) => (\r\n          <div style={{position: \"relative\"}}>\r\n            <TrashHeading className=\"main-heading\" isDraggingOver={snapshot.isDraggingOver}>🗑️Trash</TrashHeading>\r\n            <Container isDraggingOver={snapshot.isDraggingOver}>\r\n              <ItemList\r\n                ref={provided.innerRef}\r\n                {...provided.droppableProps}\r\n                isDraggingOver={snapshot.isDraggingOver}\r\n              >\r\n                {provided.placeholder}\r\n              </ItemList>\r\n            </Container>\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nexport const initialData = {\r\n  data: {\r\n    items: {},\r\n    columns: {\r\n      'column-1': {\r\n        id: 'column-1',\r\n        title: 'S',\r\n        color: '#DC3CA0',\r\n        itemIds: [],\r\n      },\r\n      'column-2': {\r\n        id: 'column-2',\r\n        title: 'A',\r\n        color: '#F63E02',\r\n        itemIds: [],\r\n      },\r\n      'column-3': {\r\n        id: 'column-3',\r\n        title: 'B',\r\n        color: '#F5B700',\r\n        itemIds: [],\r\n      },\r\n      'column-4': {\r\n        id: 'column-4',\r\n        title: 'C',\r\n        color: '#1DB954',\r\n        itemIds: [],\r\n      },\r\n      'item-pool': {\r\n        id: 'item-pool',\r\n        itemIds: [],\r\n      }\r\n    },\r\n    columnOrder: ['column-1', 'column-2', 'column-3','column-4']\r\n  },\r\n  containsItem: (id) => {},\r\n  addToItemPool: (id, type, songURL, imgURL, title, subtitle) => {},\r\n  deleteFromItemPool: (id, type) => {}\r\n}\r\n\r\nexport const TierListContext = React.createContext(initialData);","import axios from 'axios';\r\n\r\nexport const getParamValues = (url) => {\r\n  return url\r\n    .slice(1)\r\n    .split('&')\r\n    .reduce((prev, curr) => {\r\n      const [title, value] = curr.split('=');\r\n      prev[title] = value;\r\n      return prev;\r\n    }, {});\r\n};\r\n\r\nexport const setAuthHeader = () => {\r\n  try {\r\n    const params = JSON.parse(localStorage.getItem('params'));\r\n    if (params) {\r\n      axios.defaults.headers.common[\r\n        'Authorization'\r\n      ] = `Bearer ${params}`;\r\n    }\r\n  } catch (error) {\r\n    console.log('Error setting auth', error);\r\n  }\r\n};\r\n","import axios from 'axios';\r\nimport qs from 'qs';\r\nimport { setAuthHeader } from './functions';\r\n\r\nexport const get = async (url, params) => {\r\n  setAuthHeader();\r\n  const result = await axios.get(url, params);\r\n  return result.data;\r\n};\r\n\r\nexport const post = async (url, params) => {\r\n  setAuthHeader();\r\n  const result = await axios.post(url, params);\r\n  return result.data;\r\n};\r\n\r\nexport const getAuthToken = async () => {\r\n  const clientId = process.env.REACT_APP_CLIENT_ID;\r\n  const clientSecret = process.env.REACT_APP_CLIENT_SECRET;\r\n  \r\n  const headers = {\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    auth: {\r\n      username: clientId,\r\n      password: clientSecret,\r\n    },\r\n  };\r\n  const data = {\r\n    grant_type: 'client_credentials',\r\n  };\r\n\r\n  try {\r\n    const response = await axios.post(\r\n      'https://accounts.spotify.com/api/token',\r\n      qs.stringify(data),\r\n      headers\r\n    );\r\n    return response.data;\r\n  } catch (error) { console.log(error); }\r\n};","import {\r\n  SET_ALBUMS,\r\n  ADD_ALBUMS,\r\n  SET_ARTISTS,\r\n  ADD_ARTISTS,\r\n  SET_TRACKS,\r\n  ADD_TRACKS\r\n} from '../utils/constants';\r\nimport { get } from '../utils/api';\r\n\r\nexport const setTracks = (tracks) => ({\r\n  type: SET_TRACKS,\r\n  tracks\r\n});\r\nexport const addTracks = (tracks) => ({\r\n  type: ADD_TRACKS,\r\n  tracks\r\n});\r\n\r\nexport const setAlbums = (albums) => ({\r\n  type: SET_ALBUMS,\r\n  albums\r\n});\r\nexport const addAlbums = (albums) => ({\r\n  type: ADD_ALBUMS,\r\n  albums\r\n});\r\n\r\nexport const setArtists = (artists) => ({\r\n  type: SET_ARTISTS,\r\n  artists\r\n});\r\nexport const addArtists = (artists) => ({\r\n  type: ADD_ARTISTS,\r\n  artists\r\n});\r\n\r\nexport const initiateGetResult = (searchTerm) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const API_URL = `https://api.spotify.com/v1/search?query=${encodeURIComponent(\r\n        searchTerm\r\n      )}&type=track,album,artist&limit=24`;\r\n      const result = await get(API_URL);\r\n      console.log(result);\r\n      const { tracks, albums, artists } = result;\r\n      dispatch(setTracks(tracks));\r\n      dispatch(setAlbums(albums));\r\n      return dispatch(setArtists(artists));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateLoadMoreTracks = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log('url', url);\r\n      const result = await get(url);\r\n      console.log('categories', result);\r\n      return dispatch(addTracks(result.tracks));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateLoadMoreAlbums = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log('url', url);\r\n      const result = await get(url);\r\n      console.log('categories', result);\r\n      return dispatch(addAlbums(result.albums));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const initiateLoadMoreArtists = (url) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log('url', url);\r\n      const result = await get(url);\r\n      console.log('categories', result);\r\n      return dispatch(addArtists(result.artists));\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Card, Container, Row, Col } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport music from '../images/music.jpeg';\r\nimport { TierListContext } from '../../tierlist/TierListContext';\r\n\r\nconst TracksList = ({ tracks }) => {\r\n  const [updater, setUpdater] = useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(tracks).length > 0 && (\r\n        <div className=\"tracks\">\r\n          {tracks.items.map((track, index) => {\r\n            let id = track.id, type = 'track', songURL = track.external_urls.spotify, title = track.name, subtitle = track.artists.map((artist) => artist.name).join(', ');\r\n            let imgURL = !_.isEmpty(track.album.images) ? track.album.images[0].url : null;\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <TierListContext.Consumer>\r\n                  {({containsItem, addToItemPool, deleteFromItemPool}) => (\r\n                    <Card className=\"search-card\" style={{margin: \"0.25rem 0\", backgroundColor: containsItem(id, type) ? \"black\" : \"\"}}>\r\n                      <Container>\r\n                        <Row>\r\n                          <Col xs=\"auto\">\r\n                            <a\r\n                              target=\"_blank\"\r\n                              href={songURL}\r\n                              rel=\"noopener noreferrer\"\r\n                              style={{filter: containsItem(id, type) ? \"brightness(50%)\" : \"brightness(100%)\"}}\r\n                            >\r\n                              {!_.isEmpty(track.album.images) ? (\r\n                                <Card.Img src={imgURL} alt=\"track album cover\" />\r\n                              ) : (\r\n                                <img src={music} alt=\"default album cover\" />\r\n                              )}\r\n                            </a>\r\n                          </Col>\r\n                          <Col>\r\n                            <Card.Body>\r\n                              <Card.Title style={{color: containsItem(id, type) ? \"#555\" : \"\"}}>{title}</Card.Title>\r\n                              <Card.Text>\r\n                                <small style={{color: containsItem(id, type) ?  \"#555\" : \"\"}}>{subtitle}</small>\r\n                              </Card.Text>\r\n                              <div>\r\n                                {containsItem(id, type) ? (\r\n                                  <button className=\"remove-buttons\" onClick={() => {\r\n                                    deleteFromItemPool(id, type);\r\n                                    setUpdater(!updater);\r\n                                  }}>×</button>\r\n                                ) : (\r\n                                  <button className=\"item-buttons\" onClick={() => {\r\n                                    addToItemPool(id, type, songURL, imgURL, title, subtitle);\r\n                                    setUpdater(!updater);\r\n                                  }}>+</button>\r\n                                )}\r\n                              </div>\r\n                            </Card.Body>\r\n                          </Col>\r\n                        </Row>\r\n                      </Container>\r\n                    </Card>\r\n                  )}\r\n                </TierListContext.Consumer>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TracksList;","import React, { useState } from 'react';\r\nimport { Card, Container, Row, Col } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport music from '../images/music.jpeg';\r\nimport { TierListContext } from '../../tierlist/TierListContext';\r\n\r\nconst AlbumsList = ({ albums }) => {\r\n  const [updater, setUpdater] = useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(albums).length > 0 && (\r\n        <div className=\"albums\">\r\n          {albums.items.map((album, index) => {\r\n            let id = album.id, type = 'album', songURL = album.external_urls.spotify, title = album.name, subtitle = album.artists.map((artist) => artist.name).join(', ');\r\n            let imgURL = !_.isEmpty(album.images) ? album.images[0].url : null;\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <TierListContext.Consumer>\r\n                  {({containsItem, addToItemPool, deleteFromItemPool}) => (\r\n                    <Card className=\"search-card\" style={{margin: \"0.25rem 0\", backgroundColor: containsItem(id, type) ? \"black\" : \"\"}}>\r\n                      <Container>\r\n                        <Row>\r\n                          <Col xs=\"auto\">\r\n                            <a\r\n                              target=\"_blank\"\r\n                              href={songURL}\r\n                              rel=\"noopener noreferrer\"\r\n                              style={{filter: containsItem(id, type) ? \"brightness(50%)\" : \"brightness(100%)\"}}\r\n                            >\r\n                              {!_.isEmpty(album.images) ? (\r\n                                <Card.Img src={album.images[0].url} alt=\"album cover\" />\r\n                              ) : (\r\n                                <img src={music} alt=\"default album cover\" />\r\n                              )}\r\n                            </a>\r\n                          </Col>\r\n                          <Col>\r\n                            <Card.Body>\r\n                              <Card.Title style={{color: containsItem(id, type) ? \"#555\" : \"\"}}>{title}</Card.Title>\r\n                              <Card.Text>\r\n                                <small style={{color: containsItem(id, type) ?  \"#555\" : \"\"}}>{subtitle}</small>\r\n                              </Card.Text>\r\n                              <div>\r\n                                {containsItem(id, type) ? (\r\n                                  <button className=\"remove-buttons\" onClick={() => {\r\n                                    deleteFromItemPool(id, type);\r\n                                    setUpdater(!updater);\r\n                                  }}>×</button>\r\n                                ) : (\r\n                                  <button className=\"item-buttons\" onClick={() => {\r\n                                    addToItemPool(id, type, songURL, imgURL, title, subtitle);\r\n                                    setUpdater(!updater);\r\n                                  }}>+</button>\r\n                                )}\r\n                              </div>\r\n                            </Card.Body>\r\n                          </Col>\r\n                          <Col xs=\"auto\">\r\n                          </Col>\r\n                        </Row>\r\n                      </Container>\r\n                    </Card>\r\n                  )}\r\n                </TierListContext.Consumer>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AlbumsList;","import React, { useState } from 'react';\r\nimport { Card, Container, Row, Col } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport music from '../images/music.jpeg';\r\nimport { TierListContext } from '../../tierlist/TierListContext';\r\n\r\nconst ArtistsList = ({ artists }) => {\r\n  const [updater, setUpdater] = useState(false);\r\n  return (\r\n    <React.Fragment>\r\n      {Object.keys(artists).length > 0 && (\r\n        <div className=\"artists\">\r\n          {artists.items.map((artist, index) => {\r\n            let id = artist.id, type = 'artist', songURL = artist.external_urls.spotify, title = artist.name, subtitle = null;\r\n            let imgURL = !_.isEmpty(artist.images) ? artist.images[0].url : null;\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <TierListContext.Consumer>\r\n                  {({containsItem, addToItemPool, deleteFromItemPool}) => (\r\n                    <Card className=\"search-card\" style={{margin: \"0.25rem 0\", backgroundColor: containsItem(id, type) ? \"black\" : \"\"}}>\r\n                      <Container>\r\n                        <Row>\r\n                          <Col xs=\"auto\">\r\n                            <a\r\n                              target=\"_blank\"\r\n                              href={songURL}\r\n                              rel=\"noopener noreferrer\"\r\n                              style={{filter: containsItem(id, type) ? \"brightness(50%)\" : \"brightness(100%)\"}}\r\n                            >\r\n                              {!_.isEmpty(artist.images) ? (\r\n                                <Card.Img src={artist.images[0].url} alt=\"artist\" />\r\n                              ) : (\r\n                                <img src={music} alt=\"default artist\" />\r\n                              )}\r\n                            </a>\r\n                          </Col>\r\n                          <Col>\r\n                            <Card.Body>\r\n                              <Card.Title style={{color: containsItem(id, type) ? \"#555\" : \"\"}}>{title}</Card.Title>\r\n                              <div>\r\n                                {containsItem(id, type) ? (\r\n                                  <button className=\"remove-buttons\" onClick={() => {\r\n                                    deleteFromItemPool(id, type);\r\n                                    setUpdater(!updater);\r\n                                  }}>×</button>\r\n                                ) : (\r\n                                  <button className=\"item-buttons\" onClick={() => {\r\n                                    addToItemPool(id, type, songURL, imgURL, title, subtitle);\r\n                                    setUpdater(!updater);\r\n                                  }}>+</button>\r\n                                )}\r\n                              </div>\r\n                            </Card.Body>\r\n                          </Col>\r\n                        </Row>\r\n                      </Container>\r\n                    </Card>\r\n                  )}\r\n                </TierListContext.Consumer>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ArtistsList;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport TracksList from './TracksList';\r\nimport AlbumsList from './AlbumsList';\r\nimport ArtistsList from './ArtistsList';\r\n\r\nconst SearchResult = (props) => {\r\n  const { loadMore, result, setCategory, selectedCategory } = props;\r\n  const { tracks, albums, artists } = result;\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"search-buttons\">\r\n        {!_.isEmpty(tracks.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'tracks' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('tracks')}\r\n          >\r\n            Songs\r\n          </button>\r\n        )}\r\n        {!_.isEmpty(albums.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'albums' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('albums')}\r\n          >\r\n            Albums\r\n          </button>\r\n        )}\r\n        {!_.isEmpty(artists.items) && (\r\n          <button\r\n            className={`${\r\n              selectedCategory === 'artists' ? 'btn active' : 'btn'\r\n            }`}\r\n            onClick={() => setCategory('artists')}\r\n          >\r\n            Artists\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <div className={`${selectedCategory === 'tracks' ? '' : 'hide'}`}>\r\n        {albums && <TracksList tracks={tracks} />}\r\n      </div>\r\n      <div className={`${selectedCategory === 'albums' ? '' : 'hide'}`}>\r\n        {albums && <AlbumsList albums={albums} />}\r\n      </div>\r\n      <div className={`${selectedCategory === 'artists' ? '' : 'hide'}`}>\r\n        {artists && <ArtistsList artists={artists} />}\r\n      </div>\r\n\r\n      {!_.isEmpty(result[selectedCategory]) &&\r\n       !_.isEmpty(result[selectedCategory].next) && (\r\n        <div className=\"load-more\">\r\n          <Button variant=\"info\" type=\"button\" onClick={() => loadMore(selectedCategory)}>\r\n            Load More\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SearchResult;","import React, { useState } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst SearchForm = (props) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n\r\n  const handleInputChange = (event) => {\r\n    const searchTerm = event.target.value;\r\n    setSearchTerm(searchTerm);\r\n  };\r\n\r\n  const handleSearch = (event) => {\r\n    event.preventDefault();\r\n    if (searchTerm.trim() !== '') {\r\n      setErrorMsg('');\r\n      props.handleSearch(searchTerm);\r\n    } else {\r\n      setErrorMsg('Please enter a search term.');\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleSearch}>\r\n        {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Control\r\n            type=\"search\"\r\n            name=\"searchTerm\"\r\n            value={searchTerm}\r\n            placeholder=\"Search here!\"\r\n            onChange={handleInputChange}\r\n            autoComplete=\"off\"\r\n          />\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchForm;","import { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst Loader = (props) => {\r\n  const [node] = useState(document.createElement('div'));\r\n  const loader = document.querySelector('#loader');\r\n\r\n  useEffect(() => {\r\n    loader.appendChild(node).classList.add('message');\r\n  }, [loader, node]);\r\n\r\n  useEffect(() => {\r\n    if (props.show) {\r\n      loader.classList.remove('hide');\r\n      document.body.classList.add('loader-open');\r\n    } else {\r\n      loader.classList.add('hide');\r\n      document.body.classList.remove('loader-open');\r\n    }\r\n  }, [loader, props.show]);\r\n\r\n  return ReactDOM.createPortal(props.children, node);\r\n};\r\nexport default Loader;","import React, { useState } from 'react';\r\nimport {\r\n  initiateGetResult,\r\n  initiateLoadMoreTracks,\r\n  initiateLoadMoreAlbums,\r\n  initiateLoadMoreArtists\r\n} from '../actions/result';\r\nimport { connect } from 'react-redux';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport SearchResult from './SearchResult';\r\nimport SearchForm from './SearchForm';\r\nimport Loader from './Loader';\r\n\r\nconst Dashboard = (props) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedCategory, setSelectedCategory] = [props.selectedCategory, props.updateCategory];\r\n  const { isValidSession, refreshSession } = props;\r\n\r\n  const handleSearch = async (searchTerm) => {\r\n    setIsLoading(true);\r\n    if (!isValidSession()) {\r\n      try { await refreshSession(); } \r\n      catch(error) { console.log(error); }\r\n    }\r\n    props.dispatch(initiateGetResult(searchTerm)).then(() => {\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n\r\n  const loadMore = async (type) => {\r\n    const { dispatch, tracks, albums, artists } = props;\r\n    setIsLoading(true);\r\n    if (!isValidSession()) {\r\n      try { await refreshSession(); }\r\n      catch(error) { console.log(error); }\r\n    }\r\n    switch (type) {\r\n      case 'tracks':\r\n        await dispatch(initiateLoadMoreTracks(tracks.next));\r\n        break;\r\n      case 'albums':\r\n        await dispatch(initiateLoadMoreAlbums(albums.next));\r\n        break;\r\n      case 'artists':\r\n        await dispatch(initiateLoadMoreArtists(artists.next));\r\n        break;\r\n      default:\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const setCategory = (category) => { setSelectedCategory(category); };\r\n\r\n  const { tracks, albums, artists } = props;\r\n  const result = { tracks, albums, artists };\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <SearchForm handleSearch={handleSearch} />\r\n        <Loader show={isLoading}>\r\n          <Spinner animation=\"border\" role=\"status\" style={{marginRight: '0.5rem'}}/>\r\n          Loading...\r\n        </Loader>\r\n        <SearchResult\r\n          result={result}\r\n          loadMore={loadMore}\r\n          setCategory={setCategory}\r\n          selectedCategory={selectedCategory}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tracks: state.tracks,\r\n    albums: state.albums,\r\n    artists: state.artists\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Dashboard);","import React from 'react';\r\nimport Dashboard from './components/Dashboard';\r\nimport { getAuthToken } from './utils/api';\r\n\r\nclass SidebarSearch extends React.Component {\r\n    \r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { loaded: false, selectedCategory: 'tracks' };\r\n    }\r\n\r\n    updateCategory = (category) => {\r\n      const newState = {\r\n        ...this.state,\r\n        selectedCategory: category\r\n      };\r\n      this.setState(newState);\r\n    }\r\n    \r\n    refreshSession = async () => {\r\n        let result;\r\n        try{ result = await getAuthToken(); } \r\n        catch(error) { console.log(error); }\r\n        if(result) {\r\n          const {\r\n              access_token,\r\n              expires_in\r\n          } = result;\r\n          localStorage.setItem('params', JSON.stringify(access_token));\r\n          localStorage.setItem('expiry_time', new Date().getTime() + expires_in * 1000);\r\n          if(!this.loaded) this.setState({ loaded: true });\r\n        }\r\n    }\r\n    \r\n    isValidSession = () => {\r\n        let expiryTime;\r\n        try { expiryTime = JSON.parse(localStorage.getItem('expiry_time')); } \r\n        catch(error) { expiryTime = '0'; }\r\n        const currentTime = new Date().getTime();\r\n        if(currentTime >= expiryTime && this.loaded) this.setState({ loaded: false });\r\n        return currentTime < expiryTime;\r\n    };\r\n\r\n    render() {\r\n        if(!this.isValidSession()) {\r\n          this.refreshSession();\r\n          return (\r\n            <div className=\"sidebar-search\">\r\n              Loading...\r\n            </div>\r\n          );\r\n        }\r\n        return (\r\n          <div className=\"sidebar-search\">\r\n            <Dashboard key={this.props.refreshSidebar} isValidSession={this.isValidSession} refreshSession={this.refreshSession}\r\n              selectedCategory={this.state.selectedCategory} updateCategory={this.updateCategory} />\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SidebarSearch;","import React from 'react';\r\nimport '@atlaskit/css-reset';\r\nimport styled from 'styled-components';\r\nimport Column from './components/Column';\r\nimport ItemPool from './components/ItemPool';\r\nimport TrashCan from './components/TrashCan';\r\nimport { TierListContext } from './TierListContext';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport { Button, ButtonGroup, Offcanvas, Dropdown, DropdownButton, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { toJpeg, toPng, toSvg } from 'html-to-image';\r\nimport LZString from 'lz-string';\r\nimport SidebarSearch from '../sidebar/SidebarSearch'\r\nimport './tierlist-styles.css';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst presetColors = [\"#F63E02\", \"#F5B700\", \"#1DB954\", \"#4D9DE0\", \"#360568\", \"#DC3CA0\"];\r\nconst saveFileTypes = [\"jpeg\", \"png\", \"svg\"];\r\n\r\nclass InnerList extends React.PureComponent {\r\n  render() {\r\n    const { column, itemMap, index, updateHeader, deleteHandler, showDeleteButton } = this.props;\r\n    const items = column.itemIds.map(itemId => itemMap[itemId]);\r\n    return <Column column={column} items={items} index={index} updateHeader={updateHeader} deleteHandler={deleteHandler} presetColors={presetColors} showDeleteButton={showDeleteButton}/>;\r\n  }\r\n}\r\n\r\nlet refreshSidebar = false;\r\nlet refreshColumns = false;\r\nlet showSearchbar = false;\r\nlet showItemPool = false;\r\nlet showDeleteButton = false;\r\n\r\nclass TierList extends React.Component {\r\n  static contextType = TierListContext;\r\n  state = sessionStorage.getItem('saveState') !== null ? JSON.parse(LZString.decompress(sessionStorage.getItem('saveState'))) : this.context.data;\r\n\r\n  saveStateToStorage = () => sessionStorage.setItem('saveState', LZString.compress(JSON.stringify(this.state)));\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"beforeunload\", this.saveStateToStorage);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"beforeunload\", this.saveStateToStorage);\r\n\r\n    this.context.containsItem = (id, type) => {\r\n      if(id in this.state.items) {\r\n        return this.state.items[id]['type'] === type;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    this.context.addToItemPool = (id, type, songURL, imgURL, title, subtitle) => {\r\n      if(this.context.containsItem(id, type)) return; // do nothing\r\n      const newItems = {\r\n        ...this.state.items,\r\n        [id]: {\r\n          id: id,\r\n          type: type,\r\n          songURL: songURL,\r\n          imgURL: imgURL,\r\n          title: title,\r\n          subtitle: subtitle\r\n        }\r\n      }\r\n      const newItemIds = Array.from(this.state.columns['item-pool'].itemIds).concat(id);\r\n      const newItemPool = {\r\n        ...this.state.columns['item-pool'],\r\n        itemIds: newItemIds\r\n      }\r\n      const newState = {\r\n        ...this.state,\r\n        items: newItems,\r\n        columns: {\r\n          ...this.state.columns,\r\n          'item-pool': newItemPool\r\n        }\r\n      };\r\n      this.setState(newState);\r\n    };\r\n    \r\n    this.context.deleteFromItemPool = (id, type) => {\r\n      if(!this.context.containsItem(id, type)) return; // do nothing\r\n      let newItems = this.state.items;\r\n      delete newItems[id];\r\n\r\n      let newColumns = this.state.columns;\r\n      Object.keys(newColumns).forEach(function(key) {\r\n        const delIndex = newColumns[key].itemIds.indexOf(id);\r\n        if(delIndex !== -1) newColumns[key].itemIds.splice(delIndex, 1);\r\n      });\r\n\r\n      const newState = {\r\n        ...this.state,\r\n        items: newItems,\r\n        columns: newColumns\r\n      }\r\n      console.log(newState);\r\n      refreshColumns = !refreshColumns;\r\n      this.setState(newState);\r\n    }\r\n  }\r\n\r\n  // absolutely cursed\r\n  importFromJson = e => {\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\r\n    fileReader.onload = e => {\r\n      const newState = JSON.parse(e.target.result);\r\n      // check if the required keys exist and the item-pool exists in column and has the correct format\r\n      if(!('columnOrder' in newState && 'items' in newState && 'columns' in newState && 'item-pool' in newState.columns\r\n      && 'id' in newState.columns['item-pool'] && newState.columns['item-pool'].id === 'item-pool'\r\n      && 'itemIds' in newState.columns['item-pool'] && Array.isArray(newState.columns['item-pool'].itemIds))) {\r\n        console.log('missing item pool!');\r\n        return;\r\n      }\r\n\r\n      // check if every column has the correct format\r\n      let hasValidColumns = true;\r\n      const requiredColumnKeys = ['id', 'title', 'color', 'itemIds'];\r\n      Object.keys(newState.columns).forEach(function(key) {\r\n        if(!hasValidColumns || key === 'item-pool') return;\r\n        const columnKeys = Object.keys(newState.columns[key]);\r\n        hasValidColumns = columnKeys.length === requiredColumnKeys.length && columnKeys.every(function(v, i) { return v === requiredColumnKeys[i]});\r\n      });\r\n      if(!hasValidColumns) {\r\n        console.log('missing required column information!');\r\n        return;\r\n      }\r\n\r\n      // check if every column in columnOrder exists in column (and no extra besides item-pool)\r\n      const columnOrder = newState.columnOrder;\r\n      let allColumns = Object.keys(newState.columns);\r\n      allColumns.splice(allColumns.indexOf('item-pool'), 1);\r\n      if(!(columnOrder.length === allColumns.length && columnOrder.every(el => allColumns.includes(el)))) {\r\n        console.log('columnOrder and columns don\\'t match!');\r\n        return;\r\n      }\r\n\r\n      // check if every item in items has the correct format\r\n      let hasValidItems = true;\r\n      const requiredItemKeys = ['id', 'type', 'songURL', 'imgURL', 'title', 'subtitle'];\r\n      Object.keys(newState.items).forEach(function(key) {\r\n        if(!hasValidItems) return;\r\n        const itemKeys = Object.keys(newState.items[key]);\r\n        hasValidItems = itemKeys.length === requiredItemKeys.length && itemKeys.every(function(v, i) { return v === requiredItemKeys[i]});\r\n      });\r\n      if(!hasValidItems) {\r\n        console.log('missing required item information!');\r\n        return;\r\n      }\r\n\r\n      // check if every itemIDs exists in items (and no extra)\r\n      const allItems = Object.keys(newState.items);\r\n      let itemIds = [];\r\n      Object.keys(newState.columns).forEach(function(key) {\r\n        itemIds = itemIds.concat(newState.columns[key].itemIds);\r\n      });\r\n      if(!(itemIds.length === allItems.length && itemIds.every(el => allItems.includes(el)))) {\r\n        console.log('items and itemIds don\\'t match!');\r\n        return;\r\n      }\r\n\r\n      // success\r\n      showDeleteButton = false;\r\n      refreshSidebar = !refreshSidebar;\r\n      this.setState(newState);\r\n      console.log(this.state);\r\n    };\r\n  }\r\n\r\n  saveAsIMG (fileType) {\r\n    showDeleteButton = false;\r\n    this.setState(this.state, () => {\r\n      const saveIMG = (dataUrl) => {\r\n        const link = document.createElement('a');\r\n        link.download = 'tierlist.'.concat(fileType);\r\n        link.href = dataUrl;\r\n        link.click();\r\n      }\r\n  \r\n      let tierlist = document.getElementById('tierlist_inner');\r\n      let displayWidth = tierlist.getBoundingClientRect().width;\r\n      let fullWidth = tierlist.scrollWidth, fullHeight = tierlist.scrollHeight;\r\n      if(fullWidth > displayWidth) fullWidth += 8;\r\n      \r\n      if(fileType === \"jpeg\") {\r\n        toJpeg(tierlist, {backgroundColor: '#121212', pixelRatio: 2, width: fullWidth, height: fullHeight})\r\n          .then(saveIMG).catch((err) => { console.log(err); });\r\n      }\r\n      if(fileType === \"png\") {\r\n        toPng(tierlist, {backgroundColor: '#121212', pixelRatio: 2, width: fullWidth, height: fullHeight})\r\n          .then(saveIMG).catch((err) => { console.log(err); });\r\n      }\r\n      if(fileType === \"svg\") {\r\n        toSvg(tierlist, {backgroundColor: '#121212', width: fullWidth, height: fullHeight})\r\n          .then(saveIMG).catch((err) => { console.log(err); });\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteItem = (id, source, home) => {\r\n    const homeitemIds = Array.from(home.itemIds);\r\n    homeitemIds.splice(source.index, 1);\r\n    const newHome = {\r\n      ...home,\r\n      itemIds: homeitemIds,\r\n    };\r\n\r\n    const oldItems = this.state.items;\r\n    const newItems = Object.keys(oldItems).reduce((object, key) => {\r\n      if (key !== id) {\r\n        object[key] = oldItems[key];\r\n      }\r\n      return object;\r\n    }, {});\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      items: newItems,\r\n      columns: {\r\n        ...this.state.columns,\r\n        [newHome.id]: newHome,\r\n      },\r\n    };\r\n\r\n    refreshSidebar = !refreshSidebar;\r\n    this.setState(newState);\r\n  }\r\n\r\n  updateColHeader = (id, newTitle, newColor) => {\r\n    const oldHeader = this.state.columns[id];\r\n    const newHeader = {\r\n      ...oldHeader,\r\n      title: newTitle,\r\n      color: newColor\r\n    };\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        [id]: newHeader\r\n      }\r\n    };\r\n    this.setState(newState);\r\n  }\r\n\r\n  addNewGroup = () => {\r\n    const ID = `column-${new Date().getTime()}`;\r\n    const newColumnOrder = Array.from(this.state.columnOrder).concat(ID);\r\n    const newState = {\r\n      ...this.state,\r\n      columnOrder: newColumnOrder\r\n    };\r\n    newState['columns'][ID] = {\r\n      id: ID,\r\n      title: 'NEW',\r\n      color: 'gray',\r\n      itemIds: [],\r\n    };\r\n    this.setState(newState);\r\n  }\r\n\r\n  removeCol = (id, keepItems) => {\r\n    const oldItems = this.state.items;\r\n    const newItems = keepItems ? oldItems : Object.keys(oldItems).reduce((object, key) => {\r\n      if(!this.state.columns[id].itemIds.includes(key)) {\r\n        object[key] = oldItems[key];\r\n      }\r\n      return object;\r\n    }, {});\r\n\r\n    const newColumnOrder = Array.from(this.state.columnOrder);\r\n    newColumnOrder.splice(newColumnOrder.indexOf(id), 1);\r\n\r\n    const oldColumns = this.state.columns;\r\n    if(keepItems) oldColumns['item-pool'].itemIds = oldColumns['item-pool'].itemIds.concat(oldColumns[id].itemIds);\r\n    const newColumns = Object.keys(oldColumns).reduce((object, key) => {\r\n      if (key !== id) {\r\n        object[key] = oldColumns[key];\r\n      }\r\n      return object;\r\n    }, {});\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      items: newItems,\r\n      columns: newColumns,\r\n      columnOrder: newColumnOrder,\r\n    };\r\n\r\n    refreshSidebar = !refreshSidebar;\r\n    this.setState(newState);\r\n  }\r\n\r\n  resetAllItems = () => {\r\n    let newColumns = this.state.columns;\r\n    Object.keys(newColumns).forEach(function(key) {\r\n      if(key === 'item-pool') return;\r\n      newColumns['item-pool'].itemIds = newColumns['item-pool'].itemIds.concat(newColumns[key].itemIds);\r\n      newColumns[key].itemIds = [];\r\n    });\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      columns: newColumns\r\n    };\r\n    \r\n    showDeleteButton = false;\r\n    refreshColumns = !refreshColumns;\r\n    this.setState(newState);\r\n  }\r\n\r\n  removeAllItems = () => {\r\n    this.resetAllItems();\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        'item-pool': {\r\n          id: 'item-pool',\r\n          itemIds: [],\r\n        }\r\n      },\r\n      items: {},\r\n    };\r\n\r\n    showDeleteButton = false;\r\n    refreshSidebar = !refreshSidebar;\r\n    this.setState(newState);\r\n  }\r\n\r\n  resetAllColumns = () => {\r\n    this.resetAllItems();\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        'column-1': {\r\n          id: 'column-1',\r\n          title: 'S',\r\n          color: '#DC3CA0',\r\n          itemIds: [],\r\n        },\r\n        'column-2': {\r\n          id: 'column-2',\r\n          title: 'A',\r\n          color: '#F63E02',\r\n          itemIds: [],\r\n        },\r\n        'column-3': {\r\n          id: 'column-3',\r\n          title: 'B',\r\n          color: '#F5B700',\r\n          itemIds: [],\r\n        },\r\n        'column-4': {\r\n          id: 'column-4',\r\n          title: 'C',\r\n          color: '#1DB954',\r\n          itemIds: [],\r\n        }\r\n      },\r\n      columnOrder: ['column-1', 'column-2', 'column-3','column-4']\r\n    }\r\n\r\n    showDeleteButton = false;\r\n    refreshColumns = !refreshColumns;\r\n    this.setState(newState);\r\n  }\r\n\r\n  resetTierList = () => {\r\n    this.resetAllItems();\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        'column-1': {\r\n          id: 'column-1',\r\n          title: 'S',\r\n          color: '#DC3CA0',\r\n          itemIds: [],\r\n        },\r\n        'column-2': {\r\n          id: 'column-2',\r\n          title: 'A',\r\n          color: '#F63E02',\r\n          itemIds: [],\r\n        },\r\n        'column-3': {\r\n          id: 'column-3',\r\n          title: 'B',\r\n          color: '#F5B700',\r\n          itemIds: [],\r\n        },\r\n        'column-4': {\r\n          id: 'column-4',\r\n          title: 'C',\r\n          color: '#1DB954',\r\n          itemIds: [],\r\n        },\r\n        'item-pool': {\r\n          id: 'item-pool',\r\n          itemIds: [],\r\n        }\r\n      },\r\n      items: {},\r\n      columnOrder: ['column-1', 'column-2', 'column-3','column-4']\r\n    };\r\n    \r\n    showDeleteButton = false;\r\n    refreshColumns = !refreshColumns;\r\n    refreshSidebar = !refreshSidebar;\r\n    this.setState(newState);\r\n  }\r\n\r\n  showSearch = (show) => {\r\n    showSearchbar = show;\r\n    this.setState(this.state);\r\n  }\r\n\r\n  showItems = (show) => {\r\n    showItemPool = show;\r\n    this.setState(this.state);\r\n  }\r\n\r\n  onDragEnd = result => {\r\n    const { destination, source, draggableId, type } = result;\r\n\r\n    if (!destination) return;\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) return;\r\n\r\n    if (type === 'column') {\r\n      const newColumnOrder = Array.from(this.state.columnOrder);\r\n      newColumnOrder.splice(source.index, 1);\r\n      newColumnOrder.splice(destination.index, 0, draggableId);\r\n\r\n      const newState = {\r\n        ...this.state,\r\n        columnOrder: newColumnOrder\r\n      };\r\n      this.setState(newState);\r\n      return;\r\n    }\r\n\r\n    const home = this.state.columns[source.droppableId];\r\n    const foreign = this.state.columns[destination.droppableId];\r\n\r\n    if (destination.droppableId === 'trash-can') {\r\n      this.deleteItem(draggableId, source, home);\r\n      return;\r\n    }\r\n\r\n    if (home === foreign) {\r\n      const newitemIds = Array.from(home.itemIds);\r\n      newitemIds.splice(source.index, 1);\r\n      newitemIds.splice(destination.index, 0, draggableId);\r\n\r\n      const newHome = {\r\n        ...home,\r\n        itemIds: newitemIds\r\n      };\r\n\r\n      const newState = {\r\n        ...this.state,\r\n        columns: {\r\n          ...this.state.columns,\r\n          [newHome.id]: newHome\r\n        }\r\n      };\r\n\r\n      this.setState(newState);\r\n      return;\r\n    }\r\n\r\n    // moving from one list to another\r\n    const homeitemIds = Array.from(home.itemIds);\r\n    homeitemIds.splice(source.index, 1);\r\n    const newHome = {\r\n      ...home,\r\n      itemIds: homeitemIds,\r\n    };\r\n\r\n    const foreignitemIds = Array.from(foreign.itemIds);\r\n    foreignitemIds.splice(destination.index, 0, draggableId);\r\n    const newForeign = {\r\n      ...foreign,\r\n      itemIds: foreignitemIds,\r\n    };\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        [newHome.id]: newHome,\r\n        [newForeign.id]: newForeign,\r\n      },\r\n    };\r\n    this.setState(newState);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{display: 'flex', flexDirection: 'column', height: '100vh'}}>\r\n        <Container style={{margin: '1.5rem 0 0 0'}}>\r\n          <h1 className=\"title-heading\">Spotify Tier List Maker</h1>\r\n          <button type=\"button\" onClick={() => this.showItems(true)}>Items</button>\r\n\r\n          <ButtonGroup className=\"toolbar-button\">\r\n            <OverlayTrigger\r\n              placement={'top'}\r\n              overlay={<Tooltip>Add Column</Tooltip>}\r\n            >\r\n              <Button size=\"lg\" variant=\"outline-secondary\" onClick={this.addNewGroup}>Add</Button>\r\n            </OverlayTrigger>\r\n            <OverlayTrigger\r\n              placement={'top'}\r\n              overlay={<Tooltip>Toggle Delete Buttons</Tooltip>}\r\n            >\r\n              <Button style={showDeleteButton ? {color: \"white\"} : {}} size=\"lg\" variant=\"outline-secondary\" onClick={() => { showDeleteButton = !showDeleteButton; this.setState(this.state); }}>Delete</Button>\r\n            </OverlayTrigger>\r\n          </ButtonGroup>\r\n          \r\n          <OverlayTrigger\r\n            placement={'top'}\r\n            overlay={<Tooltip>Reset Placements</Tooltip>}\r\n          >\r\n            <DropdownButton\r\n              className=\"toolbar-dropdown\"\r\n              size=\"lg\"\r\n              variant=\"outline-secondary\"\r\n              menuVariant=\"dark\"\r\n              title=\"Reset\"\r\n              menuRole=\"Reset placements\"\r\n            >\r\n              <Dropdown.Item as=\"button\" onClick={this.resetAllItems}>Reset All Items</Dropdown.Item>\r\n              <Dropdown.Item as=\"button\" onClick={this.removeAllItems}>Delete All Items</Dropdown.Item>\r\n              <Dropdown.Item as=\"button\" onClick={this.resetAllColumns}>Reset All Columns</Dropdown.Item>\r\n              <Dropdown.Item as=\"button\" onClick={this.resetTierList}>Reset Tier List</Dropdown.Item>\r\n            </DropdownButton>\r\n          </OverlayTrigger>\r\n\r\n          <OverlayTrigger\r\n            placement={'top'}\r\n            overlay={<Tooltip>Save Image</Tooltip>}\r\n          >\r\n            <DropdownButton\r\n              className=\"toolbar-dropdown\"\r\n              size=\"lg\"\r\n              variant=\"outline-secondary\"\r\n              menuVariant=\"dark\"\r\n              title=\"Save\"\r\n              menuRole=\"Save as image\"\r\n            >\r\n              {saveFileTypes.map((fileType) => (\r\n                <Dropdown.Item as=\"button\" key={fileType} type=\"button\" onClick={() => this.saveAsIMG(fileType)}>Save as .{fileType}</Dropdown.Item>\r\n              ))}\r\n            </DropdownButton>\r\n          </OverlayTrigger>\r\n\r\n          <OverlayTrigger\r\n            placement={'top'}\r\n            overlay={<Tooltip>Import/Export Data</Tooltip>}\r\n          >\r\n            <DropdownButton\r\n              className=\"toolbar-dropdown\"\r\n              size=\"lg\"\r\n              variant=\"outline-secondary\"\r\n              menuVariant=\"dark\"\r\n              title=\"Data\"\r\n              menuRole=\"Import/export .json data\"\r\n            >\r\n              <Dropdown.Item\r\n                href={`data:text/json;charset=utf-8,${encodeURIComponent(JSON.stringify(this.state))}`}\r\n                download=\"tierlist.json\"\r\n                id=\"export-data\"\r\n                onSelect={() => {showDeleteButton = false; this.setState(this.state); }}\r\n              >\r\n                Export as Json\r\n              </Dropdown.Item>\r\n              <Dropdown.ItemText id=\"import-data\">\r\n                <label style={{width: '100%'}} htmlFor=\"import_tierlist\">Import from Json</label>\r\n                <br/>\r\n                <input style={{display: 'flex'}}type=\"file\" id=\"import_tierlist\" name=\"import_tierlist\" accept=\".json\" onChange={this.importFromJson}/>\r\n              </Dropdown.ItemText>\r\n            </DropdownButton>\r\n          </OverlayTrigger>\r\n\r\n          <button type=\"button\" onClick={() => this.showSearch(true)}>Search</button>\r\n        </Container>\r\n\r\n        <DragDropContext onDragEnd={this.onDragEnd}>\r\n          <div id=\"tierlist_outer\">\r\n            <div id=\"tierlist_holder\">\r\n              <Droppable droppableId=\"tiers\" direction=\"horizontal\" type=\"column\">\r\n                {provided => (\r\n                  <div\r\n                    {...provided.droppableProps}\r\n                    ref={provided.innerRef}\r\n                    key={refreshColumns}\r\n                    id=\"tierlist_inner\"\r\n                  >\r\n                    {this.state.columnOrder.map((columnId, index) => {\r\n                      const column = this.state.columns[columnId];\r\n                      return (\r\n                        <InnerList\r\n                          key={column.id}\r\n                          column={column}\r\n                          itemMap={this.state.items}\r\n                          index={index}\r\n                          updateHeader={this.updateColHeader}\r\n                          deleteHandler={this.removeCol}\r\n                          showDeleteButton={showDeleteButton}\r\n                        />\r\n                      );\r\n                    })}\r\n                    {provided.placeholder}\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </div>\r\n          </div>\r\n\r\n          <Offcanvas id=\"itempool-overlay\" show={showItemPool} onHide={() => this.showItems(false)} placement={'start'} scroll backdrop={false}>\r\n            <Offcanvas.Header closeButton closeVariant='white' style={{paddingBottom: \"0.5rem\"}}>\r\n              <Offcanvas.Title><h1 className=\"main-heading\">Items</h1></Offcanvas.Title>\r\n            </Offcanvas.Header>\r\n            <Offcanvas.Body style={{padding: 0}}>\r\n              <TrashCan />\r\n              <ItemPool items = {this.state.columns['item-pool'].itemIds.map(itemId => this.state.items[itemId])} />\r\n            </Offcanvas.Body>\r\n          </Offcanvas>\r\n        </DragDropContext>\r\n\r\n        <Offcanvas id=\"sidebar-overlay\" show={showSearchbar} onHide={() => this.showSearch(false)} placement={'end'} scroll backdrop={false}>\r\n          <Offcanvas.Header closeButton closeVariant='white' style={{paddingBottom: \"0.5rem\"}}>\r\n            <Offcanvas.Title><h1 className=\"main-heading\">Search</h1></Offcanvas.Title>\r\n          </Offcanvas.Header>\r\n          <Offcanvas.Body style={{padding: \"0.5rem 0 0 0\", overflowY: 'scroll'}}>\r\n            <SidebarSearch refreshSidebar={refreshSidebar}/>\r\n          </Offcanvas.Body>\r\n        </Offcanvas>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TierList","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport TierList from './tierlist/TierList';\nimport { TierListContext, initialData } from './tierlist/TierListContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './sidebar-styles.css';\n\nReactDOM.render(\n  <TierListContext.Provider value = {initialData}>\n    <Provider store={store}>\n      <TierList/>\n    </Provider>\n  </TierListContext.Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}